{"version":3,"sources":["reducers/globalReducer.js","reducers/tableReducer.js","reducers/index.js","styles/theme.js","styles/globalStyles.js","actions/globalActions.js","components/header/Header.jsx","components/cells/ColLabel.jsx","components/table/ColLabelRow.jsx","components/cells/RowLabel.jsx","components/cells/displayMachine.js","formulas/Token.js","library/utils.js","formulas/Lexer.js","formulas/formulaFunctions.js","formulas/ast.js","formulas/Parser.js","formulas/ReduxConnect.js","formulas/graph.js","formulas/Interpreter.js","formulas/index.js","actions/tableActions.js","components/cells/InputData.jsx","components/cells/ResultData.jsx","components/cells/CellData.jsx","components/table/DataRow.jsx","components/table/keyboardNavMachine.js","components/table/Table.jsx","App.jsx","Root.jsx","serviceWorker.js","index.js"],"names":["createReducer","activeCell","rows","columns","SET_ACTIVE_CELL","state","_ref","payload","SET_CELL_VALUE","location","data","DELETE_CELL_DATA","_ref2","appStoreFn","configureStore","reducer","global","globalReducer","table","tableReducer","breaks","xs","sm","md","lg","breakBump","queries","concat","from","breakPoint","upTo","theme","colors","text","cell","border","borderDark","labelBkg","primary","strong","field","background","globalStyles","css","setActiveCell","createAction","Root","Object","styled_base_browser_esm","target","name","styles","Header","react_default","a","createElement","InnerBorder","props","ColLabel","label","data-col","className","Row","ColLabelRow","colLabels","data-row","ColLabelRow_InnerBorder","Array","length","fill","map","_","i","cells_ColLabel","key","Wrapper","RowLabel","displayMachine","Machine","id","initial","states","static","focused","notFocused","on","EDITABLE_MODIFY","EDITABLE_REPLACE","editable","modify","replace","STATIC_FOCUSED","STATIC","Token","type","whitespace","arguments","undefined","classCallCheck","this","value","html","entries","reduce","prev","curr","BASE_CODE_POINT","codePointAt","getColumnNames","cols","names","prevNames","remainCols","newNames","outerLoop","_i","_prevNames","colName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","letter","push","err","return","toConsumableArray","parseLocation","_location$split","split","_location$split2","slicedToArray","col","row","charCodeAt","isNumber","numStr","isPeriodsAndDigits","Boolean","match","periodCount","TOKENS","EOF","UNKNOWN","EQUALS","COMMA","COLON","LPAREN","RPAREN","PLUS","MINUS","MULT","DIV","NUMBER","CELL","FUNCTION","TEXT","t","Rule","regex","groupIndex","token","index","lastIndex","input","exec","GRAMMAR","Lexer","char","initChar","markers","tokens","nextToken","isFormula","tokenTEXTorNUMBER","getWhitespace","_GRAMMAR","rule","setIndex","test","consume","tokenUNKNOWN","chars","isEOF","isSeparator","isWhitespace","join","count","fn","AVERAGE","Error","SUM","apply","COUNT","CONCAT","_len","args","_key","MAX","_len2","_key2","forEach","arg","TypeError","Math","max","MIN","_len3","_key3","min","POWER","_len4","_key4","base","exp","pow","SQRT","sqrt","_len5","_key5","POW","AST","_name","TextNode","textNode","_this","possibleConstructorReturn","getPrototypeOf","call","NumberNode","numberNode","_this2","setTokenValue","parseFloat","CellNode","_this3","UnaryOp","opNode","expr","_this4","evaluatedExpr","FuncOp","funcNode","argNodes","_this5","evaluatedArgs","getFunction","formulaFn","toUpperCase","BinaryOp","leftNode","rightNode","_this6","left","right","Parser","ast","peekType","number","equals","node","operator","term","includes","factor","unaryOp","enclosedExpr","func","lparen","rparen","ReduxConnect","APP_STORE","getState","cellRefs","formula","isFormulaValid","adjList","A-1","result","hasError","inNodes","Set","graph","Graph","adj","interpreter","vertex","source","cellLabel","Interpreter","interpret","newNodeAttr","add","error","cache","vertexData","lexer","getTokens","parser","parse","_visit","addVertex","errorResponse","errorMsg","message","nodeName","constructor","eval","isLocationValid","visit","childNode","_parseLocation","_parseLocation2","colIndex","rowIndex","clearCellData","dispatch","Promise","resolve","action","Input","InputData","_React$PureComponent","refInput","React","createRef","handleOnKeyDown","bind","assertThisInitialized","handleOnBlur","inherits","createClass","focusInputTag","current","focus","scrollLeft","scrollWidth","rawInputValue","inputValue","trim","isEnteredValid","errors","setCellData","event","onEscape","setNewValue","onCommit","stopPropagation","defaultValue","replaceValue","entered","ref","data-cell","data-location","onKeyDown","onBlur","PureComponent","mapDispatchToProps","connect","ownProps","DataTag","ResultData","refDataTag","focusDataTag","isFocused","onKeyDownEditable","style","whiteSpace","textOverflow","overflow","core_browser_esm","getStyle","tabIndex","onDoubleClick","CellData","displayState","initialState","displayService","onTransition","setState","resultOnDoubleClick","resultOnKeyDownEditable","inputOnEscape","inputOnCommit","start","stop","send","matches","cells_InputData","cells_ResultData","CellData_Wrapper","renderData","DataRow","rowNumber","DataRow_Row","cells_RowLabel","cells_CellData","isActive","getTargetLocation","colLabel","num","basePoint","codePoint","String","fromCodePoint","floor","reverse","getColumnLabel","rowLabel","context","endLocation","wasFocused","idle","MOVE_FOCUS","actions","focusTarget","invoke","src","ctx","setTimeout","document","querySelector","onDone","assign","setNewContext","calcTargetLocation","getKeyboardNavMachine","newContext","objectSpread","Grid","Table","keyboardNavMachine","focusService","handleTableOnClick","handleTableOnKeyDown","moveFocus","dataset","table_ColLabelRow","table_DataRow","renderColLabelRow","renderDataRows","data-table","onClick","renderRows","_state$global","Container","Main","header_Header","table_Table","es","store","react_router_dom","emotion_theming_browser_esm","src_App","window","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7febc69e.chunk.js","sourcesContent":["import { createReducer } from 'redux-starter-kit'\n\nexport const INITIAL_STATE = {\n  activeCell: null,\n  rows: 14,\n  columns: 6,\n}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_ACTIVE_CELL': (state, { payload }) => {\n    state.activeCell = payload\n  },\n})\n","import { createReducer } from 'redux-starter-kit'\n\n\nconst INITIAL_STATE = {}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_CELL_VALUE': (state, { payload }) => {\n    const { location, data } = payload\n    state[location] = data\n  },\n\n  'DELETE_CELL_DATA': (state, { payload }) => {\n    delete state[payload]\n  }\n})\n","import { configureStore } from 'redux-starter-kit'\n\nimport globalReducer from './globalReducer'\nimport tableReducer from './tableReducer'\n\n\nconst appStoreFn = () => (\n  configureStore({\n    reducer: {\n      global: globalReducer,\n      table: tableReducer,\n    }\n  })\n)\n\n\nexport default appStoreFn\n","const colors = {\n  text: '#3D3D3D',\n  cell: {\n    border: '#dfdfdf',\n    borderDark: '#CCC',\n    labelBkg: '#F5F5F5'\n  },\n  primary: {\n    strong: '#E10D75'\n  },\n  field: {\n    background: '#F0F0F0',\n  },\n}\n\nconst breaks = {\n  xs: 0,\n  sm: 420,\n  md: 900,\n  lg: 1200,\n}\n\nconst breakBump = {\n  xs: 'sm',\n  sm: 'md',\n  md: 'lg',\n}\n\nconst queries = {\n  xs: `@media (max-width: ${breaks.sm - 1}px)`,\n  sm: `@media (min-width: ${breaks.sm}px) and (max-width: ${breaks.md - 1}px)`,\n  md: `@media (min-width: ${breaks.md}px) and (max-width: ${breaks.lg - 1}px)`,\n  lg: `@media (min-width: ${breaks.lg}px)`,\n  from: (breakPoint) => (`@media (min-width: ${breaks[breakPoint]}px)`),\n  upTo: (breakPoint) => (`@media (max-width: ${breaks[ breakBump[breakPoint] ] - 1}px)`),\n}\n\nconst theme = {\n  colors,\n  breaks,\n  queries,\n}\n\nexport default theme\n","/* @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nimport theme from './theme'\n\n\nconst globalStyles = css`\n  body {\n    color: ${theme.colors.text};\n    line-height: 1.3em;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  table, th, td {\n    border: 0;\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n\n  td {\n    padding: 0;\n    line-height: 1.2em;\n  }\n\n  p, h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n`\n\nexport default globalStyles\n","import { createAction } from 'redux-starter-kit'\n\n\nexport const setActiveCell = createAction('SET_ACTIVE_CELL')\n","import React from 'react'\nimport styled from '@emotion/styled'\n\n\nconst Root = styled.header`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0 30px;\n`\n\nfunction Header() {\n  return (\n    <Root>\n      <h3>Spreadsheet App</h3>\n    </Root>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n  font-size: 12px;\n`\n\nfunction ColLabel({ label }) {\n  return (\n    <InnerBorder\n      data-col={label}\n      className='col-label-width col-label-height'\n    >\n      {label}\n    </InnerBorder>\n  )\n}\n\nColLabel.propTypes = {\n  label: PropTypes.string,\n}\n\nexport default ColLabel\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport ColLabel from '../cells/ColLabel'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction ColLabelRow({ colLabels }) {\n  const renderCornerCell = () => (\n    <InnerBorder\n      className='row-label-width col-label-height'\n    />\n  )\n\n  const renderLabelCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => (\n      <ColLabel\n        key={i}\n        label={colLabels[i]}\n      />\n    )\n  ))\n\n  return (\n    <Row\n      data-row='header'\n    >\n      {renderCornerCell()}\n      {renderLabelCells()}\n    </Row>\n  )\n}\n\nColLabelRow.propTypes = {\n  colLabels: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default ColLabelRow\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst Wrapper = styled.div`\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction RowLabel({ label }) {\n  return (\n    <Wrapper\n      data-row={label}\n      className='row-label-width row-label-height'\n    >\n      {label}\n    </Wrapper>\n  )\n}\n\nRowLabel.propTypes = {\n  label: PropTypes.number,\n}\n\nexport default RowLabel\n","import { Machine } from 'xstate'\n\n\nconst displayMachine = Machine({\n  id: 'cell',\n  initial: 'static',\n  states: {\n    static: {\n      initial: 'notFocused',\n      states: {\n        focused: {},\n        notFocused: {}\n      },\n      on: {\n        EDITABLE_MODIFY: {\n          target: 'editable.modify'\n        },\n        EDITABLE_REPLACE: {\n          target: 'editable.replace'\n        },\n      },\n    },\n    editable: {\n      states: {\n        modify: {},\n        replace: {},\n      },\n      on: {\n        STATIC_FOCUSED: {\n          target: 'static.focused'\n        },\n        STATIC: {\n          target: 'static'\n        },\n      },\n    },\n  }\n})\n\nexport default displayMachine\n","class Token {\n  constructor(type, text, whitespace='') {\n    this.type = type\n    this.text = text\n    this.value = null\n    this.html = null\n    this.whitespace = whitespace\n  }\n\n  _repr() {\n    return Object\n      .entries(this)\n      .reduce((prev, curr) => {\n        if (curr[1] !== null) {\n          prev[curr[0]] = curr[1]\n        }\n\n        return prev\n      }, {})\n  }\n}\n\nexport default Token\n","const BASE_CODE_POINT = 'A'.codePointAt(0)\n\nexport function buildUrl(baseUrl, query={}) {\n  const urlQuery = Object.entries(query).map(([key, val]) => `${key}=${val}`).join('&')\n  return [baseUrl.trim(), urlQuery].join('?')\n}\n\nexport function clamp(value, min, max) {\n  return Math.min( Math.max(value, min), max )\n}\n\nexport function getRangeArray(min, max, isString=false) {\n  const range = []\n\n  for (let num = min; num <= max; num++) {\n    range.push( isString ? num.toString() : num )\n  }\n\n  return range\n}\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms))\n\nexport function getColumnNames(cols) {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let names = []\n  let prevNames = ['']\n  let remainCols = cols\n\n  while (remainCols > 0) {\n    const newNames = []\n\n    outerLoop:\n    for (let colName of prevNames) {  \n      for (let letter of alphabet) {\n        if (remainCols === 0)  { break outerLoop }\n        newNames.push(`${colName}${letter}`)\n        remainCols -= 1\n      }\n    }\n\n    prevNames = newNames\n    names = [...names, ...newNames]\n  }\n\n  return names\n}\n\nexport function getCellNames(rows, cols) {\n  const names = []\n  let colNames = getColumnNames(cols)\n\n  for (let row=1; row <= rows; row++) {\n    for (let col of colNames) {\n      names.push(`${col}-${row}`)\n    }\n  }\n\n  return names\n}\n\nexport function getColumnPosition(colLabel) {\n  const letters = colLabel.split('')\n  const oneBase = letters.reduce((prev, letter) => (\n    prev * 26 + letter.charCodeAt(0) - BASE_CODE_POINT + 1\n  ), 0)\n\n  return oneBase - 1\n}\n\nexport function getColumnLabel(num) {\n  const label = []\n  const basePoint = BASE_CODE_POINT\n  let curr = num + 1\n\n  do {\n    curr -= 1\n    const letterPosition = curr % 26\n    const codePoint = basePoint + letterPosition\n    const letter = String.fromCodePoint(codePoint)\n    label.push(letter)\n\n    curr = Math.floor(curr / 26)\n  } while (curr > 0)\n\n  return label.reverse().join('')\n}\n\nexport function parseLocation(location) {\n  let [col, row] = location.split('-')\n  const colIndex = getColumnPosition(col)\n  const rowIndex = +row - 1\n\n  return [colIndex, rowIndex]\n}\n\nexport function isNumber(numStr) {\n  const isPeriodsAndDigits = Boolean(numStr.match(/^[.\\d]+$/))\n  const periodCount = (numStr.match(/\\./g) || []).length\n\n  if (!isPeriodsAndDigits) { return false }\n  if (periodCount > 1) { return false }\n  if (numStr.length === 1 && numStr[0] === '.') { return false }\n  return true\n}\n\n","import Token from './Token'\nimport { isNumber } from '~/library/utils'\n\n\nconst TOKENS = {\n  // internal\n  EOF: 'EOF',\n  UNKNOWN: 'UNKNOWN',\n  // structure\n  EQUALS: 'EQUALS',\n  COMMA: 'COMMA',\n  COLON: 'COLON',\n  LPAREN: 'LPAREN',\n  RPAREN: 'RPAREN',\n  // operators\n  PLUS: 'PLUS',\n  MINUS: 'MINUS',\n  MULT: 'MULT',\n  DIV: 'DIV',\n  // entities\n  NUMBER: 'NUMBER',\n  CELL: 'CELL',\n  FUNCTION: 'FUNCTION',\n  TEXT: 'TEXT',\n}\n\nconst t = TOKENS\n\nclass Rule {\n  constructor(regex, groupIndex, token) {\n    this.regex = regex\n    this.groupIndex = groupIndex\n    this.token = token\n  }\n\n  setIndex(index) {\n    this.regex.lastIndex = index\n  }\n\n  test(input) {\n    return this.regex.exec(input)\n  }\n}\n\nconst GRAMMAR = [\n  // internal\n  new Rule(/=/g, 0, t.EQUALS),\n  new Rule(/,/g, 0, t.COMMA),\n  new Rule(/:/g, 0, t.COLON),\n  new Rule(/\\(/g, 0, t.LPAREN),\n  new Rule(/\\)/g, 0, t.RPAREN),\n  // operators\n  new Rule(/\\+/g, 0, t.PLUS),\n  new Rule(/\\-/g, 0, t.MINUS), // eslint-disable-line\n  new Rule(/\\*/g, 0, t.MULT),\n  new Rule(/\\//g, 0, t.DIV),\n  // multi-character\n  new Rule(/[\\d\\.]+/g, 0, t.NUMBER), // eslint-disable-line\n  new Rule(/[a-z]+[\\d]+/gi, 0, t.CELL),\n  new Rule(/([a-z]+)\\(/gi, 1, t.FUNCTION),\n]\n\n\nclass Lexer {\n  constructor(input) {\n    this.input = input\n    this.index = 0\n    this.char = this.initChar(input)\n    this.markers = []\n    this.tokens = []\n  }\n\n  getTokens() {\n    while (this.char !== t.EOF) {\n      const token = this.nextToken()\n      this.tokens.push(token)\n    }\n\n    return this.tokens\n  }\n\n  nextToken() {\n    if (this.char === t.EOF) {\n      return new Token(t.EOF, t.EOF)\n    }\n\n    if (!this.isFormula()) {\n      return this.tokenTEXTorNUMBER()\n    }\n\n    const whitespace = this.getWhitespace()\n    let token\n\n    for (let rule of GRAMMAR) {\n      rule.setIndex(this.index)\n      const match = rule.test(this.input)\n\n      if (match && match.index === this.index) {\n        const text = match[rule.groupIndex]\n        token = new Token(rule.token, text, whitespace)\n        this.index += text.length - 1\n        this.consume()\n        break\n      }\n    }\n\n    if (!token) {\n      token = this.tokenUNKNOWN(whitespace)\n    }\n\n    return token\n  }\n\n  initChar(input) {\n    if (this.input.length === 0) {\n      this.input = '0'\n    }\n\n    return input[this.index]\n  }\n\n  tokenUNKNOWN(whitespace) {\n    const chars = []\n\n    while (!(this.isEOF() || this.isSeparator() || this.isWhitespace())) {\n      chars.push(this.char)\n      this.consume()\n    }\n\n    const text = chars.join('')\n    return new Token(t.UNKNOWN, text, whitespace)\n  }\n\n  tokenTEXTorNUMBER() {\n    let token\n\n    if (isNumber(this.input)) {\n      token = new Token(t.NUMBER, this.input)\n    } else {\n      token = new Token(t.TEXT, this.input)\n    }\n\n    this.index = this.input.length - 1\n    this.consume()\n    return token\n  }\n\n  consume() {\n    this.index++\n\n    if (this.index < this.input.length) {\n      this.char = this.input[this.index]\n    } else {\n      this.char = t.EOF\n    }\n  }\n\n  isFormula() {\n    return this.input[0] === '='\n  }\n\n  isEOF() {\n    return this.char === t.EOF\n  }\n\n  isWhitespace() {\n    return !this.isEOF() && Boolean(this.char.match(/\\s/))\n  }\n\n  isSeparator() {\n    return Boolean(this.char.match(/[\\(\\)\\+\\-\\/\\*]/)) // eslint-disable-line\n  }\n\n  getWhitespace() {\n    let count = 0\n\n    while (this.isWhitespace()) {\n      count++\n      this.consume()\n    }\n\n    return Array(count).fill(' ').join('')\n  }\n}\n\nexport default Lexer\nexport { Rule, GRAMMAR, TOKENS, Lexer }\n","const fn = {\n  AVERAGE: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    return this.SUM(...args) / this.COUNT(...args)\n  },\n\n  CONCAT: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    return args.reduce((prev, curr) => (prev + curr), '')\n  },\n\n  COUNT: (...args) => args.length,\n\n  MAX: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    args.forEach(arg => {\n      if (typeof arg !== 'number') {\n        throw new TypeError(`${arg} is not a number`)\n      }\n    })\n\n    return Math.max(...args)\n  },\n\n  MIN: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    args.forEach(arg => {\n      if (typeof arg !== 'number') {\n        throw new TypeError(`${arg} is not a number`)\n      }\n    })\n\n    return Math.min(...args)\n  },\n\n  POWER: function(...args) {\n    if (args.length !== 2) {\n      throw new Error('Formula takes only two elements')\n    }\n  \n    const [base, exp] = args\n    return Math.pow(base, exp)\n  },\n\n  SQRT: function(...args) {\n    if (args.length !== 1) {\n      throw new Error(`Formula takes only one element`)\n    }\n\n    return Math.sqrt(args[0])\n  },\n\n  SUM: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    return args.reduce((prev, curr) => prev + curr)\n  },\n}\n\n// aliases\nfn.POW = fn.POWER\n\nexport default fn\n","import { TOKENS as t } from './Lexer'\nimport formulaFn from './formulaFunctions'\nimport { isNumber } from '~/library/utils'\n\n\nclass AST {\n  constructor(name) {\n    this._name = name\n  }\n\n  eval() {\n    throw new Error('Implement method.')\n  }\n}\n\nclass TextNode extends AST {\n  constructor(textNode) {\n    super('TextNode')\n    this.textNode = textNode\n  }\n\n  eval() {\n    return this.textNode.text\n  }\n}\n\nclass NumberNode extends AST {\n  constructor(numberNode) {\n    super('NumberNode')\n    this.numberNode = numberNode\n  }\n\n  get value() {\n    return this.numberNode.value\n  }\n\n  eval() {\n    if (isNumber(this.numberNode.text)) {\n      this.setTokenValue()\n      return this.value\n    } else {\n      throw new Error(`Invalid number \"${this.numberNode.text}\"`)\n    }\n  }\n\n  setTokenValue() {\n    const value = parseFloat(this.numberNode.text)\n    this.numberNode.value = value\n  }\n}\n\nclass CellNode extends AST {\n  constructor(cell) {\n    super('CellNode')\n    this.cell = cell\n  }\n\n  eval() {\n    throw new Error('Not yet implemented')\n  }\n}\n\nclass UnaryOp extends AST {\n  constructor(opNode, expr) {\n    super('UnaryOp')\n    this.opNode = opNode\n    this.expr = expr\n  }\n\n  eval(evaluatedExpr) {\n    if (this.opNode.type === t.PLUS) {\n      return evaluatedExpr\n    } else if (this.opNode.type === t.MINUS) {\n      return -evaluatedExpr\n    }\n  }\n}\n\nclass FuncOp extends AST {\n  constructor(funcNode, argNodes) {\n    super('FuncOp')\n    this.funcNode = funcNode\n    this.argNodes = argNodes\n  }\n\n  eval(evaluatedArgs) {\n    const fn = this.getFunction()\n    return fn(...evaluatedArgs)\n  }\n\n  getFunction() {\n    const fn = formulaFn[this.funcNode.text.toUpperCase()]\n\n    if (!fn) {\n      throw new Error(`Formula ${this.funcNode.text} not found`)\n    } else {\n      return fn\n    }\n  }\n}\n\nclass BinaryOp extends AST {\n  constructor(leftNode, opNode, rightNode) {\n    super('BinaryOp')\n    this.leftNode = leftNode\n    this.opNode = opNode\n    this.rightNode = rightNode\n  }\n\n  eval(left, right) {\n    switch(this.opNode.type) {\n      case t.PLUS:\n        return left + right\n      case t.MINUS:\n        return left - right\n      case t.DIV:\n        if (right === 0) {\n          throw new Error(`Division by zero: ${left}/${right}`)\n        } else {\n          return left / right\n        }\n      case t.MULT:\n        return left * right\n      default:\n        throw new Error(`Unsupported operator \"${this.token.text}\"`)\n    }\n  }\n}\n\nexport {\n  TextNode,\n  NumberNode,\n  CellNode,\n  BinaryOp,\n  UnaryOp,\n  FuncOp,\n}\n","import { TOKENS as t } from './Lexer'\nimport { TextNode, NumberNode, CellNode, BinaryOp, UnaryOp, FuncOp } from './ast'\n\n\nclass Parser {\n  constructor(tokens) {\n    this.index = 0\n    this.tokens = tokens\n    this.curr = this.tokens[0]\n    this.ast = null\n  }\n\n  parse() {\n    switch (this.peekType()) {\n      case t.TEXT:\n        this.ast = this.text()\n        break\n      case t.NUMBER:\n        this.ast = this.number()\n        break\n      default:\n        this.equals()\n        this.ast = this.expr()\n        break\n    }\n\n    if (this.curr !== null) {\n      throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n    }\n\n    return this.ast\n  }\n\n  expr() {\n    // expr : term ( ( PLUS | MINUS ) term ) *\n    let node, operator, right\n\n    node = this.term()\n\n    while ( [t.PLUS, t.MINUS].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.term()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  term() {\n    // term : factor ( ( MULT | DIV ) factor ) *\n    let node, operator, right\n\n    node = this.factor()\n\n    while ( [t.MULT, t.DIV].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.factor()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  factor() {\n    // factor : ( PLUS | MINUS ) ( NUMBER | CELL )\n    //          | LPAREN expr RPAREN\n    //          | FUNCTION LPAREN list RPAREN\n    switch (this.peekType()) {\n      case t.PLUS:\n      case t.MINUS:\n        return this.unaryOp()\n      case t.NUMBER:\n        return this.number()\n      case t.CELL:\n        return this.cell()\n      case t.LPAREN:\n        return this.enclosedExpr()\n      case t.FUNCTION:\n        return this.func()\n      case t.RPAREN:\n        throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n      default:\n        throw new Error('Missing factor')\n    }\n  }\n\n  text() {\n    let node\n\n    if (this.peekType() !== t.TEXT) {\n      throw new Error('Missing string')\n    }\n\n    node = new TextNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  number() {\n    if (this.peekType() === t.NUMBER) {\n      const node = new NumberNode(this.curr)\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing number')\n    }\n  }\n\n  operator() {\n    if ([t.PLUS, t.MINUS, t.MULT, t.DIV].includes(this.peekType())) {\n      const node = this.curr\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing operator')\n    }\n  }\n\n  enclosedExpr() {\n    this.lparen()\n    const node = this.expr()\n    this.rparen()\n    return node\n  }\n\n  cell() {\n    if (this.peekType() !== t.CELL) {\n      throw new Error('Missing cell node')\n    }\n\n    const node = new CellNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  func() {\n    if (this.peekType() !== t.FUNCTION) {\n      throw new Error('Missing function')\n    }\n\n    const func = this.curr\n    this.consume()\n    this.lparen()\n    const args = this.args()\n    this.rparen()\n    return new FuncOp(func, args)\n  }\n\n  args() {\n    const args = []\n    let term = this.term()\n\n    args.push(term)\n\n    while (this.peekType() === t.COMMA) {\n      this.consume()\n      term = this.term()\n      args.push(term)\n    }\n\n    return args\n  }\n\n  equals() {\n    if (this.peekType() !== t.EQUALS) {\n      throw new Error('Missing equals sign')\n    }\n\n    this.consume()\n  }\n\n  lparen() {\n    if (this.peekType() !== t.LPAREN) {\n      throw new Error('Missing left parenthesis')\n    }\n\n    this.consume()\n  }\n\n  rparen() {\n    if (this.peekType() !== t.RPAREN) {\n      throw new Error('Missing right parenthesis')\n    }\n\n    this.consume()\n  }\n\n  unaryOp() {\n    if (![t.PLUS, t.MINUS].includes(this.peekType())) {\n      throw new Error('Missing unary operator')\n    }\n\n    const curr = this.curr\n    this.consume()\n    const node = new UnaryOp(curr, this.factor())\n    return node\n  }\n\n  consume() {\n    if (this.index < this.tokens.length - 1) {\n      this.index++\n      this.curr = this.tokens[this.index]\n    } else {\n      this.curr = null\n    }\n  }\n\n  peekType() {\n    return this.curr && this.curr.type\n  }\n}\n\nexport default Parser\n","import { APP_STORE } from '~/Root'\n\n\nclass ReduxConnect {\n  constructor() {\n    this.state = APP_STORE.getState()\n    this.table = this.state.table\n    this.global = this.state.global\n  }\n\n  get rows() {\n    return this.global.rows\n  }\n\n  get columns() {\n    return this.global.columns\n  }\n\n  getCellFormulaRefs(location) {\n    return this.table[location].cellRefs\n  }\n\n  getCellFormula(location) {\n    return this.table[location].formula\n  }\n\n  getCellValue(location) {\n    return this.table[location].value\n  }\n\n  getCellIsFormulaValid(location) {\n    return this.table[location].isFormulaValid\n  }\n}\n\nexport default ReduxConnect\n","import Interpreter from './Interpreter'\n\n\nconst adjList = {\n  'A-1': {\n    result: null,\n    ast: null,\n    hasError: false,\n    inNodes: new Set(),\n  }\n}\n\nclass Graph {\n  constructor(adj, interpreter) {\n    this.adj = adj\n    this.interpreter = interpreter\n  }\n\n  addVertex(vertex, data) {\n    this.adj[vertex] = data\n  }\n\n  eval(node, source) {\n    const cellLabel = node.text\n    let result = 0\n\n    if (cellLabel in adjList) {\n      const interpreter = new Interpreter(source)\n      result = interpreter.interpret(node.cell)\n    } else {\n      adjList[cellLabel] = this.newNodeAttr()\n    }\n\n    adjList[cellLabel].inNodes.add(source)\n    return result\n  }\n  \n  dfs() {\n\n  }\n\n  newNodeAttr() {\n    return {\n      result: null,\n      ast: null,\n      hasError: false,\n      inNodes: new Set()\n    }\n  }\n}\n\nconst graph = new Graph(adjList)\n\n\nexport default graph\nexport {\n  Graph,\n}\n","import { Lexer } from './Lexer'\nimport Parser from './Parser'\nimport { parseLocation } from '~/library/utils'\nimport ReduxConnect from './ReduxConnect'\nimport graph from '~/formulas/graph'\n\n\nconst ERR_DIVISION_BY_ZERO = '#DIV/0!'\nconst ERR_CIRCULAR_REFERENCE = '#REF!'\nconst ERR_GENERIC = '#ERROR!'\n\nclass Interpreter {\n  constructor(location) {\n    this.location = location\n    this.inNodes = new Set()\n    this.state = new ReduxConnect()\n    this.tokens = null\n    this.ast = null\n    this.result = null\n    this.error = null\n    this.cache = {}\n  }\n\n  interpret(input) {\n    let vertexData\n\n    if (input === undefined) {\n      throw new Error('Missing input argument')\n    }\n\n    vertexData = {\n      hasError: false,\n      inNodes: new Set(),\n    }\n\n    try {\n      const lexer = new Lexer(input)\n      this.tokens = lexer.getTokens()\n      const parser = new Parser(this.tokens)\n      this.ast = vertexData.ast = parser.parse()\n      this.result = vertexData.result = this._visit(this.ast)\n      graph.addVertex(this.location, vertexData)\n    } catch (error) {\n      this.result = null\n      this.error = error\n      vertexData.hasError = true\n      graph.addVertex(this.location, vertexData)\n    }\n\n    if (this.error) {\n      return this.errorResponse()\n    } else {\n      return this.result\n    }\n  }\n\n  errorResponse() {\n    const { message: errorMsg } = this.error\n\n    if (errorMsg.match(/division by zero/i)) {\n      return ERR_DIVISION_BY_ZERO\n    } else if (errorMsg.match(/cirular reference/i)) {\n      return ERR_CIRCULAR_REFERENCE\n    } else {\n      return ERR_GENERIC\n    }\n  }\n\n  visit(ast) {\n    this.ast = ast\n    this.result = this._visit(ast)\n    return this.result\n  }\n\n  _visit(node) {\n    switch (node._name) {\n      case 'NumberNode':\n        return this.NumberNode(node)\n      case 'CellNode':\n        return this.CellNode(node)\n      case 'FuncOp':\n        return this.FuncOp(node)\n      case 'BinaryOp':\n        return this.BinaryOp(node)\n      case 'UnaryOp':\n        return this.UnaryOp(node)\n      case 'TextNode':\n        return this.TextNode(node)\n      default:\n        const nodeName = node._name || (node.constructor || {}).name\n        throw new Error(`Unrecognized AST node ${nodeName}`)\n    }\n  }\n\n  TextNode(node) {\n    return node.eval()\n  }\n\n  NumberNode(node) {\n    return node.eval()\n  }\n\n  CellNode(node) {\n    const { text: location } = node.cell\n    let interpreter, ast, result\n\n    if (location === this.location) {\n      throw new Error('Circular reference')\n    }\n\n    if (!this.isLocationValid(location)) {\n      throw new Error('Location out of bounds')\n    }\n\n    if (this.cache[location] !== undefined) {\n      return this.cache[location]\n    }\n\n    interpreter = new Interpreter(location)\n    ast = graph[location].ast\n    result = interpreter.visit(ast)\n    this.cache[location] = result\n    return result\n  }\n\n  UnaryOp(node) {\n    const result = this._visit(node.expr)\n    return node.eval(result)\n  }\n\n  FuncOp(node) {\n    const evaluatedArgs = []\n\n    for (let childNode of node.argNodes) {\n      const result = this._visit(childNode)\n      evaluatedArgs.push(result)\n    }\n\n    return node.eval(evaluatedArgs)\n  }\n\n  BinaryOp(node) {\n    const left = this._visit(node.leftNode)\n    const right = this._visit(node.rightNode)\n    return node.eval(left, right)\n  }\n\n  isLocationValid(location) {\n    const [colIndex, rowIndex] = parseLocation(location)\n\n    if (Math.min(colIndex, rowIndex) < 0) { return false }\n    if (colIndex >= this.state.columns) { return false }\n    if (rowIndex >= this.state.rows) { return false }\n    return true\n  }\n}\n\nexport default Interpreter\nexport {\n  ERR_DIVISION_BY_ZERO,\n  ERR_CIRCULAR_REFERENCE,\n  ERR_GENERIC,\n}\n","import Interpreter from './Interpreter'\n\nexport default Interpreter\n","export function setCellData(location, entered, isEnteredValid, result) {\n  return {\n    type: 'SET_CELL_VALUE',\n    payload: {\n      location,\n      data: {\n        entered,\n        result,\n        isEnteredValid,\n      }\n    }\n  }\n}\n\nexport function clearCellData(location) {\n  return (dispatch, getState) => {\n    const value = getState().table[location]\n\n    if (value === undefined) { return Promise.resolve() }\n\n    let action = {\n      type: 'DELETE_CELL_DATA',\n      payload: location,\n    }\n\n    return Promise.resolve(dispatch(action))\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect }  from 'react-redux'\n\nimport Interpreter from '~/formulas'\nimport { setCellData, clearCellData } from '~/actions/tableActions'\nimport { isNumber } from '~/library/utils'\n\n\nconst Input = styled.input`\n  display: flex;\n  align-items: center;\n  outline: none;\n  height: 100%;\n  width: 100%;\n  border: 2px solid salmon;\n  padding: 2px;\n  box-sizing: border-box;\n`\n\nexport class InputData extends React.PureComponent {\n  static propTypes = {\n    // props\n    replaceValue: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired,\n    onEscape: PropTypes.func.isRequired,\n    onCommit: PropTypes.func.isRequired,\n    // redux\n    clearCellData: PropTypes.func.isRequired,\n    entered: PropTypes.string,\n    setCellData: PropTypes.func.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n  }\n\n  refInput = React.createRef()\n\n  componentDidMount() {\n    this.focusInputTag()\n  }\n\n  focusInputTag() {\n    const input = this.refInput.current\n    input.focus()\n    input.scrollLeft = input.scrollWidth\n  }\n\n  setNewValue(rawInputValue) {\n    const inputValue = rawInputValue.trim()\n    const { location } = this.props\n    let isFormula, result\n    let isEnteredValid = true\n\n    if (inputValue.length === 0) {\n      this.props.clearCellData(location)\n      return\n    }\n\n    isFormula = inputValue[0] === '='\n\n    if (isFormula) {\n      const interpreter = new Interpreter(this.props.location)\n      result = interpreter.interpret(inputValue)\n      isEnteredValid = interpreter.errors !== null\n    } else if (isNumber(inputValue)) {\n      result = parseFloat(inputValue)\n    } else {\n      result = inputValue\n    }\n\n    this.props.setCellData(location, inputValue, isEnteredValid, result)\n  }\n\n  handleOnKeyDown(event) {\n    const { key } = event\n\n    if (key === 'Escape') {\n      this.props.onEscape()\n    } else if (key === 'Enter') {\n      this.setNewValue(event.target.value)\n      this.props.onCommit()\n    } else {\n      event.stopPropagation()\n    }\n  }\n\n  handleOnBlur(event) {\n    this.setNewValue(event.target.value)\n    this.props.onCommit()\n  }\n\n  render() {\n    const defaultValue = this.props.replaceValue ? null : this.props.entered\n\n    return (\n      <Input\n        ref={this.refInput}\n        data-cell='input'\n        data-location={this.props.location}\n        defaultValue={defaultValue}\n        onKeyDown={this.handleOnKeyDown}\n        onBlur={this.handleOnBlur}\n      />\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const entered = cell ? cell.entered : ''\n  return { entered }\n}\nconst mapDispatchToProps = { setCellData, clearCellData }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputData)\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { clearCellData } from '~/actions/tableActions'\nimport { setActiveCell } from '~/actions/globalActions'\n\n\nconst DataTag = styled.div`\n  display: flex;\n  align-items: center;\n  outline: none;\n  border: 2px solid transparent;\n  line-height: 1.1em;\n  height: 100%;\n  width: 100%;\n  padding: 2px;\n\n  :focus {\n    border: 2px solid salmon;\n  }\n`\n\nexport class ResultData extends React.PureComponent {\n  static propTypes = {\n    // props\n    isFocused: PropTypes.bool,\n    location: PropTypes.string.isRequired,\n    onDoubleClick: PropTypes.func.isRequired,\n    onKeyDownEditable: PropTypes.func.isRequired,\n    // redux\n    clearCellData: PropTypes.func.isRequired,\n    setActiveCell: PropTypes.func.isRequired,\n    result: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n  }\n\n  refDataTag = React.createRef()\n\n  componentDidMount() {\n    this.focusDataTag()\n  }\n\n  focusDataTag() {\n    if (this.props.isFocused) { this.refDataTag.current.focus() }\n  }\n\n  handleOnKeyDown({ key }) {\n    this.props.setActiveCell(this.props.location)\n\n    if (['Delete', 'Backspace'].includes(key)) {\n      const valueStr = '' + this.props.result\n\n      if (valueStr.length > 0) {\n        this.props.clearCellData(this.props.location)\n      }\n      // key pressed is a printable symbol, ex: 'a', '1', ','\n      // can be further refined, but for now it's fine\n    } else if (key.length === 1) {\n      this.props.onKeyDownEditable()\n    }\n  }\n\n  getStyle() {\n    let style = {}\n\n    if (typeof this.props.result === 'number') {\n      style = {\n        whiteSpace: 'nowrap',\n        textOverflow: 'clip',\n        overflow: 'hidden',\n      }\n    }\n\n    return style\n  }\n\n  render() {\n    return (\n      <DataTag\n        ref={this.refDataTag}\n        data-cell='result'\n        data-location={this.props.location}\n        css={this.getStyle()}\n        tabIndex='0'\n        onKeyDown={this.handleOnKeyDown}\n        onDoubleClick={this.props.onDoubleClick}\n      >\n        {this.props.result}\n      </DataTag>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const result = cell ? cell.result : ''\n  return { result }\n}\n\nconst mapDispatchToProps = { clearCellData, setActiveCell }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultData)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { interpret } from 'xstate'\n\nimport displayMachine from './displayMachine'\nimport InputData from './InputData'\nimport ResultData from './ResultData'\n\n\nconst Wrapper = styled.div`\n  cursor: cell;\n  font-size: 13px;\n  border-right: 1px solid ${props => props.theme.colors.cell.border};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.border};\n`\nclass CellData extends React.PureComponent {\n  static propTypes = {\n    location: PropTypes.string.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.resultOnDoubleClick = this.resultOnDoubleClick.bind(this)\n    this.resultOnKeyDownEditable = this.resultOnKeyDownEditable.bind(this)\n    this.inputOnEscape = this.inputOnEscape.bind(this)\n    this.inputOnCommit = this.inputOnCommit.bind(this)\n  }\n\n  state = {\n    displayState: displayMachine.initialState,\n  }\n\n  displayService = interpret(displayMachine)\n    .onTransition(displayState => this.setState({ displayState }))\n\n  componentDidMount() {\n    this.displayService.start()\n  }\n  \n  componentWillUnmount() {\n    this.displayService.stop()\n  }\n  \n  resultOnDoubleClick() {\n    this.displayService.send('EDITABLE_MODIFY')\n  }\n\n  resultOnKeyDownEditable() {\n    this.displayService.send('EDITABLE_REPLACE')\n  }\n\n  inputOnEscape() {\n    this.displayService.send('STATIC_FOCUSED')\n  }\n\n  inputOnCommit() {\n    this.displayService.send('STATIC')\n  }\n\n  renderData() {\n    const { displayState } = this.state\n\n    if (displayState.matches('editable')) {\n      return (\n        <InputData\n          replaceValue={displayState.matches('editable.replace')}\n          location={this.props.location}\n          onEscape={this.inputOnEscape}\n          onCommit={this.inputOnCommit}\n        />\n      )\n    } else {\n      return (\n        <ResultData\n          location={this.props.location}\n          onDoubleClick={this.resultOnDoubleClick}\n          onKeyDownEditable={this.resultOnKeyDownEditable}\n          isFocused={displayState.matches('static.focused')}\n        />\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Wrapper\n        className='row-label-height col-label-width'\n      >\n        {this.renderData()}\n      </Wrapper>\n    )\n  }\n}\n\nexport default CellData\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport RowLabel from '../cells/RowLabel'\nimport CellData from '../cells/CellData'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nfunction DataRow({ rowNumber, colLabels, activeCell }) {\n  const dataCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => {\n      const location = `${colLabels[i]}-${rowNumber}`\n\n      return (\n        <CellData\n          key={i}\n          isActive={activeCell === location}\n          location={location}\n        />\n      )\n    })\n  )\n\n  return (\n    <Row\n      data-row={rowNumber}\n    >\n      <RowLabel\n        label={rowNumber}\n      />\n      {dataCells()}\n    </Row>\n  )\n}\n\nDataRow.propTypes = {\n  rowNumber: PropTypes.number,\n  colLabels: PropTypes.arrayOf(PropTypes.string),\n  activeCell: PropTypes.string,\n}\n\nexport default DataRow\n\n","import { Machine, assign } from 'xstate'\n\nimport { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nfunction getTargetLocation({ rows, columns, rowIndex, colIndex, key }) {\n  switch (key) {\n    case 'ArrowUp':\n      rowIndex = Math.max(0, rowIndex - 1)\n      break\n    case 'ArrowRight':\n      colIndex = Math.min(columns - 1, colIndex + 1)\n      break\n    case 'ArrowDown':\n    case 'Enter':\n      rowIndex = Math.min(rows - 1, rowIndex + 1)\n      break\n    case 'ArrowLeft':\n      colIndex = Math.max(0, colIndex - 1)\n      break\n    default:\n      return null\n  }\n\n  const colLabel = getColumnLabel(colIndex)\n  const rowLabel = '' + (rowIndex + 1)\n\n  return `${colLabel}-${rowLabel}`\n}\n\nfunction focusTargetCell(ctx) {\n  if (!ctx.endLocation) { return Promise.resolve(false) }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const id = `[data-location=\"${ctx.endLocation}\"]`\n      const cell = document.querySelector(id)\n      if (cell) { cell.focus() }\n      resolve(true)\n    }, 0)\n  })\n}\n\nconst state = {\n  id: 'keyboardNav',\n  initial: 'idle',\n  context: {\n    columns: null,\n    rows: null,\n    key: null,\n    colIndex: null,\n    rowIndex: null,\n    endLocation: null,\n    wasFocused: false,\n  },\n  states: {\n    idle: {\n      on: {\n        'MOVE_FOCUS': {\n          actions: ['setNewContext', 'calcTargetLocation'],\n          target: 'focusTarget',\n        }\n      }\n    },\n    focusTarget: {\n      invoke: {\n        src: focusTargetCell,\n        onDone: {\n          actions: assign({ wasFocused: (ctx, event) => event.data }),\n          target: 'idle',\n        },\n      },\n    },\n  },\n}\n\nconst actions = {\n  actions: {\n    setNewContext: assign((ctx, { key, location }) => {\n      const [colIndex, rowIndex] = parseLocation(location)\n      return { colIndex, rowIndex, key }\n    }),\n    calcTargetLocation: assign({\n      endLocation: (ctx) => {\n        return getTargetLocation(ctx)\n      }\n    }),\n  },\n}\n\nfunction getKeyboardNavMachine(rows, columns) {\n  const newContext = {\n    ...state.context,\n    columns,\n    rows,\n  }\n\n  return Machine(state, actions, newContext)\n}\n\nexport {\n  state,\n  actions,\n  getTargetLocation,\n  focusTargetCell,\n}\n\nexport default getKeyboardNavMachine\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport { interpret } from 'xstate'\n\nimport ColLabelRow from './ColLabelRow'\nimport DataRow from './DataRow'\nimport { getColumnNames } from '~/library/utils'\nimport getKeyboardNavMachine from './keyboardNavMachine'\n\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n  border-top: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-left: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .row-label-width {\n    width: 34px;\n  }\n\n  .row-label-height {\n    min-height: 28px;\n  }\n\n  .col-label-width {\n    width: 140px;\n  }\n\n  .col-label-height {\n    min-height: 26px;\n  }\n`\n\nexport class Table extends React.PureComponent {\n  static propTypes = {\n    activeCell: PropTypes.string,\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleTableOnClick = this.handleTableOnClick.bind(this)\n    this.handleTableOnKeyDown = this.handleTableOnKeyDown.bind(this)\n    this.colLabels = getColumnNames(props.columns)\n  }\n\n  keyboardNavMachine = getKeyboardNavMachine(this.props.rows, this.props.columns)\n  focusService = interpret(this.keyboardNavMachine)\n\n  componentDidMount() {\n    this.focusService.start()\n  }\n\n  componentWillUnmount() {\n    this.focusService.stop()\n  }\n\n  handleTableOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleTableOnKeyDown(event) {\n    event.stopPropagation()\n    this.moveFocus(event.key, event.target.dataset.location)\n  }\n\n  moveFocus(key, location) {\n    this.focusService.send({ type: 'MOVE_FOCUS', key, location })\n  }\n\n  renderColLabelRow(i) {\n    return (\n      <ColLabelRow\n        key={i}\n        rows={this.props.rows}\n        colLabels={this.colLabels}\n      />\n    )\n  }\n\n  renderDataRows(rowNumber) {\n    return (\n      <DataRow\n      key={rowNumber}\n        rowNumber={rowNumber}\n        colLabels={this.colLabels}\n        activeCell={this.props.activeCell}\n      />\n    )\n  }\n\n  renderRows() {\n    return new Array(this.props.rows + 1).fill(0).map((_, i) => {\n      if (i === 0) {\n        return this.renderColLabelRow(i)\n      } else {\n        return this.renderDataRows(i)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Grid\n        data-table='app'\n        onClick={this.handleTableOnClick}\n        onKeyDown={this.handleTableOnKeyDown}\n      >\n        {this.renderRows()}\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { activeCell, rows, columns } = state.global\n  return { activeCell, rows, columns }\n}\n\nexport default connect(mapStateToProps)(Table)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\n\nimport { setActiveCell } from './actions/globalActions'\nimport Header from './components/header/Header'\nimport Table from './components/table/Table'\n\n\nconst Container = styled.div`\n  display: grid;\n  grid:\n    \"left-blank main right-blank\" 100vh\n    / auto minmax(auto, 1000px) auto;\n`\n\nconst Main = styled.main`\n  grid-area: main;\n`\n\nfunction App({ setActiveCell }) {\n  const handleOnClick = () => {\n    setActiveCell(null)\n  }\n\n  return (\n    <Container\n      onClick={handleOnClick}\n    >\n      <Main>\n        <Header />\n        <Table />\n      </Main>\n    </Container>\n  )\n}\n\nApp.propTypes = {\n  setActiveCell: PropTypes.func,\n}\n\nconst mapDispatchToProps = { setActiveCell }\n\nexport default connect(null, mapDispatchToProps)(App)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from 'emotion-theming'\nimport { Global } from '@emotion/core'\nimport 'sanitize.css'\n\nimport appStoreFn from './reducers/'\nimport globalStyles from './styles/globalStyles'\nimport theme from './styles/theme'\nimport App from './App'\n\n\nconst APP_STORE = appStoreFn()\n\n\nfunction Root() {\n  return (\n    <Provider store={APP_STORE}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Global styles={globalStyles} />\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default Root\nexport { \n  APP_STORE\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
{"version":3,"sources":["reducers/globalReducer.js","reducers/tableReducer.js","reducers/index.js","styles/theme.js","styles/globalStyles.js","actions/globalActions.js","components/header/Header.jsx","components/cell/displayMachine.js","actions/tableActions.js","formulas/Token.js","formulas/Lexer.js","formulas/formulaFunctions.js","formulas/ast.js","formulas/Parser.js","formulas/index.js","formulas/Interpreter.js","components/cell/InputData.jsx","components/cell/EvaluatedData.jsx","components/cell/CellData.jsx","library/utils.js","components/table/keyboardNavMachine.js","components/table/Table.jsx","App.jsx","Root.jsx","serviceWorker.js","index.js"],"names":["createReducer","activeCell","rows","columns","SET_ACTIVE_CELL","state","_ref","payload","SET_CELL_VALUE","location","value","formula","DELETE_CELL_VALUE","_ref2","appStoreFn","configureStore","reducer","global","globalReducer","table","tableReducer","breaks","xs","sm","md","lg","breakBump","queries","concat","from","breakPoint","upTo","theme","colors","text","cell","border","primary","strong","field","background","globalStyles","css","setActiveCell","createAction","Root","Object","styled_base_browser_esm","target","name","styles","Header","react_default","a","createElement","displayMachine","Machine","id","initial","states","static","focused","notFocused","on","EDITABLE_MODIFY","EDITABLE_REPLACE","editable","modify","replace","STATIC_FOCUSED","STATIC","setCellValue","clearCellValue","dispatch","getState","undefined","Promise","resolve","action","type","Token","whitespace","arguments","length","classCallCheck","this","html","entries","reduce","prev","curr","TOKENS","EOF","UNKNOWN","EQUALS","COMMA","COLON","LPAREN","RPAREN","PLUS","MINUS","MULT","DIV","NUMBER","CELL","FUNCTION","t","Rule","regex","groupIndex","token","index","lastIndex","input","exec","GRAMMAR","Lexer","grammar","char","markers","tokens","nextToken","push","getWhitespace","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","rule","setIndex","match","test","consume","err","return","tokenUNKNOWN","chars","isEOF","isSeparator","isWhitespace","word","join","Boolean","count","Array","fill","fn","AVERAGE","Error","SUM","apply","COUNT","CONCAT","_len","args","_key","MAX","_len2","_key2","forEach","arg","TypeError","Math","max","MIN","_len3","_key3","min","POWER","_len4","_key4","base","exp","pow","SQRT","sqrt","_len5","_key5","POW","AST","NumberNode","numberNode","_this","possibleConstructorReturn","getPrototypeOf","call","testPeriodCount","setTokenValue","periodCount","parseFloat","isNaN","UnaryOp","opNode","expr","_this2","evaluatedExpr","FuncOp","funcNode","argNodes","_this3","evaluatedArgs","getFunction","toConsumableArray","formulaFn","toUpperCase","BinaryOp","leftNode","rightNode","_this4","left","right","Parser","depth","equals","root","node","operator","term","includes","peekType","factor","unaryOp","number","enclosedExpr","func","lparen","rparen","Interpreter","ast","result","error","lexer","getTokens","parser","parse","visit","constructor","eval","childNode","Input","InputData","_React$PureComponent","refInput","React","createRef","handleOnKeyDown","bind","assertThisInitialized","handleOnBlur","inherits","createClass","key","focusInputTag","current","focus","scrollLeft","scrollWidth","rawValue","trim","props","cellValue","isFormula","evaluateFormula","interpreter","interpret","message","event","onEscape","setNewValue","onCommit","stopPropagation","defaultValue","replaceValue","ref","onKeyDown","onBlur","PureComponent","mapDispatchToProps","connect","ownProps","DataTag","EvaluatedData","refDataTag","focusDataTag","isFocused","onKeyDownEditable","tabIndex","onDoubleClick","Wrapper","CellData","displayState","initialState","displayService","onTransition","setState","evaluatedOnDoubleClick","evaluatedOnKeyDownEditable","inputOnEscape","inputOnCommit","start","stop","send","matches","cell_InputData","cell_EvaluatedData","renderData","BASE_CODE_POINT","codePointAt","getColumnNames","cols","names","prevNames","remainCols","newNames","outerLoop","_i","_prevNames","colName","letter","parseLocation","_location$split","split","_location$split2","slicedToArray","c","r","label","_label$split","_label$split2","col","charCodeAt","getColumnPosition","getTargetLocation","rowIndex","colIndex","colLabel","num","basePoint","codePoint","String","fromCodePoint","floor","reverse","getColumnLabel","rowLabel","context","endLocation","wasFocused","idle","MOVE_FOCUS","actions","focusTarget","invoke","src","ctx","setTimeout","document","querySelector","onDone","assign","data","setNewContext","_parseLocation","_parseLocation2","calcTargetLocation","getKeyboardNavMachine","newContext","objectSpread","RootTable","Td","Table","keyboardNavMachine","focusService","handleTableOnClick","handleTableOnKeyDown","columnNames","moveFocus","rowNumber","map","_","i","cell_CellData","isActive","renderDataCells","onClick","renderRows","_state$global","Container","Main","header_Header","table_Table","APP_STORE","es","store","react_router_dom","emotion_theming_browser_esm","core_browser_esm","src_App","window","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.87af0271.chunk.js","sourcesContent":["import { createReducer } from 'redux-starter-kit'\n\nexport const INITIAL_STATE = {\n  activeCell: null,\n  rows: 5,\n  columns: 5,\n}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_ACTIVE_CELL': (state, { payload }) => {\n    state.activeCell = payload\n  },\n})\n","import { createReducer } from 'redux-starter-kit'\n\n\nconst INITIAL_STATE = {}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_CELL_VALUE': (state, { payload }) => {\n    const { location, value, formula } = payload\n    state[location] = { value, formula }\n  },\n\n  'DELETE_CELL_VALUE': (state, { payload }) => {\n    delete state[payload]\n  }\n})\n","import { configureStore } from 'redux-starter-kit'\n\nimport globalReducer from './globalReducer'\nimport tableReducer from './tableReducer'\n\n\nconst appStoreFn = () => (\n  configureStore({\n    reducer: {\n      global: globalReducer,\n      table: tableReducer,\n    }\n  })\n)\n\n\nexport default appStoreFn\n","const colors = {\n  text: '#3D3D3D',\n  cell: {\n    border: 'lightgray'\n  },\n  primary: {\n    strong: '#E10D75'\n  },\n  field: {\n    background: '#F0F0F0',\n  },\n}\n\nconst breaks = {\n  xs: 0,\n  sm: 420,\n  md: 900,\n  lg: 1200,\n}\n\nconst breakBump = {\n  xs: 'sm',\n  sm: 'md',\n  md: 'lg',\n}\n\nconst queries = {\n  xs: `@media (max-width: ${breaks.sm - 1}px)`,\n  sm: `@media (min-width: ${breaks.sm}px) and (max-width: ${breaks.md - 1}px)`,\n  md: `@media (min-width: ${breaks.md}px) and (max-width: ${breaks.lg - 1}px)`,\n  lg: `@media (min-width: ${breaks.lg}px)`,\n  from: (breakPoint) => (`@media (min-width: ${breaks[breakPoint]}px)`),\n  upTo: (breakPoint) => (`@media (max-width: ${breaks[ breakBump[breakPoint] ] - 1}px)`),\n}\n\nconst theme = {\n  colors,\n  breaks,\n  queries,\n}\n\nexport default theme\n","/* @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nimport theme from './theme'\n\n\nconst globalStyles = css`\n  body {\n    color: ${theme.colors.text};\n    line-height: 1.3em;\n  }\n\n  table, th, td {\n    border: 0;\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n\n  td {\n    padding: 0;\n    line-height: 1.2em;\n  }\n\n  p, h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n`\n\nexport default globalStyles\n","import { createAction } from 'redux-starter-kit'\n\n\nexport const setActiveCell = createAction('SET_ACTIVE_CELL')\n","import React from 'react'\nimport styled from '@emotion/styled'\n\n\nconst Root = styled.header`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0 30px;\n`\n\nfunction Header() {\n  return (\n    <Root>\n      <h3>Spreadsheet App</h3>\n    </Root>\n  )\n}\n\nexport default Header\n","import { Machine } from 'xstate'\n\n\nconst displayMachine = Machine({\n  id: 'cell',\n  initial: 'static',\n  states: {\n    static: {\n      initial: 'notFocused',\n      states: {\n        focused: {},\n        notFocused: {}\n      },\n      on: {\n        EDITABLE_MODIFY: {\n          target: 'editable.modify'\n        },\n        EDITABLE_REPLACE: {\n          target: 'editable.replace'\n        },\n      },\n    },\n    editable: {\n      states: {\n        modify: {},\n        replace: {},\n      },\n      on: {\n        STATIC_FOCUSED: {\n          target: 'static.focused'\n        },\n        STATIC: {\n          target: 'static'\n        },\n      },\n    },\n  }\n})\n\nexport default displayMachine\n","import { createAction } from 'redux-starter-kit'\n\n\nexport const setCellValue = createAction('SET_CELL_VALUE')\n\nexport function clearCellValue(location) {\n  return (dispatch, getState) => {\n    const value = getState().table[location]\n\n    if (value === undefined) { return Promise.resolve() }\n\n    let action = {\n      type: 'DELETE_CELL_VALUE',\n      payload: location,\n    }\n\n    return Promise.resolve(dispatch(action))\n  }\n}\n","class Token {\n  constructor(type, text, whitespace='') {\n    this.type = type\n    this.text = text\n    this.value = null\n    this.html = null\n    this.whitespace = whitespace\n  }\n\n  _repr() {\n    return Object\n      .entries(this)\n      .reduce((prev, curr) => {\n        if (curr[1] !== null) {\n          prev[curr[0]] = curr[1]\n        }\n\n        return prev\n      }, {})\n  }\n}\n\nexport default Token\n","import Token from './Token'\n\nconst TOKENS = {\n  // internal\n  EOF: 'EOF',\n  UNKNOWN: 'UNKNOWN',\n  // structure\n  EQUALS: 'EQUALS',\n  COMMA: 'COMMA',\n  COLON: 'COLON',\n  LPAREN: 'LPAREN',\n  RPAREN: 'RPAREN',\n  // operators\n  PLUS: 'PLUS',\n  MINUS: 'MINUS',\n  MULT: 'MULT',\n  DIV: 'DIV',\n  // entities\n  NUMBER: 'NUMBER',\n  CELL: 'CELL',\n  FUNCTION: 'FUNCTION',\n}\n\nconst t = TOKENS\n\nclass Rule {\n  constructor(regex, groupIndex, token) {\n    this.regex = regex\n    this.groupIndex = groupIndex\n    this.token = token\n  }\n\n  setIndex(index) {\n    this.regex.lastIndex = index\n  }\n\n  test(input) {\n    return this.regex.exec(input)\n  }\n}\n\nconst GRAMMAR = [\n  // internal\n  new Rule(/=/g, 0, t.EQUALS),\n  new Rule(/,/g, 0, t.COMMA),\n  new Rule(/:/g, 0, t.COLON),\n  new Rule(/\\(/g, 0, t.LPAREN),\n  new Rule(/\\)/g, 0, t.RPAREN),\n  // operators\n  new Rule(/\\+/g, 0, t.PLUS),\n  new Rule(/\\-/g, 0, t.MINUS), // eslint-disable-line\n  new Rule(/\\*/g, 0, t.MULT),\n  new Rule(/\\//g, 0, t.DIV),\n  // multi-character\n  new Rule(/[\\d\\.]+/g, 0, t.NUMBER), // eslint-disable-line\n  new Rule(/[a-z]+[\\d]+/gi, 0, t.CELL),\n  new Rule(/([a-z]+)\\(/gi, 1, t.FUNCTION),\n]\n\n\nclass Lexer {\n  constructor(input, grammar) {\n    this.input = input\n    this.grammar = grammar\n    this.index = 0\n    this.char = input[this.index]\n    this.markers = []\n    this.tokens = []\n  }\n\n  getTokens() {\n    while (this.char !== t.EOF) {\n      const token = this.nextToken()\n      this.tokens.push(token)\n    }\n\n    return this.tokens\n  }\n\n  nextToken() {\n    if (this.char === t.EOF) {\n      return new Token(t.EOF, t.EOF)\n    }\n\n    // console.log('before whitespace', this.char, this.index)\n    const whitespace = this.getWhitespace()\n    let token\n\n    for (let rule of this.grammar) {\n      rule.setIndex(this.index)\n      const match = rule.test(this.input)\n\n      if (match && match.index === this.index) {\n        const text = match[rule.groupIndex]\n        token = new Token(rule.token, text, whitespace)\n        this.index += text.length - 1\n        this.consume()\n        break\n      }\n    }\n\n    if (!token) {\n      token = this.tokenUNKNOWN(whitespace)\n    }\n\n    return token\n  }\n\n  tokenUNKNOWN(whitespace) {\n    const chars = []\n\n    while (!(this.isEOF() || this.isSeparator() || this.isWhitespace())) {\n      chars.push(this.char)\n      this.consume()\n    }\n    \n    const word = chars.join('')\n    return new Token(t.UNKNOWN, word, whitespace)\n  }\n\n  consume() {\n    this.index++\n\n    if (this.index < this.input.length) {\n      this.char = this.input[this.index]\n    } else {\n      this.char = t.EOF\n    }\n  }\n\n  isEOF() {\n    return this.char === t.EOF\n  }\n\n  isWhitespace() {\n    return !this.isEOF() && Boolean(this.char.match(/\\s/))\n  }\n\n  isSeparator() {\n    return !this.isEOF() && Boolean(this.char.match(/[()+-/*]{1}/))\n  }\n\n  getWhitespace() {\n    let count = 0\n\n    while (this.isWhitespace()) {\n      count++\n      this.consume()\n    }\n\n    return Array(count).fill(' ').join('')\n  }\n}\n\nexport default Lexer\nexport { Rule, GRAMMAR, TOKENS, Lexer }\n","const fn = {\n  AVERAGE: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    return this.SUM(...args) / this.COUNT(...args)\n  },\n\n  CONCAT: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    return args.reduce((prev, curr) => (prev + curr), '')\n  },\n\n  COUNT: (...args) => args.length,\n\n  MAX: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    args.forEach(arg => {\n      if (typeof arg !== 'number') {\n        throw new TypeError(`${arg} is not a number`)\n      }\n    })\n\n    return Math.max(...args)\n  },\n\n  MIN: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    args.forEach(arg => {\n      if (typeof arg !== 'number') {\n        throw new TypeError(`${arg} is not a number`)\n      }\n    })\n\n    return Math.min(...args)\n  },\n\n  POWER: function(...args) {\n    if (args.length !== 2) {\n      throw new Error('Formula takes only two elements')\n    }\n  \n    const [base, exp] = args\n    return Math.pow(base, exp)\n  },\n\n  SQRT: function(...args) {\n    if (args.length !== 1) {\n      throw new Error(`Formula takes only one element`)\n    }\n\n    return Math.sqrt(args[0])\n  },\n\n  SUM: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    return args.reduce((prev, curr) => prev + curr)\n  },\n}\n\n// aliases\nfn.POW = fn.POWER\n\nexport default fn\n","import { TOKENS as t } from './Lexer'\nimport formulaFn from './formulaFunctions'\n\n\nclass AST {\n  eval() {\n    throw new Error('Implement method.')\n  }\n}\n\nclass NumberNode extends AST {\n  constructor(numberNode) {\n    super()\n    this.numberNode = numberNode\n  }\n\n  get value() {\n    return this.numberNode.value\n  }\n\n  eval() {\n    this.testPeriodCount()\n    this.setTokenValue()\n    return this.value\n  }\n\n  testPeriodCount() {\n    const { text } = this.numberNode\n    const periodCount = (text.match(/\\./g) || []).length\n\n    if (periodCount >= 2 || (periodCount === 1 && text.length === 1)) {\n      throw new Error(`Invalid number \"${this.numberNode.text}\"`)\n    }\n  }\n\n  setTokenValue() {\n    const value = parseFloat(this.numberNode.text)\n\n    if (isNaN(value)) {\n      throw new Error(`Invalid number \"${this.numberNode.text}\"`)\n    } else {\n      this.numberNode.value = value\n    }\n  }\n}\n\nclass UnaryOp extends AST {\n  constructor(opNode, expr) {\n    super()\n    this.opNode = opNode\n    this.expr = expr\n  }\n\n  eval(evaluatedExpr) {\n    if (this.opNode.type === t.PLUS) {\n      return evaluatedExpr\n    } else if (this.opNode.type === t.MINUS) {\n      return -evaluatedExpr\n    } else {\n      throw new Error('Unary operator is not \"+\" or \"-\"')\n    }\n  }\n}\n\nclass FuncOp extends AST {\n  constructor(funcNode, argNodes) {\n    super()\n    this.funcNode = funcNode\n    this.argNodes = argNodes\n  }\n\n  eval(evaluatedArgs) {\n    const fn = this.getFunction()\n    return fn(...evaluatedArgs)\n  }\n\n  getFunction() {\n    const fn = formulaFn[this.funcNode.text.toUpperCase()]\n\n    if (!fn) {\n      throw new Error(`Formula ${this.funcNode.text} not found`)\n    } else {\n      return fn\n    }\n  }\n}\n\nclass BinaryOp extends AST {\n  constructor(leftNode, opNode, rightNode) {\n    super()\n    this.leftNode = leftNode\n    this.opNode = opNode\n    this.rightNode = rightNode\n  }\n\n  eval(left, right) {\n    switch(this.opNode.type) {\n      case t.PLUS:\n        return left + right\n      case t.MINUS:\n        return left - right\n      case t.DIV:\n        if (right === 0) {\n          throw new Error(`Division by zero: ${left}/${right}`)\n        } else {\n          return left / right\n        }\n      case t.MULT:\n        return left * right\n      default:\n        throw new Error(`Unsupported operator \"${this.token.text}\"`)\n    }\n  }\n}\n\nexport {\n  NumberNode,\n  BinaryOp,\n  UnaryOp,\n  FuncOp,\n}\n","import { TOKENS as t } from './Lexer'\nimport { BinaryOp, UnaryOp, FuncOp, NumberNode } from './ast'\n\n\nclass Parser {\n  constructor(tokens) {\n    this.index = 0\n    this.tokens = tokens\n    this.curr = tokens[this.index]\n    this.depth = 0\n  }\n\n  parse() {\n    this.equals()\n    const root = this.expr()\n\n    if (this.curr !== null) {\n      throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n    }\n\n    if (this.depth !== 0) {\n      throw new Error('Unbalanced expression')\n    }\n\n    return root\n  }\n\n  expr() {\n    // expr : term ( ( PLUS | MINUS ) term ) *\n    let node, operator, right\n\n    node = this.term()\n\n    while ( [t.PLUS, t.MINUS].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.term()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  term() {\n    // term : factor ( ( MULT | DIV ) factor ) *\n    let node, operator, right\n\n    node = this.factor()\n\n    while ( [t.MULT, t.DIV].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.factor()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  factor() {\n    // factor : ( PLUS | MINUS ) NUMBER | LPAREN expr RPAREN | FUNCTION LPAREN list RPAREN\n    switch (this.peekType()) {\n      case t.PLUS:\n      case t.MINUS:\n        return this.unaryOp()\n      case t.NUMBER:\n        return this.number()\n      case t.LPAREN:\n        return this.enclosedExpr()\n      case t.FUNCTION:\n        return this.func()\n      case t.RPAREN:\n        throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n      default:\n        throw new Error('Missing factor')\n    }\n  }\n\n  number() {\n    if (this.peekType() === t.NUMBER) {\n      const node = new NumberNode(this.curr)\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing number')\n    }\n  }\n\n  operator() {\n    if ([t.PLUS, t.MINUS, t.MULT, t.DIV].includes(this.peekType())) {\n      const node = this.curr\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing operator')\n    }\n  }\n\n  enclosedExpr() {\n    this.lparen()\n    const node = this.expr()\n    this.rparen()\n    return node\n  }\n\n  func() {\n    let func, args\n\n    if (this.peekType() === t.FUNCTION) {\n      func = this.curr\n      this.consume()\n      this.lparen()\n      args = this.args()\n      this.rparen()\n      return new FuncOp(func, args)\n    } else {\n      throw new Error('Missing function')\n    }\n  }\n\n  args() {\n    const args = []\n    let term = this.term()\n\n    args.push(term)\n\n    while (this.peekType() === t.COMMA) {\n      this.consume()\n      term = this.term()\n      args.push(term)\n    }\n\n    return args\n  }\n\n  equals() {\n    if (this.peekType() === t.EQUALS) {\n      this.consume()\n    } else {\n      throw new Error('Missing equals sign')\n    }\n  }\n\n  lparen() {\n    if (this.peekType() === t.LPAREN) {\n      this.depth += 1\n      this.consume()\n    } else {\n      throw new Error('Missing left parenthesis')\n    }\n  }\n\n  rparen() {\n    if (this.peekType() === t.RPAREN) {\n      this.depth -= 1\n      this.consume()\n    } else {\n      throw new Error('Missing right parenthesis')\n    }\n  }\n\n  unaryOp() {\n    if ([t.PLUS, t.MINUS].includes(this.peekType())) {\n      const curr = this.curr\n      this.consume()\n      const node = new UnaryOp(curr, this.factor())\n      return node\n    } else {\n      throw new Error('Missing unary operator')\n    }\n  }\n\n  consume() {\n    if (this.index < this.tokens.length - 1) {\n      this.index++\n      this.curr = this.tokens[this.index]\n    } else {\n      this.curr = null\n    }\n  }\n\n  isUnbalanced() {\n    return !(this.index === this.tokens.length && this.depth === 0)\n  }\n\n  peekType() {\n    return this.curr && this.curr.type\n  }\n}\n\nexport default Parser\n","import Interpreter from './Interpreter'\n\nexport default Interpreter\n","import { Lexer, GRAMMAR } from './Lexer'\nimport Parser from './Parser'\n\n\nclass Interpreter {\n  constructor(input) {\n    this.input = input\n    this.tokens = null\n    this.ast = null\n    this.result = null\n    this.error = null\n  }\n\n  interpret() {\n    try {\n      const lexer = new Lexer(this.input, GRAMMAR)\n      this.tokens = lexer.getTokens()\n      const parser = new Parser(this.tokens)\n      this.ast = parser.parse()\n      this.result = this.visit(this.ast)\n      return this.result\n    } catch (error) {\n      this.result = null\n      this.error = error\n      return null\n    }\n  }\n\n  visit(node) {\n    switch (node.constructor.name) {\n      case 'NumberNode':\n        return this.NumberNode(node)\n      case 'FuncOp':\n        return this.FuncOp(node)\n      case 'BinaryOp':\n        return this.BinaryOp(node)\n      case 'UnaryOp':\n          return this.UnaryOp(node)\n      default:\n        throw new Error(`Unrecognized AST node ${node.constructor.name}`)\n    }\n  }\n\n  NumberNode(node) {\n    return node.eval()\n  }\n\n  UnaryOp(node) {\n    const result = this.visit(node.expr)\n    return node.eval(result)\n  }\n\n  FuncOp(node) {\n    const evaluatedArgs = []\n\n    for (let childNode of node.argNodes) {\n      const result = this.visit(childNode)\n      evaluatedArgs.push(result)\n    }\n\n    return node.eval(evaluatedArgs)\n  }\n\n  BinaryOp(node) {\n    const left = this.visit(node.leftNode)\n    const right = this.visit(node.rightNode)\n    return node.eval(left, right)\n  }\n}\n\nexport default Interpreter\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect }  from 'react-redux'\n\nimport { setCellValue, clearCellValue } from '~/actions/tableActions'\nimport Interpreter from '~/formulas'\n\n\nconst ERR_DIV_BY_ZERO = '#DIV/0!'\nconst ERR_GENERIC = '#ERROR!'\n\nconst Input = styled.input`\n  display: flex;\n  align-items: center;\n  outline: none;\n  border: 2px solid transparent;\n  width: 100%;\n  height: 100%;\n  padding: 0 2px;\n  line-height: 1em;\n\n  :focus {\n    border: 2px solid salmon;\n  }\n`\n\nexport class InputData extends React.PureComponent {\n  static propTypes = {\n    // props\n    replaceValue: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired,\n    onEscape: PropTypes.func.isRequired,\n    onCommit: PropTypes.func.isRequired,\n    // redux\n    clearCellValue: PropTypes.func.isRequired,\n    formula: PropTypes.string,\n    setCellValue: PropTypes.func.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n  }\n\n  refInput = React.createRef()\n\n  componentDidMount() {\n    this.focusInputTag()\n  }\n\n  focusInputTag() {\n    const input = this.refInput.current\n    input.focus()\n    input.scrollLeft = input.scrollWidth\n  }\n\n  setNewValue(rawValue) {\n    const value = rawValue.trim()\n    const { location } = this.props\n\n    if (value.length === 0) {\n      this.props.clearCellValue(location)\n      return\n    }\n\n    const cellValue = {\n      location,\n      formula: value\n    }\n\n    const isFormula = value[0] === '='\n    cellValue.value = isFormula ? this.evaluateFormula(value) : value\n    this.props.setCellValue(cellValue)\n  }\n\n  evaluateFormula(input) {\n    const interpreter = new Interpreter(input)\n    const result = interpreter.interpret()\n    const { error } = interpreter\n\n    if (!error) {\n      return result\n    } else {\n      if (error.message.match(/division by zero/i)) {\n        return ERR_DIV_BY_ZERO\n      } else {\n        return ERR_GENERIC\n      }\n    }\n  }\n\n  handleOnKeyDown(event) {\n    const { key } = event\n\n    if (key === 'Escape') {\n      this.props.onEscape()\n    } else if (key === 'Enter') {\n      this.setNewValue(event.target.value)\n      this.props.onCommit()\n    } else {\n      event.stopPropagation()\n    }\n  }\n\n  handleOnBlur(event) {\n    this.setNewValue(event.target.value)\n    this.props.onCommit()\n  }\n\n  render () {\n    const defaultValue = this.props.replaceValue ? null : this.props.formula\n\n    return (\n      <Input\n        ref={this.refInput}\n        id={`f-${this.props.location}`}\n        defaultValue={defaultValue}\n        onKeyDown={this.handleOnKeyDown}\n        onBlur={this.handleOnBlur}\n      />\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const formula = cell ? cell.formula : ''\n  return { formula }\n}\nconst mapDispatchToProps = { setCellValue, clearCellValue }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputData)\nexport {\n  ERR_DIV_BY_ZERO,\n  ERR_GENERIC,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\n\nimport { clearCellValue } from '~/actions/tableActions'\nimport { setActiveCell } from '~/actions/globalActions'\n\n\nconst DataTag = styled.div`\n  display: flex;\n  align-items: center;\n  outline: none;\n  border: 2px solid transparent;\n  width: 100%;\n  height: 100%;\n  padding: 0 2px;\n\n  :focus {\n    border: 2px solid salmon;\n  }\n`\n\nexport class EvaluatedData extends React.PureComponent {\n  static propTypes = {\n    // props\n    isFocused: PropTypes.bool,\n    location: PropTypes.string.isRequired,\n    onDoubleClick: PropTypes.func.isRequired,\n    onKeyDownEditable: PropTypes.func.isRequired,\n    // redux\n    clearCellValue: PropTypes.func.isRequired,\n    setActiveCell: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n  }\n\n  refDataTag = React.createRef()\n\n  componentDidMount() {\n    this.focusDataTag()\n  }\n\n  focusDataTag() {\n    if (this.props.isFocused) { this.refDataTag.current.focus() }\n  }\n\n  handleOnKeyDown({ key }) {\n    this.props.setActiveCell(this.props.location)\n\n    if (['Delete', 'Backspace'].includes(key)) {\n      const valueStr = '' + this.props.value\n\n      if (valueStr.length > 0) {\n        this.props.clearCellValue(this.props.location)\n      }\n      // key pressed is a printable symbol, ex: 'a', '1', ','\n      // can be further refined, but for now it's fine\n    } else if (key.length === 1) {\n      this.props.onKeyDownEditable()\n    }\n  }\n\n  render() {\n    return (\n      <DataTag\n        ref={this.refDataTag}\n        id={`t-${this.props.location}`}\n        tabIndex='0'\n        onKeyDown={this.handleOnKeyDown}\n        onDoubleClick={this.props.onDoubleClick}\n      >\n        {this.props.value}\n      </DataTag>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const value = cell ? cell.value : ''\n  return { value }\n}\n\nconst mapDispatchToProps = { clearCellValue, setActiveCell }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EvaluatedData)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { interpret } from 'xstate'\n\nimport displayMachine from './displayMachine'\nimport InputData from './InputData'\nimport EvaluatedData from './EvaluatedData'\n\n\nconst Wrapper = styled.div`\n  cursor: cell;\n  width: 100%;\n  height: 100%;\n  font-size: 13px;\n  border-right: 1px solid #dfdfdf;\n  border-bottom: 1px solid #dfdfdf;\n`\nclass CellData extends React.PureComponent {\n  static propTypes = {\n    location: PropTypes.string.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.evaluatedOnDoubleClick = this.evaluatedOnDoubleClick.bind(this)\n    this.evaluatedOnKeyDownEditable = this.evaluatedOnKeyDownEditable.bind(this)\n    this.inputOnEscape = this.inputOnEscape.bind(this)\n    this.inputOnCommit = this.inputOnCommit.bind(this)\n  }\n\n  state = {\n    displayState: displayMachine.initialState,\n  }\n\n  displayService = interpret(displayMachine)\n    .onTransition(displayState => this.setState({ displayState }))\n\n  componentDidMount() {\n    this.displayService.start()\n  }\n  \n  componentWillUnmount() {\n    this.displayService.stop()\n  }\n  \n  evaluatedOnDoubleClick() {\n    this.displayService.send('EDITABLE_MODIFY')\n  }\n\n  evaluatedOnKeyDownEditable() {\n    this.displayService.send('EDITABLE_REPLACE')\n  }\n\n  inputOnEscape() {\n    this.displayService.send('STATIC_FOCUSED')\n  }\n\n  inputOnCommit() {\n    this.displayService.send('STATIC')\n  }\n\n  renderData() {\n    const { displayState } = this.state\n\n    if (displayState.matches('editable')) {\n      return (\n        <InputData\n          replaceValue={displayState.matches('editable.replace')}\n          location={this.props.location}\n          onEscape={this.inputOnEscape}\n          onCommit={this.inputOnCommit}\n        />\n      )\n    } else {\n      return (\n        <EvaluatedData\n          location={this.props.location}\n          onDoubleClick={this.evaluatedOnDoubleClick}\n          onKeyDownEditable={this.evaluatedOnKeyDownEditable}\n          isFocused={displayState.matches('static.focused')}\n        />\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        {this.renderData()}\n      </Wrapper>\n    )\n  }\n}\n\nexport default CellData\n","const BASE_CODE_POINT = 'A'.codePointAt(0)\n\nexport function buildUrl(baseUrl, query={}) {\n  const urlQuery = Object.entries(query).map(([key, val]) => `${key}=${val}`).join('&')\n  return [baseUrl.trim(), urlQuery].join('?')\n}\n\nexport function clamp(value, min, max) {\n  return Math.min( Math.max(value, min), max )\n}\n\nexport function getRangeArray(min, max, isString=false) {\n  const range = []\n\n  for (let num = min; num <= max; num++) {\n    range.push( isString ? num.toString() : num )\n  }\n\n  return range\n}\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms))\n\nexport function getColumnNames(cols) {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let names = []\n  let prevNames = ['']\n  let remainCols = cols\n\n  while (remainCols > 0) {\n    const newNames = []\n\n    outerLoop:\n    for (let colName of prevNames) {  \n      for (let letter of alphabet) {\n        if (remainCols === 0)  { break outerLoop }\n        newNames.push(`${colName}${letter}`)\n        remainCols -= 1\n      }\n    }\n\n    prevNames = newNames\n    names = [...names, ...newNames]\n  }\n\n  return names\n}\n\nexport function getCellNames(rows, cols) {\n  const names = []\n  let colNames = getColumnNames(cols)\n\n  for (let row=1; row <= rows; row++) {\n    for (let col of colNames) {\n      names.push(`${col}-${row}`)\n    }\n  }\n\n  return names\n}\n\nexport function getColumnPosition(label) {\n  const [col, _] = label.split('-')\n  const letters = col.split('')\n  // const basePoint = 'A'.codePointAt(0)\n  const oneBase = letters.reduce((prev, letter) => (\n    prev * 26 + letter.charCodeAt(0) - BASE_CODE_POINT + 1\n  ), 0)\n\n  return oneBase - 1\n}\n\nexport function getColumnLabel(num) {\n  const label = []\n  const basePoint = BASE_CODE_POINT\n  let curr = num + 1\n\n  do {\n    curr -= 1\n    const letterPosition = curr % 26\n    const codePoint = basePoint + letterPosition\n    const letter = String.fromCodePoint(codePoint)\n    label.push(letter)\n\n    curr = Math.floor(curr / 26)\n  } while (curr > 0)\n\n  return label.reverse().join('')\n}\n\nexport function parseLocation(location) {\n  let [_, c, r] = location.split('-')\n  const col = getColumnPosition(c)\n  const row = +r - 1\n\n  return [col, row]\n}\n\n","import { Machine, assign } from 'xstate'\n\nimport { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nfunction getTargetLocation({ rows, columns, rowIndex, colIndex, key }) {\n  switch (key) {\n    case 'ArrowUp':\n      rowIndex = Math.max(0, rowIndex - 1)\n      break\n    case 'ArrowRight':\n      colIndex = Math.min(columns - 1, colIndex + 1)\n      break\n    case 'ArrowDown':\n    case 'Enter':\n      rowIndex = Math.min(rows - 1, rowIndex + 1)\n      break\n    case 'ArrowLeft':\n      colIndex = Math.max(0, colIndex - 1)\n      break\n    default:\n      return null\n  }\n\n  const colLabel = getColumnLabel(colIndex)\n  const rowLabel = '' + (rowIndex + 1)\n\n  return `t-${colLabel}-${rowLabel}`\n}\n\nfunction focusTargetCell(ctx) {\n  if (!ctx.endLocation) { return Promise.resolve(false) }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const id = `#${ctx.endLocation}`\n      const cell = document.querySelector(id)\n      if (cell) { cell.focus() }\n      resolve(true)\n    }, 0)\n  })\n}\n\nconst state = {\n  id: 'keyboardNav',\n  initial: 'idle',\n  context: {\n    columns: null,\n    rows: null,\n    key: null,\n    colIndex: null,\n    rowIndex: null,\n    endLocation: null,\n    wasFocused: false,\n  },\n  states: {\n    idle: {\n      on: {\n        'MOVE_FOCUS': {\n          actions: ['setNewContext', 'calcTargetLocation'],\n          target: 'focusTarget',\n        }\n      }\n    },\n    focusTarget: {\n      invoke: {\n        src: focusTargetCell,\n        onDone: {\n          actions: assign({ wasFocused: (ctx, event) => event.data }),\n          target: 'idle',\n        },\n      },\n    },\n  },\n}\n\nconst actions = {\n  actions: {\n    setNewContext: assign((ctx, { key, location }) => {\n      const [colIndex, rowIndex] = parseLocation(location)\n      return { colIndex, rowIndex, key }\n    }),\n    calcTargetLocation: assign({\n      endLocation: (ctx) => {\n        return getTargetLocation(ctx)\n      }\n    }),\n  },\n}\n\nfunction getKeyboardNavMachine(rows, columns) {\n  const newContext = {\n    ...state.context,\n    columns,\n    rows,\n  }\n\n  return Machine(state, actions, newContext)\n}\n\nexport {\n  state,\n  actions,\n  getTargetLocation,\n  focusTargetCell,\n}\n\nexport default getKeyboardNavMachine\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport { interpret } from 'xstate'\n\nimport CellData from '../cell/CellData'\nimport { getColumnNames } from '~/library/utils'\nimport getKeyboardNavMachine from './keyboardNavMachine'\n\n\nconst RootTable = styled.table`\n  border-top: 2px solid ${props => props.theme.colors.cell.border};\n  border-left: 2px solid ${props => props.theme.colors.cell.border};\n  border-right: 1px solid ${props => props.theme.colors.cell.border};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.border};\n`\n\nconst Td = styled.td`\n  width: 130px;\n  height: 26px;\n`\n\nexport class Table extends React.PureComponent {\n  static propTypes = {\n    activeCell: PropTypes.string,\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleTableOnClick = this.handleTableOnClick.bind(this)\n    this.handleTableOnKeyDown = this.handleTableOnKeyDown.bind(this)\n    this.columnNames = getColumnNames(props.columns)\n  }\n\n  keyboardNavMachine = getKeyboardNavMachine(this.props.rows, this.props.columns)\n  focusService = interpret(this.keyboardNavMachine)\n\n  componentDidMount() {\n    this.focusService.start()\n  }\n\n  componentWillUnmount() {\n    this.focusService.stop()\n  }\n\n  handleTableOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleTableOnKeyDown(event) {\n    event.stopPropagation()\n    this.moveFocus(event.key, event.target.id)\n  }\n\n  moveFocus(key, location) {\n    this.focusService.send({ type: 'MOVE_FOCUS', key, location })\n  }\n\n  renderDataCells(rowNumber) {\n    return new Array(this.props.columns).fill(0).map((_, i) => {\n      const location = `${this.columnNames[i]}-${rowNumber}`\n\n      return (\n        <Td\n          key={location}\n        >\n          <CellData\n            isActive={this.props.activeCell === location}\n            location={location}\n          />\n        </Td>\n      )\n    })\n  }\n\n  renderRows() {\n    return new Array(this.props.rows).fill(0).map((_, i) => {\n      return (\n        <tr key={i}>\n          {this.renderDataCells(i + 1)}\n        </tr>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <RootTable\n        onClick={this.handleTableOnClick}\n        onKeyDown={this.handleTableOnKeyDown}\n      >\n        <tbody>\n          {this.renderRows()}\n        </tbody>\n      </RootTable>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { activeCell, rows, columns } = state.global\n  return { activeCell, rows, columns }\n}\n\nexport default connect(mapStateToProps)(Table)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\n\nimport { setActiveCell } from './actions/globalActions'\nimport Header from './components/header/Header'\nimport Table from './components/table/Table'\n\n\nconst Container = styled.div`\n  display: grid;\n  grid:\n    \"left-blank main right-blank\" 100vh\n    / auto minmax(auto, 1000px) auto;\n`\n\nconst Main = styled.main`\n  grid-area: main;\n`\n\nfunction App({ setActiveCell }) {\n  const handleOnClick = () => {\n    setActiveCell(null)\n  }\n\n  return (\n    <Container\n      onClick={handleOnClick}\n    >\n      <Main>\n        <Header />\n        <Table />\n      </Main>\n    </Container>\n  )\n}\n\nApp.propTypes = {\n  setActiveCell: PropTypes.func,\n}\n\nconst mapDispatchToProps = { setActiveCell }\n\nexport default connect(null, mapDispatchToProps)(App)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from 'emotion-theming'\nimport { Global } from '@emotion/core'\nimport 'sanitize.css'\n\nimport appStoreFn from './reducers/'\nimport globalStyles from './styles/globalStyles'\nimport theme from './styles/theme'\nimport App from './App'\n\n\nconst APP_STORE = appStoreFn()\n\n\nfunction Root() {\n  return (\n    <Provider store={APP_STORE}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Global styles={globalStyles} />\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default Root","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
{"version":3,"sources":["reducers/globalReducer.js","reducers/tableReducer.js","reducers/index.js","styles/theme.js","styles/globalStyles.js","actions/globalActions.js","components/header/Header.jsx","components/cell/ColLabel.jsx","components/table/ColLabelRow.jsx","components/cell/RowLabel.jsx","components/cell/displayMachine.js","formulas/ReduxConnect.js","actions/tableActions.js","formulas/Token.js","formulas/formulaFunctions.js","library/utils.js","formulas/TokenSanitizer.js","formulas/LexerRule.js","formulas/Lexer.js","formulas/ast.js","formulas/Parser.js","formulas/Interpreter.js","formulas/graph.js","components/cell/InputContext.js","components/suggestions/FuncDescription.jsx","library/InteractiveListItem.jsx","library/InteractiveList.jsx","components/suggestions/FuncSelector.jsx","components/suggestions/Suggestions.jsx","components/cell/InputData.jsx","components/cell/ResultData.jsx","components/cell/CellData.jsx","components/table/DataRow.jsx","components/table/keyboardNavMachine.js","components/table/Table.jsx","App.jsx","Root.jsx","serviceWorker.js","index.js"],"names":["createReducer","activeCell","rows","columns","SET_ACTIVE_CELL","state","_ref","payload","SET_CELL_DATA","location","data","DELETE_CELL_DATA","_ref2","appStore","configureStore","reducer","global","globalReducer","table","tableReducer","breaks","xs","sm","md","lg","breakBump","queries","concat","from","breakPoint","upTo","theme","colors","text","cell","border","borderDark","labelBkg","dropdown","normal","active","primary","strong","field","background","shadow","globalStyles","css","setActiveCell","createAction","Root","Object","styled_base_browser_esm","target","name","styles","Header","react_default","a","createElement","InnerBorder","props","ColLabel","label","data-col","className","Row","ColLabelRow","colLabels","data-row","ColLabelRow_InnerBorder","Array","length","fill","map","_","i","cell_ColLabel","key","Wrapper","RowLabel","displayMachine","Machine","id","initial","states","static","focused","notFocused","on","EDITABLE_MODIFY","EDITABLE_REPLACE","editable","modify","replace","STATIC_FOCUSED","STATIC","ReduxConnect","store","arguments","undefined","classCallCheck","this","globalState","getState","result","entered","dispatch","type","replaceCellData","clearCellData","keys","Token","whitespace","category","index","value","html","Fn","AVERAGE","fn","_Fn$SUM","_Fn$COUNT","Error","SUM","apply","COUNT","definition","example","summary","CONCAT","_len","args","_key","reduce","prev","curr","MAX","_len2","_key2","forEach","arg","TypeError","Math","max","MIN","_len3","_key3","min","POWER","_len4","_key4","base","exp","pow","SQRT","sqrt","_len5","_key5","AVG","objectSpread","POW","BASE_CODE_POINT","codePointAt","getColumnNames","cols","names","prevNames","remainCols","newNames","outerLoop","_i","_prevNames","colName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","letter","push","err","return","toConsumableArray","parseLocation","_location$split","split","_location$split2","slicedToArray","col","row","charCodeAt","isNumber","numStr","isPeriodsAndDigits","Boolean","match","periodCount","TokenSanitizer","tokens","_this","token","t","NUMBER","number","CELL","FUNCTION","function","parseFloat","TEXT","getCellLabel","getFunction","slice","toUpperCase","fnName","fnNode","formulaFuncs","LexerRule","regex","groupIndex","lastIndex","input","exec","TOKENS","EOF","UNKNOWN","EQUALS","COMMA","COLON","LPAREN","RPAREN","PLUS","MINUS","MULT","DIV","GRAMMAR","Lexer","char","initChar","markers","nextToken","sanitizer","sanitize","isFormula","tokenTEXTorNUMBER","whitespaceLen","getWhitespaceLen","_GRAMMAR","rule","setIndex","test","consume","tokenUNKNOWN","chars","isEOF","isSeparator","isWhitespace","join","count","AST","_name","TextNode","textNode","possibleConstructorReturn","getPrototypeOf","call","NumberNode","numberNode","_this2","CellNode","_this3","UnaryOp","opNode","expr","_this4","evaluatedExpr","FuncOp","funcNode","argNodes","_this5","evaluatedArgs","BinaryOp","leftNode","rightNode","_this6","left","right","Parser","ast","hasCellRefs","peekType","equals","node","operator","term","includes","factor","unaryOp","enclosedExpr","func","lparen","rparen","Interpreter","error","cache","lexer","parser","vertex","graph","addVertex","getTokens","parse","recalculate","errorResponse","getVertex","isResolved","markVisited","_visit","nodeName","constructor","eval","otherLocation","isLocationValid","isVisited","dfsCellVisit","childNode","_parseLocation","_parseLocation2","colIndex","rowIndex","interpreter","hasVertex","visit","errorMsg","message","Vertex","Graph","adj","pending","visited","interpret","initLocation","setPendingNodes","dfs","updateStore","Set","add","isPending","has","size","delete","locationKeys","locations","_Object$entries","entries","_ref3","getCellResult","clearCell","testMissingLocation","delVertex","Promise","resolve","InputContext","React","createContext","Pre","Subtitle","P","Hr","FuncDescription","currScope","_this$props","cursorPos","fnScopes","scope","startIndex","endIndex","end","getFnScope","inputRect","context","clientRect","getFnNode","core_browser_esm","FuncDescription_Root","bottom","FuncDescription_ref","PureComponent","contextType","Li","DropdownItem","item","isActive","tabIndex","Ul","InteractiveList","activeIndex","selectedIndex","prevProps","prevState","fireSelected","items","selectedFn","InteractiveListItem","style","li","top","ul","onClick","handleOnClick","renderListItems","propsTypes","PropTypes","isRequired","array","shape","object","baseStyle","BaseRoot","ActiveRoot","FuncSelector","listItems","itemIndex","keyEvent","isVisible","setState","setListItems","nextProps","nextState","updateContextData","updateListItems","keyActions","setIsFuncSelectorVisible","setItemIndex","updateInputValue","currInputValue","inputValue","newInputValue","setInputValue","filter","startsWith","sort","itemBase","itemActive","FuncSelector_Pre","FuncSelector_Subtitle","marginTop","boxShadow","width","_this$state","library_InteractiveList","selectItem","round","getListStyles","Component","withTheme","Suggestions","setFnScopes","stack","pop","b","componentName","token1","token2","_this$props2","getComponentToRender","suggestions_FuncSelector","suggestions_FuncDescription","defaultProps","Input","InputData","_React$PureComponent","isFuncSelectorVisible","refInput","createRef","handleOnKeyDown","bind","assertThisInitialized","handleOnBlur","handleOnChange","inherits","createClass","replaceValue","tokenizeInputValue","current","focusInputTag","onEscape","setNewValue","onCommit","focus","scrollLeft","scrollWidth","setCellData","event","stopPropagation","inputEl","Provider","getBoundingClientRect","ref","data-cell","data-location","onChange","onKeyDown","onBlur","suggestions_Suggestions","selectionStart","mapDispatchToProps","connect","ownProps","DataTag","ResultData","refDataTag","focusDataTag","isFocused","onKeyDownEditable","whiteSpace","textOverflow","overflow","getStyle","onDoubleClick","CellData","displayState","initialState","displayService","onTransition","resultOnDoubleClick","resultOnKeyDownEditable","inputOnEscape","inputOnCommit","start","stop","send","matches","cell_InputData","cell_ResultData","CellData_Wrapper","renderData","DataRow","rowNumber","DataRow_Row","cell_RowLabel","cell_CellData","getTargetLocation","colLabel","num","basePoint","codePoint","String","fromCodePoint","floor","reverse","getColumnLabel","rowLabel","endLocation","wasFocused","idle","MOVE_FOCUS","actions","focusTarget","invoke","src","ctx","setTimeout","document","querySelector","onDone","assign","setNewContext","calcTargetLocation","getKeyboardNavMachine","newContext","Grid","Table","keyboardNavMachine","focusService","handleTableOnClick","handleTableOnKeyDown","moveFocus","dataset","table_ColLabelRow","table_DataRow","renderColLabelRow","renderDataRows","data-table","renderRows","_state$global","Container","Main","header_Header","table_Table","es","react_router_dom","emotion_theming_browser_esm","src_App","window","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6a5eae8.chunk.js","sourcesContent":["import { createReducer } from 'redux-starter-kit'\n\nexport const INITIAL_STATE = {\n  activeCell: null,\n  rows: 14,\n  columns: 6,\n}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_ACTIVE_CELL': (state, { payload }) => {\n    state.activeCell = payload\n  },\n})\n","import { createReducer } from 'redux-starter-kit'\n\n\nconst INITIAL_STATE = {}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_CELL_DATA': (state, { payload }) => {\n    const { location, data } = payload\n    state[location] = data\n  },\n\n  'DELETE_CELL_DATA': (state, { payload }) => {\n    delete state[payload]\n  }\n})\n","import { configureStore } from 'redux-starter-kit'\n\nimport globalReducer from './globalReducer'\nimport tableReducer from './tableReducer'\n\n\nconst appStoreGen = () => (\n  configureStore({\n    reducer: {\n      global: globalReducer,\n      table: tableReducer,\n    }\n  })\n)\n\nconst appStore = appStoreGen()\n\n\nexport default appStore\nexport { appStoreGen }\n","const colors = {\n  text: '#3D3D3D',\n  cell: {\n    border: '#dfdfdf',\n    borderDark: '#CCC',\n    labelBkg: '#F5F5F5'\n  },\n  dropdown: {\n    normal: '#fafafa',\n    active: '#ebebeb',\n  },\n  primary: {\n    strong: '#E10D75'\n  },\n  field: {\n    background: '#F0F0F0',\n  },\n  shadow: '#939393',\n}\n\nconst breaks = {\n  xs: 0,\n  sm: 420,\n  md: 900,\n  lg: 1200,\n}\n\nconst breakBump = {\n  xs: 'sm',\n  sm: 'md',\n  md: 'lg',\n}\n\nconst queries = {\n  xs: `@media (max-width: ${breaks.sm - 1}px)`,\n  sm: `@media (min-width: ${breaks.sm}px) and (max-width: ${breaks.md - 1}px)`,\n  md: `@media (min-width: ${breaks.md}px) and (max-width: ${breaks.lg - 1}px)`,\n  lg: `@media (min-width: ${breaks.lg}px)`,\n  from: (breakPoint) => (`@media (min-width: ${breaks[breakPoint]}px)`),\n  upTo: (breakPoint) => (`@media (max-width: ${breaks[ breakBump[breakPoint] ] - 1}px)`),\n}\n\nconst theme = {\n  colors,\n  breaks,\n  queries,\n}\n\nexport default theme\n","/* @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nimport theme from './theme'\n\n\nconst globalStyles = css`\n  body {\n    color: ${theme.colors.text};\n    line-height: 1.3em;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  table, th, td {\n    border: 0;\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n\n  td {\n    padding: 0;\n    line-height: 1.2em;\n  }\n\n  pre, p, h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n`\n\nexport default globalStyles\n","import { createAction } from 'redux-starter-kit'\n\n\nexport const setActiveCell = createAction('SET_ACTIVE_CELL')\n","import React from 'react'\nimport styled from '@emotion/styled'\n\n\nconst Root = styled.header`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0 30px;\n`\n\nfunction Header() {\n  return (\n    <Root>\n      <h3>Spreadsheet App</h3>\n    </Root>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n  font-size: 12px;\n`\n\nfunction ColLabel({ label }) {\n  return (\n    <InnerBorder\n      data-col={label}\n      className='col-label-width col-label-height'\n    >\n      {label}\n    </InnerBorder>\n  )\n}\n\nColLabel.propTypes = {\n  label: PropTypes.string,\n}\n\nexport default ColLabel\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport ColLabel from '../cell/ColLabel'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction ColLabelRow({ colLabels }) {\n  const renderCornerCell = () => (\n    <InnerBorder\n      className='row-label-width col-label-height'\n    />\n  )\n\n  const renderLabelCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => (\n      <ColLabel\n        key={i}\n        label={colLabels[i]}\n      />\n    )\n  ))\n\n  return (\n    <Row\n      data-row='header'\n    >\n      {renderCornerCell()}\n      {renderLabelCells()}\n    </Row>\n  )\n}\n\nColLabelRow.propTypes = {\n  colLabels: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default ColLabelRow\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst Wrapper = styled.div`\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction RowLabel({ label }) {\n  return (\n    <Wrapper\n      data-row={label}\n      className='row-label-width row-label-height'\n    >\n      {label}\n    </Wrapper>\n  )\n}\n\nRowLabel.propTypes = {\n  label: PropTypes.number,\n}\n\nexport default RowLabel\n","import { Machine } from 'xstate'\n\n\nconst displayMachine = Machine({\n  id: 'cell',\n  initial: 'static',\n  states: {\n    static: {\n      initial: 'notFocused',\n      states: {\n        focused: {},\n        notFocused: {}\n      },\n      on: {\n        EDITABLE_MODIFY: {\n          target: 'editable.modify'\n        },\n        EDITABLE_REPLACE: {\n          target: 'editable.replace'\n        },\n      },\n    },\n    editable: {\n      states: {\n        modify: {},\n        replace: {},\n      },\n      on: {\n        STATIC_FOCUSED: {\n          target: 'static.focused'\n        },\n        STATIC: {\n          target: 'static'\n        },\n      },\n    },\n  }\n})\n\nexport default displayMachine\n","import appStore from '~/reducers/'\nimport { clearCellData, replaceCellData } from '~/actions/tableActions'\n\n\nclass ReduxConnect {\n  constructor(store=appStore) {\n    const { global: globalState } = store.getState()\n    this.store = store\n    this.rows = globalState.rows\n    this.columns = globalState.columns\n  }\n\n  get table() {\n    return this.store.getState().table\n  }\n\n  get locations() {\n    return Object.keys(this.table)\n  }\n\n  getCellResult(location) {\n    const data = this.table[location]\n    return data && data.result\n  }\n\n  replaceCellData(location, entered, result) {\n    this.store.dispatch(replaceCellData(location, entered, result))\n  }\n\n  clearCell(location) {\n    this.store.dispatch(clearCellData(location))\n  }\n}\n\nexport default ReduxConnect\nexport { appStore }\n","import graph from '~/formulas/graph'\n\n\nexport function setCellData(location, entered) {\n  const result = graph.interpret(location, entered)\n\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function replaceCellData(location, entered, result) {\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function clearCellData(location) {\n  return (dispatch, getState) => {\n    const value = getState().table[location]\n\n    graph.delVertex(location)\n\n    if (value === undefined) {\n      return Promise.resolve()\n    }\n\n\n    return Promise.resolve(dispatch({\n      type: 'DELETE_CELL_DATA',\n      payload: location,\n    }))\n  }\n}\n","class Token {\n  constructor(type, text, whitespace, category, index) {\n    this.type = type\n    this.category = category\n    this.text = text\n    this.whitespace = whitespace\n    this.index = index\n    this.value = null\n    this.html = null\n  }\n}\n\nexport default Token\n","const Fn = {\n  AVERAGE: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      return Fn.SUM.fn(...args) / Fn.COUNT.fn(...args)\n    },\n    definition: 'AVERAGE(value1, value2, ...)',\n    example: 'AVERAGE(A1:B3, 3)',\n    summary: 'Returns the average from a series of numbers.',\n  },\n  CONCAT: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      return args.reduce((prev, curr) => (prev + curr), '')\n    },\n    definition: 'CONCAT(\"text1\", \"text2\", ...)',\n    example: 'CONCAT(\"one\", \"two\")',\n    summary: 'Returns a single concatenated string from a series of strings.',\n  },\n  COUNT: {\n    fn: (...args) => args.length,\n    definition: 'COUNT(element1, element2, ...)',\n    example: 'COUNT(A1:B3, 2, C4)',\n    summary: 'Returns the number of non-empty elements in a set.',\n  },\n  MAX: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      args.forEach(arg => {\n        if (typeof arg !== 'number') {\n          throw new TypeError(`${arg} is not a number`)\n        }\n      })\n  \n      return Math.max(...args)\n    },\n    definition: 'MAX(value1, value2, ...)',\n    example: 'MAX(A1:B3, 4, C3)',\n    summary: 'Returns the maximum value from a series of numbers',\n  },\n  MIN: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      args.forEach(arg => {\n        if (typeof arg !== 'number') {\n          throw new TypeError(`${arg} is not a number`)\n        }\n      })\n  \n      return Math.min(...args)\n    },\n    definition: 'MIN(value1, value2, ...)',\n    example: 'MIN(A1:B3, 4, C3)',\n    summary: 'Returns the minimum value from a series of numbers.',\n  },\n  POWER: {\n    fn: (...args) => {\n      if (args.length !== 2) {\n        throw new Error('Formula takes only two elements')\n      }\n    \n      const [base, exp] = args\n      return Math.pow(base, exp)\n    },\n    definition: 'POWER(base, exponent)',\n    example: 'POWER(A3,2)',\n    summary: 'Returns a number raised to an exponent.'\n  },\n  SQRT: {\n    fn: (...args) => {\n      if (args.length !== 1) {\n        throw new Error(`Formula takes only one element`)\n      }\n  \n      return Math.sqrt(args[0])\n    },\n    definition: 'SQRT(value)',\n    example: 'SQRT(9) or SQRT(A3)',\n    summary: 'Returns the square root of a number.'\n  },\n  SUM: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      return args.reduce((prev, curr) => prev + curr)\n    },\n    definition: 'SUM(value1, value2, ...)',\n    example: 'SUM(A1:B3, 3, C5)',\n    summary: 'Retuns the sum from a series of numbers.',\n  }\n}\n\n// aliases\nFn.AVG = {\n  ...Fn.AVERAGE,\n  definition: 'AVG(value1, value2, ...)',\n  example: 'AVG(A1:B3, 3)',\n}\n\nFn.POW = {\n  ...Fn.POWER,\n  definition: 'POW(base, exponent)',\n  example: 'POW(A3,2)',\n}\n\nexport default Fn\n","const BASE_CODE_POINT = 'A'.codePointAt(0)\n\nexport function buildUrl(baseUrl, query={}) {\n  const urlQuery = Object.entries(query).map(([key, val]) => `${key}=${val}`).join('&')\n  return [baseUrl.trim(), urlQuery].join('?')\n}\n\nexport function clamp(value, min, max) {\n  return Math.min( Math.max(value, min), max )\n}\n\nexport function getRangeArray(min, max, isString=false) {\n  const range = []\n\n  for (let num = min; num <= max; num++) {\n    range.push( isString ? num.toString() : num )\n  }\n\n  return range\n}\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms))\n\nexport function getColumnNames(cols) {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let names = []\n  let prevNames = ['']\n  let remainCols = cols\n\n  while (remainCols > 0) {\n    const newNames = []\n\n    outerLoop:\n    for (let colName of prevNames) {  \n      for (let letter of alphabet) {\n        if (remainCols === 0)  { break outerLoop }\n        newNames.push(`${colName}${letter}`)\n        remainCols -= 1\n      }\n    }\n\n    prevNames = newNames\n    names = [...names, ...newNames]\n  }\n\n  return names\n}\n\nexport function getCellNames(rows, cols) {\n  const names = []\n  let colNames = getColumnNames(cols)\n\n  for (let row=1; row <= rows; row++) {\n    for (let col of colNames) {\n      names.push(`${col}-${row}`)\n    }\n  }\n\n  return names\n}\n\nexport function getColumnPosition(colLabel) {\n  const letters = colLabel.split('')\n  const oneBase = letters.reduce((prev, letter) => (\n    prev * 26 + letter.charCodeAt(0) - BASE_CODE_POINT + 1\n  ), 0)\n\n  return oneBase - 1\n}\n\nexport function getColumnLabel(num) {\n  const label = []\n  const basePoint = BASE_CODE_POINT\n  let curr = num + 1\n\n  do {\n    curr -= 1\n    const letterPosition = curr % 26\n    const codePoint = basePoint + letterPosition\n    const letter = String.fromCodePoint(codePoint)\n    label.push(letter)\n\n    curr = Math.floor(curr / 26)\n  } while (curr > 0)\n\n  return label.reverse().join('')\n}\n\nexport function parseLocation(location) {\n  let [col, row] = location.split('-')\n  const colIndex = getColumnPosition(col)\n  const rowIndex = +row - 1\n\n  return [colIndex, rowIndex]\n}\n\nexport function isNumber(numStr) {\n  const isPeriodsAndDigits = Boolean(numStr.match(/^[.\\d]+$/))\n  const periodCount = (numStr.match(/\\./g) || []).length\n\n  if (!isPeriodsAndDigits) { return false }\n  if (periodCount > 1) { return false }\n  if (numStr.length === 1 && numStr[0] === '.') { return false }\n  return true\n}\n\n","import { TOKENS as t } from './Lexer'\nimport formulaFuncs from './formulaFunctions'\nimport { isNumber } from '~/library/utils'\n\n\nclass TokenSanitizer {\n  constructor(tokens) {\n    this.tokens = tokens\n  }\n\n  sanitize() {\n    return this.tokens.map(token => {\n      switch(token.type) {\n        case t.NUMBER:\n          return this.number(token)\n        case t.CELL:\n          return this.cell(token)\n        case t.FUNCTION:\n          return this.function(token)\n        default:\n          return token\n      }\n    })\n  }\n\n  number(token) {\n    if (!isNumber(token.text)) {\n      token.type = t.TEXT\n      return token\n    }\n\n    token.value = parseFloat(token.text)\n    return token\n  }\n\n  cell(token) {\n    token.value = this.getCellLabel(token)\n    return token\n  }\n\n  function(token) {\n    const fn = this.getFunction(token)\n\n    if (fn) {\n      token.value = fn\n    } else {\n      token.type = t.TEXT\n    }\n\n    return token\n  }\n\n  getCellLabel(token) {\n    const { text } = token\n    const { index } = text.match(/\\d+/)\n    const col = text.slice(0, index).toUpperCase()\n    const row = text.slice(index)\n    return `${col}-${row}`\n  }\n\n  getFunction(token) {\n    const fnName = token.text.toUpperCase()\n    const fnNode = formulaFuncs[fnName]\n    return fnNode && fnNode.fn\n  }\n}\n\nexport default TokenSanitizer\n","class LexerRule {\n  constructor(regex, groupIndex, token, category) {\n    this.regex = regex\n    this.groupIndex = groupIndex\n    this.token = token\n    this.category = category\n  }\n\n  setIndex(index) {\n    this.regex.lastIndex = index\n  }\n\n  test(input) {\n    return this.regex.exec(input)\n  }\n}\n\nexport default LexerRule\n","import Token from './Token'\nimport TokenSanitizer from './TokenSanitizer'\nimport LexerRule from './LexerRule'\nimport { isNumber } from '~/library/utils'\n\n\nconst TOKENS = {\n  // internal\n  EOF: 'EOF',\n  UNKNOWN: 'UNKNOWN',\n  // structure\n  EQUALS: 'EQUALS',\n  COMMA: 'COMMA',\n  COLON: 'COLON',\n  LPAREN: 'LPAREN',\n  RPAREN: 'RPAREN',\n  // operators\n  PLUS: 'PLUS',\n  MINUS: 'MINUS',\n  MULT: 'MULT',\n  DIV: 'DIV',\n  // entities\n  NUMBER: 'NUMBER',\n  CELL: 'CELL',\n  FUNCTION: 'FUNCTION',\n  TEXT: 'TEXT',\n}\n\nconst t = TOKENS\n\nconst GRAMMAR = [\n  // structure\n  new LexerRule(/=/g, 0, t.EQUALS, 'structure'),\n  new LexerRule(/,/g, 0, t.COMMA, 'structure'),\n  new LexerRule(/:/g, 0, t.COLON, 'structure'),\n  new LexerRule(/\\(/g, 0, t.LPAREN, 'structure'),\n  new LexerRule(/\\)/g, 0, t.RPAREN, 'structure'),\n  // operators\n  new LexerRule(/\\+/g, 0, t.PLUS, 'operator'),\n  new LexerRule(/\\-/g, 0, t.MINUS, 'operator'), // eslint-disable-line\n  new LexerRule(/\\*/g, 0, t.MULT, 'operator'),\n  new LexerRule(/\\//g, 0, t.DIV, 'operator'),\n  // multi-character\n  new LexerRule(/[\\d\\.]+/g, 0, t.NUMBER, 'entity'), // eslint-disable-line\n  new LexerRule(/[a-z]+[\\d]+/gi, 0, t.CELL, 'entity'),\n  new LexerRule(/([a-z]+)\\(/gi, 1, t.FUNCTION, 'entity'),\n]\n\n\nclass Lexer {\n  constructor(input) {\n    this.input = input\n    this.index = 0\n    this.char = this.initChar(input)\n    this.markers = []\n    this.tokens = []\n  }\n\n  getTokens() {\n    while (this.char !== t.EOF) {\n      const token = this.nextToken()\n      this.tokens.push(token)\n    }\n\n    const sanitizer = new TokenSanitizer(this.tokens)\n    this.tokens = sanitizer.sanitize()\n    return this.tokens\n  }\n\n  nextToken() {\n    if (this.char === t.EOF) {\n      return new Token(t.EOF, t.EOF, 0, 'eof', this.index)\n    }\n\n    if (!this.isFormula()) {\n      return this.tokenTEXTorNUMBER()\n    }\n\n    const whitespaceLen = this.getWhitespaceLen()\n    let token\n\n    for (let rule of GRAMMAR) {\n      rule.setIndex(this.index)\n      const match = rule.test(this.input)\n\n      if (match && match.index === this.index) {\n        const text = match[rule.groupIndex]\n        token = new Token(rule.token, text, whitespaceLen, rule.category, this.index)\n        this.index += text.length - 1\n        this.consume()\n        break\n      }\n    }\n\n    if (!token) {\n      token = this.tokenUNKNOWN(whitespaceLen)\n    }\n\n    return token\n  }\n\n  initChar(input) {\n    if (this.input.length === 0) {\n      this.input = '0'\n      this.index = -1\n    }\n\n    return input[this.index]\n  }\n\n  tokenUNKNOWN(whitespace) {\n    const chars = []\n\n    while (!(this.isEOF() || this.isSeparator() || this.isWhitespace())) {\n      chars.push(this.char)\n      this.consume()\n    }\n\n    const text = chars.join('')\n    return new Token(t.UNKNOWN, text, whitespace, 'unknown', this.index - text.length)\n  }\n\n  tokenTEXTorNUMBER() {\n    let token\n\n    if (isNumber(this.input)) {\n      token = new Token(t.NUMBER, this.input, 0, 'entity', this.index)\n    } else {\n      token = new Token(t.TEXT, this.input, 0, 'entity', this.index)\n    }\n\n    this.index = this.input.length - 1\n    this.consume()\n    return token\n  }\n\n  consume() {\n    this.index++\n\n    if (this.index < this.input.length) {\n      this.char = this.input[this.index]\n    } else {\n      this.char = t.EOF\n    }\n  }\n\n  isFormula() {\n    return this.input[0] === '='\n  }\n\n  isEOF() {\n    return this.char === t.EOF\n  }\n\n  isWhitespace() {\n    return !this.isEOF() && Boolean(this.char.match(/\\s/))\n  }\n\n  isSeparator() {\n    return Boolean(this.char.match(/[\\(\\)\\+\\-\\/\\*]/)) // eslint-disable-line\n  }\n\n  getWhitespaceLen() {\n    let count = 0\n\n    while (this.isWhitespace()) {\n      count++\n      this.consume()\n    }\n\n    return count\n  }\n}\n\nexport default Lexer\nexport { GRAMMAR, TOKENS, Lexer }\n","import { TOKENS as t } from './Lexer'\n\n\nclass AST {\n  constructor(name) {\n    this._name = name\n  }\n\n  eval() {\n    throw new Error('Implement method.')\n  }\n}\n\nclass TextNode extends AST {\n  constructor(textNode) {\n    super('TextNode')\n    this.textNode = textNode\n  }\n\n  eval() {\n    return this.textNode.text\n  }\n}\n\nclass NumberNode extends AST {\n  constructor(numberNode) {\n    super('NumberNode')\n    this.numberNode = numberNode\n  }\n\n  get value() {\n    return this.numberNode.value\n  }\n\n  eval() {\n    return this.value\n  }\n}\n\nclass CellNode extends AST {\n  constructor(token) {\n    super('CellNode')\n    this.cell = token\n  }\n\n  get location() {\n    return this.cell.value\n  }\n}\n\nclass UnaryOp extends AST {\n  constructor(opNode, expr) {\n    super('UnaryOp')\n    this.opNode = opNode\n    this.expr = expr\n  }\n\n  eval(evaluatedExpr) {\n    if (this.opNode.type === t.PLUS) {\n      return evaluatedExpr\n    } else if (this.opNode.type === t.MINUS) {\n      return -evaluatedExpr\n    }\n  }\n}\n\nclass FuncOp extends AST {\n  constructor(funcNode, argNodes) {\n    super('FuncOp')\n    this.funcNode = funcNode\n    this.argNodes = argNodes\n  }\n\n  eval(evaluatedArgs) {\n    const fn = this.funcNode.value\n    return fn(...evaluatedArgs)\n  }\n}\n\nclass BinaryOp extends AST {\n  constructor(leftNode, opNode, rightNode) {\n    super('BinaryOp')\n    this.leftNode = leftNode\n    this.opNode = opNode\n    this.rightNode = rightNode\n  }\n\n  eval(left, right) {\n    switch(this.opNode.type) {\n      case t.PLUS:\n        return left + right\n      case t.MINUS:\n        return left - right\n      case t.DIV:\n        if (right === 0) {\n          throw new Error(`Division by zero: ${left}/${right}`)\n        } else {\n          return left / right\n        }\n      case t.MULT:\n        return left * right\n      default:\n        throw new Error(`Unsupported operator \"${this.token.text}\"`)\n    }\n  }\n}\n\nexport {\n  TextNode,\n  NumberNode,\n  CellNode,\n  BinaryOp,\n  UnaryOp,\n  FuncOp,\n}\n","import { TOKENS as t } from './Lexer'\nimport { TextNode, NumberNode, CellNode, BinaryOp, UnaryOp, FuncOp } from './ast'\n\n\nclass Parser {\n  constructor(tokens) {\n    this.index = 0\n    this.tokens = tokens\n    this.curr = this.tokens[0]\n    this.ast = null\n    this.hasCellRefs = false\n  }\n\n  parse() {\n    switch (this.peekType()) {\n      case t.TEXT:\n        this.ast = this.text()\n        break\n      case t.NUMBER:\n        this.ast = this.number()\n        break\n      default:\n        this.equals()\n        this.ast = this.expr()\n        break\n    }\n\n    if (this.curr !== null) {\n      throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n    }\n\n    return this.ast\n  }\n\n  expr() {\n    // expr : term ( ( PLUS | MINUS ) term ) *\n    let node, operator, right\n\n    node = this.term()\n\n    while ( [t.PLUS, t.MINUS].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.term()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  term() {\n    // term : factor ( ( MULT | DIV ) factor ) *\n    let node, operator, right\n\n    node = this.factor()\n\n    while ( [t.MULT, t.DIV].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.factor()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  factor() {\n    // factor : ( PLUS | MINUS ) ( NUMBER | CELL )\n    //          | LPAREN expr RPAREN\n    //          | FUNCTION LPAREN list RPAREN\n    switch (this.peekType()) {\n      case t.PLUS:\n      case t.MINUS:\n        return this.unaryOp()\n      case t.NUMBER:\n        return this.number()\n      case t.CELL:\n        return this.cell()\n      case t.LPAREN:\n        return this.enclosedExpr()\n      case t.FUNCTION:\n        return this.func()\n      case t.RPAREN:\n        throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n      default:\n        throw new Error('Missing factor')\n    }\n  }\n\n  text() {\n    let node\n\n    if (this.peekType() !== t.TEXT) {\n      throw new Error('Missing string')\n    }\n\n    node = new TextNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  number() {\n    if (this.peekType() === t.NUMBER) {\n      const node = new NumberNode(this.curr)\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing number')\n    }\n  }\n\n  operator() {\n    if ([t.PLUS, t.MINUS, t.MULT, t.DIV].includes(this.peekType())) {\n      const node = this.curr\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing operator')\n    }\n  }\n\n  enclosedExpr() {\n    this.lparen()\n    const node = this.expr()\n    this.rparen()\n    return node\n  }\n\n  cell() {\n    if (this.peekType() !== t.CELL) {\n      throw new Error('Missing cell node')\n    }\n\n    const node = new CellNode(this.curr)\n    this.hasCellRefs = true\n    this.consume()\n    return node\n  }\n\n  func() {\n    if (this.peekType() !== t.FUNCTION) {\n      throw new Error('Missing function')\n    }\n\n    const func = this.curr\n    this.consume()\n    this.lparen()\n    const args = this.args()\n    this.rparen()\n    return new FuncOp(func, args)\n  }\n\n  args() {\n    const args = []\n    let term = this.term()\n\n    args.push(term)\n\n    while (this.peekType() === t.COMMA) {\n      this.consume()\n      term = this.term()\n      args.push(term)\n    }\n\n    return args\n  }\n\n  equals() {\n    if (this.peekType() !== t.EQUALS) {\n      throw new Error('Missing equals sign')\n    }\n\n    this.consume()\n  }\n\n  lparen() {\n    if (this.peekType() !== t.LPAREN) {\n      throw new Error('Missing left parenthesis')\n    }\n\n    this.consume()\n  }\n\n  rparen() {\n    if (this.peekType() !== t.RPAREN) {\n      throw new Error('Missing right parenthesis')\n    }\n\n    this.consume()\n  }\n\n  unaryOp() {\n    if (![t.PLUS, t.MINUS].includes(this.peekType())) {\n      throw new Error('Missing unary operator')\n    }\n\n    const curr = this.curr\n    this.consume()\n    const node = new UnaryOp(curr, this.factor())\n    return node\n  }\n\n  consume() {\n    if (this.index < this.tokens.length - 1) {\n      this.index++\n      this.curr = this.tokens[this.index]\n    } else {\n      this.curr = null\n    }\n  }\n\n  peekType() {\n    return this.curr && this.curr.type\n  }\n}\n\nexport default Parser\n","import { Lexer } from './Lexer'\nimport { parseLocation } from '~/library/utils'\nimport graph from '~/formulas/graph'\nimport Parser from './Parser'\nimport ReduxConnect from './ReduxConnect'\n\n\nconst ERR_DIVISION_BY_ZERO = '#DIV/0!'\nconst ERR_CIRCULAR_REFERENCE = '#REF!'\nconst ERR_GENERIC = '#ERROR!'\n\nclass Interpreter {\n  constructor(location) {\n    this.location = location\n    this.error = null\n    this.cache = {}\n    this.result = null\n    this.state = new ReduxConnect()\n  }\n\n  interpret(input) {\n    const vertex = graph.addVertex(this.location, input)\n    let lexer, parser\n\n    try {\n      lexer = new Lexer(input)\n      parser = new Parser( lexer.getTokens() )\n      vertex.ast = parser.parse()\n      graph.recalculate(this.location)\n      this.result = vertex.result\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      return this.result\n    }\n\n    this.error = vertex.error\n    return this.result\n  }\n\n  visit(location) {\n    const vertex = graph.getVertex(location)\n\n    if (graph.isResolved(location)) {\n      return vertex.result\n    }\n\n    graph.markVisited(location)\n\n    if (!vertex.ast) {\n      return vertex.result\n    }\n\n    try {\n      this.result = vertex.result = this._visit(vertex.ast)\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      throw error\n    }\n\n    return this.result\n  }\n\n  _visit(node) {\n    switch (node._name) {\n      case 'NumberNode':\n        return this.NumberNode(node)\n      case 'CellNode':\n        return this.CellNode(node)\n      case 'TextNode':\n        return this.TextNode(node)\n      case 'FuncOp':\n        return this.FuncOp(node)\n      case 'BinaryOp':\n        return this.BinaryOp(node)\n      case 'UnaryOp':\n        return this.UnaryOp(node)\n      default:\n        const nodeName = node._name || (node.constructor || {}).name\n        throw new Error(`Unrecognized AST node ${nodeName}`)\n    }\n  }\n\n  TextNode(node) {\n    return node.eval()\n  }\n\n  NumberNode(node) {\n    return node.eval()\n  }\n\n  CellNode(node) {\n    const otherLocation = node.location\n    let result\n\n    if (!this.isLocationValid(otherLocation)) {\n      throw new Error('Location out of bounds')\n    }\n\n    if (this.cache[otherLocation] !== undefined) {\n      return this.cache[otherLocation]\n    }\n\n    if (graph.isVisited(otherLocation)) {\n      throw new Error('Circular reference')\n    }\n\n    result = this.dfsCellVisit(otherLocation)\n    this.cache[otherLocation] = result\n    return result\n  }\n\n  UnaryOp(node) {\n    const result = this._visit(node.expr)\n    return node.eval(result)\n  }\n\n  FuncOp(node) {\n    const evaluatedArgs = []\n\n    for (let childNode of node.argNodes) {\n      const result = this._visit(childNode)\n      evaluatedArgs.push(result)\n    }\n\n    return node.eval(evaluatedArgs)\n  }\n\n  BinaryOp(node) {\n    const left = this._visit(node.leftNode)\n    const right = this._visit(node.rightNode)\n    return node.eval(left, right)\n  }\n\n  isLocationValid(location) {\n    const [colIndex, rowIndex] = parseLocation(location)\n\n    if (Math.min(colIndex, rowIndex) < 0) { return false }\n    if (colIndex >= this.state.columns) { return false }\n    if (rowIndex >= this.state.rows) { return false }\n    return true\n  }\n\n  dfsCellVisit(otherLocation) {\n    const interpreter = new Interpreter(otherLocation)\n    let result = 0\n\n    // cell has a value\n    if (graph.hasVertex(otherLocation)) {\n      result = interpreter.visit(otherLocation)\n    }\n\n    return result\n  }\n\n  errorResponse() {\n    const { message: errorMsg } = this.error\n\n    if (errorMsg.match(/division by zero/i)) {\n      return ERR_DIVISION_BY_ZERO\n    } else if (errorMsg.match(/circular reference/i)) {\n      return ERR_CIRCULAR_REFERENCE\n    } else {\n      return ERR_GENERIC\n    }\n  }\n}\n\nexport default Interpreter\nexport {\n  ERR_DIVISION_BY_ZERO,\n  ERR_CIRCULAR_REFERENCE,\n  ERR_GENERIC,\n}\n","import ReduxConnect from './ReduxConnect'\nimport Interpreter from './Interpreter'\n\n\nclass Vertex {\n  constructor(entered) {\n    this.entered = entered\n    this.error = null\n    this.result = null\n    this.ast = null\n  }\n}\n\nclass Graph {\n  constructor() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  interpret(location, input) {\n    const interpreter = new Interpreter(location)\n    return interpreter.interpret(input)\n  }\n\n  recalculate(initLocation) {\n    this.setPendingNodes()\n    this.dfs(initLocation)\n    this.updateStore()\n  }\n\n  getCellResult(location) {\n    if (this.hasVertex(location)) {\n      return this.getVertex(location).result\n    } else {\n      return ''\n    }\n  }\n\n  setPendingNodes() {\n    this.pending = new Set()\n\n    Object.keys(this.adj).forEach(vertex => {\n      this.pending.add(vertex)\n    })\n  }\n\n  isResolved(location) {\n    return this.isVisited(location) || !this.isPending(location)\n  }\n\n  isVisited(location) {\n    return this.visited.has(location)\n  }\n\n  isPending(location) {\n    return this.pending.has(location)\n  }\n\n  dfs(location) {\n    while (this.pending.size > 0) {\n      let interpreter\n      this.visited = new Set()\n\n      if (!location) {\n        location = [...this.pending][0]\n      }\n\n      try {\n        interpreter = new Interpreter(location)\n        interpreter.visit(location)\n      } catch (error) {}\n\n      this.visited.forEach(location => this.pending.delete(location))\n      location = null\n    }\n  }\n\n  updateStore() {\n    const locationKeys = new Set(this.store.locations)\n\n    for (let [location, vertex] of Object.entries(this.adj)) {\n      const { entered, result } = vertex\n\n      locationKeys.delete(location)\n\n      if (result !== this.store.getCellResult(location)) {\n        this.store.replaceCellData(location, entered, result)\n      }\n    }\n\n    for (let location of locationKeys) {\n      this.store.clearCell(location)\n    }\n  }\n\n  markVisited(location) {\n    return this.visited.add(location)\n  }\n\n  addVertex(location, entered) {\n    const vertex = new Vertex(entered)\n    this.adj[location] = vertex\n    return vertex\n  }\n\n  hasVertex(location) {\n    return location in this.adj\n  }\n\n  getVertex(location) {\n    this.testMissingLocation(location)\n    return this.adj[location]\n  }\n\n  delVertex(location) {\n    if (location in this.adj) {\n      delete this.adj[location]\n      this.recalculate()\n    }\n  }\n\n  resetAll() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  testMissingLocation(location) {\n    if (!this.hasVertex(location)) {\n      throw new Error('Missing location')\n    }\n  }\n}\n\nconst graph = new Graph()\n\n\nexport default graph\nexport {\n  Vertex,\n  Graph,\n}\n","import React from 'react'\n\n\nexport const InputContext = React.createContext()\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport { InputContext } from '../cell/InputContext'\n\n\nconst Root = styled.div`\n  position: fixed;\n  background: ${props => props.theme.colors.dropdown.normal};\n  margin-top: 1px;\n  box-shadow: 0 0 5px ${props => props.theme.colors.shadow};\n  border: 1px solid ${props => props.theme.colors.dropdown.active};\n  width: 300px;\n  padding: 6px 8px;\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  padding-top: 12px;\n  font-size: 12px;\n`\n\nconst P = styled.p`\n  line-height: 1em;\n`\n\nconst Hr = styled.hr`\n  border: 0;\n  border-top: 1px solid ${props => props.theme.colors.dropdown.active};\n`\n\nclass FuncDescription extends React.PureComponent {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    cursorPos: PropTypes.number,\n    fnScopes: PropTypes.array,\n  }\n\n  getFnScope() {\n    const { cursorPos, fnScopes } = this.props\n    let currScope\n\n    for (let scope of fnScopes) {\n      if (cursorPos > scope.startIndex) {\n        currScope = scope\n      } else {\n        break\n      }\n    }\n\n    if (currScope && currScope.endIndex === null) { return currScope}\n    if (currScope && cursorPos - 1 < currScope.end) { return currScope }\n    return null\n  }\n\n  getFnNode(scope) {\n    const key = scope.fnName.toUpperCase()\n    return formulaFuncs[key]\n  }\n\n  render() {\n    const scope = this.getFnScope()\n    const inputRect = this.context.clientRect\n    let fnNode\n\n    if (!scope) { return null }\n    fnNode = this.getFnNode(scope)\n\n    return (\n      <Root\n        css={css`\n          top: ${inputRect.bottom};\n          left: ${inputRect.left};\n        `}\n      >\n        <Pre\n          css={css`\n            padding-bottom: 6px;\n          `}\n        >\n          {fnNode.definition}\n        </Pre>\n        <Hr />\n        <Subtitle>Example</Subtitle>\n        <Pre>{fnNode.example}</Pre>\n        <Subtitle>Summary</Subtitle>\n        <P>{fnNode.summary}</P>\n      </Root>\n    )\n  }\n}\n\nFuncDescription.propTypes = {\n  cursorPos: PropTypes.number,\n  fnScopes: PropTypes.array,\n}\n\nexport default FuncDescription\n\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport styled from '@emotion/styled'\n\n\nconst Li = styled.li`\n`\n\nfunction DropdownItem({ item, isActive }) {\n  return (\n    <Li\n      tabIndex={0}\n    >\n      {isActive && item.active ? item.active : item.base}\n    </Li>\n  )\n}\n\nDropdownItem.propTypes = {\n  item: PropTypes.shape({\n    base: PropTypes.node.isRequired,\n    active: PropTypes.node,\n  }),\n  isActive: PropTypes.bool.isRequired,\n}\n\nexport default DropdownItem\n","\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport InteractiveListItem from './InteractiveListItem'\n\n\nconst Ul = styled.ul`\n  position: fixed;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`\n\nclass InteractiveList extends React.PureComponent {\n  static propsTypes = {\n    selectedFn: PropTypes.func.isRequired,\n    items: PropTypes.array.isRequired,\n    top: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    styles: PropTypes.shape({\n      ul: PropTypes.object,\n      li: PropTypes.object,\n    }),\n  }\n\n  state = {\n    activeIndex: 0,\n    selectedIndex: null,\n  }\n\n  componentDidUpdate(prevProps, prevState) { // eslint-disable-line\n    this.fireSelected()\n  }\n\n  fireSelected() {\n    if (this.state.selectedIndex === null) { return }\n    const item = this.props.items[this.state.selectedIndex]\n    this.props.selectedFn(item.value)\n  }\n\n  renderListItems() {\n    return this.props.items\n      .map((item, i) => (\n        <InteractiveListItem\n          key={i}\n          item={item.item}\n          style={{...this.props.styles.li}}\n          isActive={item.isActive}\n        />\n      ))\n  }\n\n  render() {\n    const { items, top, left, styles } = this.props\n\n    if (items.length === 0) { return null }\n\n    return (\n      <Ul\n        tabIndex={-1}\n        style={{ top, left, ...styles.ul }}\n        onClick={this.handleOnClick}\n      >\n        {this.renderListItems()}\n      </Ul>\n    )\n  }\n}\n\nexport default InteractiveList\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport InteractiveList from '~/library/InteractiveList'\nimport Token from '~/formulas/Token'\nimport { InputContext } from '../cell/InputContext'\nimport { withTheme } from 'emotion-theming'\n\n\nconst baseStyle = css`\n  padding: 6px 8px;\n`\n\nconst BaseRoot = styled.div`\n  ${baseStyle}\n  background: ${props => props.theme.colors.dropdown.normal};\n`\n\nconst ActiveRoot = styled.div`\n  ${baseStyle}\n  background: ${props => props.theme.colors.dropdown.active};\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  font-size: 12px;\n`\n\nclass FuncSelector extends React.Component {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    token: PropTypes.instanceOf(Token),\n    colors: PropTypes.object,\n    theme: PropTypes.object,\n  }\n\n  state = {\n    listItems: [],\n    itemIndex: 0,\n    keyEvent: null,\n    isVisible: false,\n  }\n\n  componentDidMount() {\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.state.listItems !== nextState.listItems\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.updateContextData(prevState)\n    this.updateListItems(prevProps)\n    this.keyActions()\n  }\n\n  componentWillUnmount() {\n    this.context.setIsFuncSelectorVisible(false)\n  }\n\n  updateListItems(prevProps) {\n    if (prevProps.token === this.props.token) { return }\n\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  updateContextData(prevState) {\n    const { keyEvent } = this.context\n\n    if (prevState.keyEvent !== keyEvent) {\n      this.setState({ keyEvent })\n      this.setItemIndex(keyEvent)\n    }\n  }\n\n  keyActions() {\n    const { keyEvent } = this.context\n    if (this.state.keyEvent === keyEvent) { return }\n    if (keyEvent.key === 'Enter' && this.state.isVisible) {\n      this.updateInputValue()\n    }\n  }\n\n  updateInputValue() {\n    const { inputValue: currInputValue } = this.context\n    const { token } = this.props\n    const endIndex = currInputValue.length - token.text.length\n    const inputValue = currInputValue.slice(0, endIndex)\n    const { fnName } = this.state.listItems[this.state.itemIndex]\n    const newInputValue = `${inputValue}${fnName}(`\n    this.context.setInputValue(newInputValue)\n  }\n\n  setListItems() {\n    const { token } = this.props\n    const text = token.text.toUpperCase()\n    let isVisible = false\n    let itemIndex\n    const listItems = Object\n      .keys(formulaFuncs)\n      .filter(fnName => fnName.startsWith(text))\n      .sort()\n      .map(fnName => ({\n        item: {\n          base: this.itemBase(fnName),\n          active: this.itemActive(fnName),\n        },\n        isActive: false,\n        fnName,\n      }))\n\n    itemIndex = Math.max(Math.min(listItems.length - 1, this.state.itemIndex), 0)\n\n    if (listItems.length > 0) {\n      listItems[itemIndex].isActive = isVisible = true\n    }\n\n    this.context.setIsFuncSelectorVisible(isVisible)\n    this.setState({ listItems, itemIndex, isVisible })\n  }\n\n  setItemIndex(keyEvent) {\n    let itemIndex = this.state.itemIndex\n\n    switch (keyEvent.key) { // eslint-disable-line default-case\n      case 'ArrowUp':\n          itemIndex = this.state.itemIndex - 1\n        break\n      case 'ArrowDown':\n          itemIndex = this.state.itemIndex + 1\n        break\n    }\n\n    this.setState({ itemIndex }, () => {\n      this.setListItems()\n    })\n  }\n\n  itemBase(fnName) {\n    return (\n      <BaseRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n      </BaseRoot>\n    )\n  }\n\n  itemActive(fnName) {\n    return (\n      <ActiveRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n        <Subtitle>\n          {formulaFuncs[fnName].summary}\n        </Subtitle>\n      </ActiveRoot>\n    )\n  }\n\n  getListStyles() {\n    const { theme } = this.props\n\n    return {\n      ul: {\n        marginTop: 1,\n        boxShadow: `0 0 5px ${theme.colors.shadow}`,\n        border: `1px solid ${theme.colors.dropdown.active}`,\n        width: 300,\n      }\n    }\n  }\n\n  render() {\n    const { listItems, isVisible } = this.state\n    const { clientRect } = this.context\n\n    if (isVisible) {\n      return (\n        <InteractiveList\n          selectItem={() => {}}\n          items={listItems}\n          top={Math.round(clientRect.bottom)}\n          left={Math.round(clientRect.left)}\n          styles={this.getListStyles()}\n        />\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nexport default withTheme(FuncSelector)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { TOKENS as t } from '~/formulas/Lexer'\nimport FuncDescription from './FuncDescription'\nimport FuncSelector from './FuncSelector'\n\n\nclass Suggestions extends React.PureComponent {\n  static propTypes = {\n    tokens: PropTypes.array.isRequired,\n    cursorPos: PropTypes.number,\n  }\n\n  static defaultProps = {\n    cursorPos: 0,\n  }\n\n  state = {\n    fnScopes: [],\n  }\n\n  componentDidMount() {\n    this.setFnScopes()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.tokens !== this.props.tokens) { // avoid infinite loop\n      this.setFnScopes()\n    }\n  }\n\n  setFnScopes() {\n    const stack = []\n    const fnScopes = []\n\n    for (let token of this.props.tokens) {\n      if (token.type === t.FUNCTION) {\n        const scope = { fnName: token.text, startIndex: token.index, endIndex: null }\n        stack.push(scope)\n        fnScopes.push(scope)\n      } else if (token.type === t.LPAREN) {\n        stack.push('(')\n      } else if (token.type === t.RPAREN) {\n        stack.pop()\n        if (stack.length > 0 && stack[stack.length - 1] !== '(') {\n          const scope = stack.pop()\n          scope.endIndex = token.index - 1\n        }\n      }\n    }\n\n    fnScopes.sort((a, b) => a.startIndex - b.startIndex)\n    this.setState({ fnScopes })\n  }\n\n  getComponentToRender() {\n    const { tokens, cursorPos } = this.props\n    let componentName = null\n\n    if (tokens.length < 2) {\n      componentName = null\n    } else {\n      const token1 = tokens[tokens.length - 1]\n      const token2 = tokens.length > 1 && tokens[tokens.length - 2]\n\n      if (\n        [t.UNKNOWN, t.FUNCTION].includes(token1.type)\n        && (token2.category === 'operator'\n            || token2.type === t.EQUALS)\n      ) {\n        if (cursorPos >= token1.index) {\n          componentName = 'FuncSelector'\n        }\n      } else {\n        componentName = 'FuncDescription'\n      }\n    }\n\n    return componentName\n  }\n\n  render() {\n    const { tokens, cursorPos } = this.props\n    const token1 = tokens[tokens.length - 1]\n\n    switch (this.getComponentToRender()) {\n      case 'FuncSelector':\n        return (\n          <FuncSelector\n            token={token1}\n          />\n        )\n      case 'FuncDescription':\n        return (\n          <FuncDescription\n            cursorPos={cursorPos}\n            fnScopes={this.state.fnScopes}\n          />\n        )\n      default:\n        return null\n    }\n  }\n}\n\nexport default Suggestions\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\n\nimport { setCellData, clearCellData } from '~/actions/tableActions'\nimport Lexer from '~/formulas/Lexer'\nimport Suggestions from '../suggestions/Suggestions'\nimport { InputContext } from './InputContext'\n\n\nconst Input = styled.input`\n  display: flex;\n  align-items: center;\n  outline: none;\n  height: 100%;\n  width: 100%;\n  border: 2px solid salmon;\n  padding: 2px;\n  box-sizing: border-box;\n  font-size: 13px;\n  padding-right: 10px;\n`\n\nexport class InputData extends React.PureComponent {\n\n  static propTypes = {\n    // props\n    replaceValue: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired,\n    onEscape: PropTypes.func.isRequired,\n    onCommit: PropTypes.func.isRequired,\n    // redux\n    clearCellData: PropTypes.func.isRequired,\n    entered: PropTypes.string,\n    setCellData: PropTypes.func.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.setIsFuncSelectorVisible = this.setIsFuncSelectorVisible.bind(this)\n    this.setInputValue = this.setInputValue.bind(this)\n  }\n\n  state = {\n    tokens: [],\n    isFuncSelectorVisible: false,\n    inputValue: '',\n    keyEvent: { key: '' },\n  }\n\n  refInput = React.createRef()\n\n  componentDidMount() {\n    this.setInputValue(this.props.replaceValue ? '' : this.props.entered)\n    this.tokenizeInputValue(this.refInput.current.value, '')\n    this.focusInputTag()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.keyEvent !== this.state.keyEvent) {\n      this.keyActions()\n    }\n  }\n\n  keyActions() {\n    switch (this.state.keyEvent.key) { // eslint-disable-line\n      case 'Escape':\n        this.props.onEscape()\n        break\n      case 'Enter':\n        if (!this.state.isFuncSelectorVisible) {\n          this.setNewValue()\n          this.props.onCommit()\n        }\n        break\n    }\n  }\n\n  tokenizeInputValue(entered) {\n    const lexer = new Lexer(entered)\n    const tokens = lexer.getTokens()\n    this.setState({ tokens })\n  }\n\n  focusInputTag() {\n    const input = this.refInput.current\n    input.focus()\n    input.scrollLeft = input.scrollWidth\n  }\n\n  setNewValue() {\n    const { location } = this.props\n    const { inputValue } = this.state\n\n    if (this.isWhitespace(inputValue)) {\n      this.props.clearCellData(location)\n      return\n    }\n\n    this.props.setCellData(location, inputValue)\n  }\n\n  isWhitespace(text) {\n    return text.length === 0 || Boolean(text.match(/^\\s+$/))\n  }\n\n  setIsFuncSelectorVisible(isFuncSelectorVisible) {\n    this.setState({ isFuncSelectorVisible })\n  }\n\n  setInputValue(inputValue) {\n    this.setState({ inputValue })\n    this.tokenizeInputValue(inputValue)\n  }\n\n  handleOnChange(event) {\n    const { target: { value } } = event\n    this.tokenizeInputValue(value)\n    this.setState({ inputValue: value })\n  }\n\n  handleOnKeyDown(event) {\n    const { key, target: { value } } = event\n\n    if (this.state.isFuncSelectorVisible) {\n      event.stopPropagation()\n    } else {\n      if (!['Enter', 'Escape'].includes(key)) {\n        event.stopPropagation()\n      }\n    }\n\n    this.setState({ keyEvent: { key }, inputValue: value })\n  }\n\n  handleOnBlur(event) {\n    this.setState({ inputValue: event.target.value }, () => {\n      this.setNewValue()\n      this.props.onCommit()\n    })\n  }\n\n  render() {\n    const inputEl = this.refInput.current\n\n    return (\n      <InputContext.Provider\n        value={{\n          clientRect: inputEl && inputEl.getBoundingClientRect(),\n          setIsFuncSelectorVisible: this.setIsFuncSelectorVisible,\n          setInputValue: this.setInputValue,\n          keyEvent: this.state.keyEvent,\n          inputValue: this.state.inputValue,\n        }}\n      >\n        <Input\n          ref={this.refInput}\n          data-cell='input'\n          data-location={this.props.location}\n          value={this.state.inputValue}\n          onChange={this.handleOnChange}\n          onKeyDown={this.handleOnKeyDown}\n          onBlur={this.handleOnBlur}\n        />\n        <Suggestions\n          tokens={this.state.tokens}\n          cursorPos={inputEl && inputEl.selectionStart}\n        />\n      </InputContext.Provider>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const entered = cell ? cell.entered : ''\n  return { entered }\n}\n\nconst mapDispatchToProps = { setCellData, clearCellData }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputData)\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { clearCellData } from '~/actions/tableActions'\nimport { setActiveCell } from '~/actions/globalActions'\n\n\nconst DataTag = styled.div`\n  display: flex;\n  align-items: center;\n  outline: none;\n  border: 2px solid transparent;\n  line-height: 1.1em;\n  height: 100%;\n  width: 100%;\n  padding: 2px;\n\n  :focus {\n    border: 2px solid salmon;\n  }\n`\n\nexport class ResultData extends React.PureComponent {\n  static propTypes = {\n    // props\n    isFocused: PropTypes.bool,\n    location: PropTypes.string.isRequired,\n    onDoubleClick: PropTypes.func.isRequired,\n    onKeyDownEditable: PropTypes.func.isRequired,\n    // redux\n    clearCellData: PropTypes.func.isRequired,\n    setActiveCell: PropTypes.func.isRequired,\n    result: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n  }\n\n  refDataTag = React.createRef()\n\n  componentDidMount() {\n    this.focusDataTag()\n  }\n\n  focusDataTag() {\n    if (this.props.isFocused) { this.refDataTag.current.focus() }\n  }\n\n  handleOnKeyDown({ key }) {\n    this.props.setActiveCell(this.props.location)\n\n    if (['Delete', 'Backspace'].includes(key)) {\n      const valueStr = '' + this.props.result\n\n      if (valueStr.length > 0) {\n        this.props.clearCellData(this.props.location)\n      }\n      // key pressed is a printable symbol, ex: 'a', '1', ','\n      // can be further refined, but for now it's fine\n    } else if (key.length === 1) {\n      this.props.onKeyDownEditable()\n    }\n  }\n\n  getStyle() {\n    let style = {}\n\n    if (typeof this.props.result === 'number') {\n      style = {\n        whiteSpace: 'nowrap',\n        textOverflow: 'clip',\n        overflow: 'hidden',\n      }\n    }\n\n    return style\n  }\n\n  render() {\n    return (\n      <DataTag\n        ref={this.refDataTag}\n        data-cell='result'\n        data-location={this.props.location}\n        css={this.getStyle()}\n        tabIndex='0'\n        onKeyDown={this.handleOnKeyDown}\n        onDoubleClick={this.props.onDoubleClick}\n      >\n        {this.props.result}\n      </DataTag>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const result = cell ? cell.result : ''\n  return { result }\n}\n\nconst mapDispatchToProps = { clearCellData, setActiveCell }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultData)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { interpret } from 'xstate'\n\nimport displayMachine from './displayMachine'\nimport InputData from './InputData'\nimport ResultData from './ResultData'\n\n\nconst Wrapper = styled.div`\n  cursor: cell;\n  font-size: 13px;\n  border-right: 1px solid ${props => props.theme.colors.cell.border};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.border};\n`\nclass CellData extends React.PureComponent {\n  static propTypes = {\n    location: PropTypes.string.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.resultOnDoubleClick = this.resultOnDoubleClick.bind(this)\n    this.resultOnKeyDownEditable = this.resultOnKeyDownEditable.bind(this)\n    this.inputOnEscape = this.inputOnEscape.bind(this)\n    this.inputOnCommit = this.inputOnCommit.bind(this)\n  }\n\n  state = {\n    displayState: displayMachine.initialState,\n  }\n\n  displayService = interpret(displayMachine)\n    .onTransition(displayState => this.setState({ displayState }))\n\n  componentDidMount() {\n    this.displayService.start()\n  }\n  \n  componentWillUnmount() {\n    this.displayService.stop()\n  }\n  \n  resultOnDoubleClick() {\n    this.displayService.send('EDITABLE_MODIFY')\n  }\n\n  resultOnKeyDownEditable() {\n    this.displayService.send('EDITABLE_REPLACE')\n  }\n\n  inputOnEscape() {\n    this.displayService.send('STATIC_FOCUSED')\n  }\n\n  inputOnCommit() {\n    this.displayService.send('STATIC')\n  }\n\n  renderData() {\n    const { displayState } = this.state\n\n    if (displayState.matches('editable')) {\n      return (\n        <InputData\n          replaceValue={displayState.matches('editable.replace')}\n          location={this.props.location}\n          onEscape={this.inputOnEscape}\n          onCommit={this.inputOnCommit}\n        />\n      )\n    } else {\n      return (\n        <ResultData\n          location={this.props.location}\n          onDoubleClick={this.resultOnDoubleClick}\n          onKeyDownEditable={this.resultOnKeyDownEditable}\n          isFocused={displayState.matches('static.focused')}\n        />\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Wrapper\n        className='row-label-height col-label-width'\n      >\n        {this.renderData()}\n      </Wrapper>\n    )\n  }\n}\n\nexport default CellData\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport RowLabel from '../cell/RowLabel'\nimport CellData from '../cell/CellData'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nfunction DataRow({ rowNumber, colLabels, activeCell }) {\n  const dataCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => {\n      const location = `${colLabels[i]}-${rowNumber}`\n\n      return (\n        <CellData\n          key={i}\n          isActive={activeCell === location}\n          location={location}\n        />\n      )\n    })\n  )\n\n  return (\n    <Row\n      data-row={rowNumber}\n    >\n      <RowLabel\n        label={rowNumber}\n      />\n      {dataCells()}\n    </Row>\n  )\n}\n\nDataRow.propTypes = {\n  rowNumber: PropTypes.number,\n  colLabels: PropTypes.arrayOf(PropTypes.string),\n  activeCell: PropTypes.string,\n}\n\nexport default DataRow\n\n","import { Machine, assign } from 'xstate'\n\nimport { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nfunction getTargetLocation({ rows, columns, rowIndex, colIndex, key }) {\n  switch (key) {\n    case 'ArrowUp':\n      rowIndex = Math.max(0, rowIndex - 1)\n      break\n    case 'ArrowRight':\n      colIndex = Math.min(columns - 1, colIndex + 1)\n      break\n    case 'ArrowDown':\n    case 'Enter':\n      rowIndex = Math.min(rows - 1, rowIndex + 1)\n      break\n    case 'ArrowLeft':\n      colIndex = Math.max(0, colIndex - 1)\n      break\n    default:\n      return null\n  }\n\n  const colLabel = getColumnLabel(colIndex)\n  const rowLabel = '' + (rowIndex + 1)\n\n  return `${colLabel}-${rowLabel}`\n}\n\nfunction focusTargetCell(ctx) {\n  if (!ctx.endLocation) { return Promise.resolve(false) }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const id = `[data-location=\"${ctx.endLocation}\"]`\n      const cell = document.querySelector(id)\n      if (cell) { cell.focus() }\n      resolve(true)\n    }, 0)\n  })\n}\n\nconst state = {\n  id: 'keyboardNav',\n  initial: 'idle',\n  context: {\n    columns: null,\n    rows: null,\n    key: null,\n    colIndex: null,\n    rowIndex: null,\n    endLocation: null,\n    wasFocused: false,\n  },\n  states: {\n    idle: {\n      on: {\n        'MOVE_FOCUS': {\n          actions: ['setNewContext', 'calcTargetLocation'],\n          target: 'focusTarget',\n        }\n      }\n    },\n    focusTarget: {\n      invoke: {\n        src: focusTargetCell,\n        onDone: {\n          actions: assign({ wasFocused: (ctx, event) => event.data }),\n          target: 'idle',\n        },\n      },\n    },\n  },\n}\n\nconst actions = {\n  actions: {\n    setNewContext: assign((ctx, { key, location }) => {\n      const [colIndex, rowIndex] = parseLocation(location)\n      return { colIndex, rowIndex, key }\n    }),\n    calcTargetLocation: assign({\n      endLocation: (ctx) => {\n        return getTargetLocation(ctx)\n      }\n    }),\n  },\n}\n\nfunction getKeyboardNavMachine(rows, columns) {\n  const newContext = {\n    ...state.context,\n    columns,\n    rows,\n  }\n\n  return Machine(state, actions, newContext)\n}\n\nexport {\n  state,\n  actions,\n  getTargetLocation,\n  focusTargetCell,\n}\n\nexport default getKeyboardNavMachine\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport { interpret } from 'xstate'\n\nimport ColLabelRow from './ColLabelRow'\nimport DataRow from './DataRow'\nimport { getColumnNames } from '~/library/utils'\nimport getKeyboardNavMachine from './keyboardNavMachine'\n\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n  border-top: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-left: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .row-label-width {\n    width: 34px;\n  }\n\n  .row-label-height {\n    min-height: 28px;\n  }\n\n  .col-label-width {\n    width: 140px;\n  }\n\n  .col-label-height {\n    min-height: 26px;\n  }\n`\n\nexport class Table extends React.PureComponent {\n  static propTypes = {\n    activeCell: PropTypes.string,\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleTableOnClick = this.handleTableOnClick.bind(this)\n    this.handleTableOnKeyDown = this.handleTableOnKeyDown.bind(this)\n    this.colLabels = getColumnNames(props.columns)\n  }\n\n  keyboardNavMachine = getKeyboardNavMachine(this.props.rows, this.props.columns)\n  focusService = interpret(this.keyboardNavMachine)\n\n  componentDidMount() {\n    this.focusService.start()\n  }\n\n  componentWillUnmount() {\n    this.focusService.stop()\n  }\n\n  handleTableOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleTableOnKeyDown(event) {\n    event.stopPropagation()\n    this.moveFocus(event.key, event.target.dataset.location)\n  }\n\n  moveFocus(key, location) {\n    this.focusService.send({ type: 'MOVE_FOCUS', key, location })\n  }\n\n  renderColLabelRow(i) {\n    return (\n      <ColLabelRow\n        key={i}\n        rows={this.props.rows}\n        colLabels={this.colLabels}\n      />\n    )\n  }\n\n  renderDataRows(rowNumber) {\n    return (\n      <DataRow\n      key={rowNumber}\n        rowNumber={rowNumber}\n        colLabels={this.colLabels}\n        activeCell={this.props.activeCell}\n      />\n    )\n  }\n\n  renderRows() {\n    return new Array(this.props.rows + 1).fill(0).map((_, i) => {\n      if (i === 0) {\n        return this.renderColLabelRow(i)\n      } else {\n        return this.renderDataRows(i)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Grid\n        data-table='app'\n        onClick={this.handleTableOnClick}\n        onKeyDown={this.handleTableOnKeyDown}\n      >\n        {this.renderRows()}\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { activeCell, rows, columns } = state.global\n  return { activeCell, rows, columns }\n}\n\nexport default connect(mapStateToProps)(Table)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\n\nimport { setActiveCell } from './actions/globalActions'\nimport Header from './components/header/Header'\nimport Table from './components/table/Table'\n\n\nconst Container = styled.div`\n  display: grid;\n  grid:\n    \"left-blank main right-blank\" 100vh\n    / auto minmax(auto, 1000px) auto;\n`\n\nconst Main = styled.main`\n  grid-area: main;\n`\n\nfunction App({ setActiveCell }) {\n  const handleOnClick = () => {\n    setActiveCell(null)\n  }\n\n  return (\n    <Container\n      onClick={handleOnClick}\n    >\n      <Main>\n        <Header />\n        <Table />\n      </Main>\n    </Container>\n  )\n}\n\nApp.propTypes = {\n  setActiveCell: PropTypes.func,\n}\n\nconst mapDispatchToProps = { setActiveCell }\n\nexport default connect(null, mapDispatchToProps)(App)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from 'emotion-theming'\nimport { Global } from '@emotion/core'\nimport 'sanitize.css'\n\nimport appStore from './reducers/'\nimport globalStyles from './styles/globalStyles'\nimport theme from './styles/theme'\nimport App from './App'\n\n\nfunction Root() {\n  return (\n    <Provider store={appStore}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Global styles={globalStyles} />\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default Root\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
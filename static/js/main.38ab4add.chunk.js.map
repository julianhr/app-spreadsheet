{"version":3,"sources":["library/utils.js","formulas/TokenSanitizer.js","formulas/LexerRule.js","formulas/Lexer.js","formulas/formulaFunctions.js","formulas/Token.js","components/cellInputter/InputContext.js","reducers/globalReducer.js","reducers/tableReducer.js","reducers/index.js","actions/globalActions.js","formulas/ReduxConnect.js","formulas/ast.js","formulas/Parser.js","formulas/Interpreter.js","formulas/graph.js","actions/tableActions.js","components/cellInputter/CellInputter.jsx","components/cellInputter/FuncDescription.jsx","library/InteractiveListItem.jsx","library/InteractiveList.jsx","components/cellInputter/FuncSelector.jsx","components/cellInputter/Suggestions.jsx","styles/theme.js","styles/globalStyles.js","components/header/Header.jsx","components/cell/ColLabel.jsx","components/table/ColLabelRow.jsx","components/cell/RowLabel.jsx","components/cell/CellResult.jsx","components/table/DataRow.jsx","components/table/keyboardNavMachine.js","components/table/Table.jsx","App.jsx","Root.jsx","serviceWorker.js","index.js"],"names":["BASE_CODE_POINT","codePointAt","getColumnNames","cols","names","prevNames","remainCols","newNames","outerLoop","_i","_prevNames","length","colName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","letter","value","push","concat","err","return","Object","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getColumnLabel","num","label","basePoint","curr","codePoint","String","fromCodePoint","Math","floor","reverse","join","parseLocation","location","_location$split","split","_location$split2","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","col","row","reduce","prev","charCodeAt","isNumber","numStr","isPeriodsAndDigits","Boolean","match","periodCount","TokenSanitizer","tokens","classCallCheck","this","_this","map","token","type","t","NUMBER","number","CELL","cell","FUNCTION","function","text","parseFloat","TEXT","getCellLabel","fn","getFunction","index","slice","toUpperCase","fnName","fnNode","formulaFuncs","LexerRule","regex","groupIndex","category","lastIndex","input","exec","TOKENS","EOF","EQUALS","COMMA","COLON","LPAREN","RPAREN","PLUS","MINUS","MULT","DIV","GRAMMAR","Lexer","char","initChar","markers","nextToken","sanitizer","sanitize","Token","isFormula","tokenTEXTorNUMBER","whitespaceLen","getWhitespaceLen","_GRAMMAR","rule","setIndex","test","consume","tokenTEXT","whitespace","chars","isEOF","isSeparator","isWhitespace","count","Fn","AVERAGE","_Fn$SUM","_Fn$COUNT","arguments","Error","SUM","apply","COUNT","definition","example","summary","CONCAT","_len","args","Array","_key","MAX","_len2","_key2","forEach","arg","TypeError","max","MIN","_len3","_key3","min","POWER","_len4","_key4","base","exp","pow","SQRT","sqrt","_len5","_key5","AVG","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","POW","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","html","__webpack_require__","d","__webpack_exports__","InputContext","react__WEBPACK_IMPORTED_MODULE_0__","n","React","createContext","createReducer","activeCell","cellInputter","rows","columns","SET_ACTIVE_CELL","state","_ref","payload","SET_CELL_INPUTTER","_ref2","UNSET_CELL_INPUTTER","SET_CELL_DATA","data","DELETE_CELL_DATA","appStore","configureStore","reducer","global","globalReducer","table","tableReducer","setActiveCell","displayCellInputter","closeCellInputter","redux_starter_kit__WEBPACK_IMPORTED_MODULE_0__","createAction","ReduxConnect","store","globalState","getState","result","entered","dispatch","replaceCellData","clearCellData","keys","AST","name","_name","TextNode","textNode","possibleConstructorReturn","getPrototypeOf","call","NumberNode","numberNode","_this2","CellNode","_this3","UnaryOp","opNode","expr","_this4","evaluatedExpr","FuncOp","funcNode","argNodes","_this5","evaluatedArgs","toConsumableArray","BinaryOp","leftNode","rightNode","_this6","left","right","Parser","ast","hasCellRefs","peekType","equals","node","operator","term","includes","factor","unaryOp","enclosedExpr","func","lparen","rparen","Interpreter","error","cache","lexer","parser","vertex","graph","addVertex","getTokens","parse","recalculate","errorResponse","getVertex","isResolved","markVisited","_visit","nodeName","constructor","eval","otherLocation","isLocationValid","isVisited","dfsCellVisit","childNode","_parseLocation","_parseLocation2","slicedToArray","colIndex","rowIndex","interpreter","hasVertex","visit","errorMsg","message","Vertex","Graph","adj","pending","visited","interpret","initLocation","setPendingNodes","dfs","updateStore","Set","add","isPending","has","size","delete","locationKeys","locations","_Object$entries","entries","_ref3","getCellResult","clearCell","testMissingLocation","setCellData","delVertex","Promise","resolve","tableActions_replaceCellData","Root","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_8__","target","styles","Input","HiddenInput","CellInputter","_React$PureComponent","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","isFuncSelectorVisible","inputValue","keyEvent","key","cursorPos","refInput","createRef","refHiddenInput","handleOnKeyDown","bind","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","handleOnBlur","handleOnChange","setIsFuncSelectorVisible","setInputValue","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_7__","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","props","willReplaceValue","focusInputTag","prevProps","prevState","setFocus","keyActions","tokenizeInputValue","setCellValue","setState","current","selectionEnd","focus","el","elId","nextRowIndex","colLabel","rowLabel","endLocation","document","querySelector","activeElement","cellValue","setImmediate","selectionStart","event","width","height","_this$props$cellRect","cellRect","top","cellWidth","cellHeight","hiddenInputEl","textWidth","scrollWidth","getBoundingClientRect","inputEl","_this$props$cellRect2","_emotion_core__WEBPACK_IMPORTED_MODULE_10__","_InputContext__WEBPACK_IMPORTED_MODULE_16__","Provider","inputRect","css","getRootStyle","ref","defaultValue","_emotion_css__WEBPACK_IMPORTED_MODULE_0__","data-cell","data-location","onChange","onKeyDown","onBlur","_Suggestions__WEBPACK_IMPORTED_MODULE_15__","PureComponent","mapDispatchToProps","connect","_state$global","_state$global$cellInp","styled_base_browser_esm","theme","colors","dropdown","normal","shadow","active","Pre","Subtitle","P","Hr","FuncDescription","currScope","_this$props","fnScopes","scope","startIndex","endIndex","getFnScope","context","bottom","getFnNode","core_browser_esm","css_browser_esm","FuncDescription_ref","contextType","Li","DropdownItem","item","isActive","tabIndex","Ul","InteractiveList","activeIndex","selectedIndex","fireSelected","items","selectedFn","i","react_default","a","createElement","InteractiveListItem","style","objectSpread","li","ul","onClick","handleOnClick","renderListItems","propsTypes","PropTypes","isRequired","array","shape","object","baseStyle","BaseRoot","ActiveRoot","FuncSelector","listItems","itemIndex","isVisible","setListItems","nextProps","nextState","updateContextData","updateListItems","setItemIndex","updateInputValue","currInputValue","rightChunkIndex","leftChunk","rightChunk","newInputValue","filter","startsWith","sort","itemBase","itemActive","FuncSelector_Pre","FuncSelector_Subtitle","marginTop","boxShadow","border","_this$state","library_InteractiveList","selectItem","round","getListStyles","Component","withTheme","Suggestions","setFnScopes","stack","pop","b","getCurrTokenIndex","_this$getCompareToken","getCompareTokens","_this$getCompareToken2","tokenBefore","tokenCurr","tokenAfter","option1","option2","cellInputter_FuncSelector","renderedFuncSelector","getFuncSelector","cellInputter_FuncDescription","defaultProps","breaks","xs","sm","md","lg","breakBump","queries","from","breakPoint","upTo","borderDark","labelBkg","primary","strong","field","background","globalStyles","Header","InnerBorder","ColLabel","data-col","className","Row","ColLabelRow","colLabels","data-row","ColLabelRow_InnerBorder","fill","_","cell_ColLabel","Wrapper","RowLabel","Cell","ResultCell","refCell","handleCellOnKeyDown","assertThisInitialized","handleCellOnDoubleClick","handleCellOnClick","handleWrapperOnClick","inherits","createClass","cellDomRect","JSON","stringify","whiteSpace","textOverflow","overflow","stopPropagation","CellResult_Wrapper","getStyle","onDoubleClick","ownProps","DataRow","rowNumber","DataRow_Row","cell_RowLabel","CellResult","id","initial","wasFocused","states","idle","on","MOVE_FOCUS","actions","focusTarget","invoke","src","ctx","setTimeout","onDone","assign","setNewContext","calcTargetLocation","getTargetLocation","getKeyboardNavMachine","newContext","Machine","Grid","Table","keyboardNavMachine","focusService","handleTableOnClick","handleTableOnKeyDown","start","stop","moveFocus","dataset","send","table_ColLabelRow","table_DataRow","renderColLabelRow","renderDataRows","data-table","renderRows","Container","Main","data-dummy-focus-stop","header_Header","table_Table","es","react_router_dom","emotion_theming_browser_esm","src_App","window","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6OAAMA,EAAkB,IAAIC,YAAY,GAuBjC,SAASC,EAAeC,GAM7B,IALA,IACIC,EAAQ,GACRC,EAAY,CAAC,IACbC,EAAaH,EAEVG,EAAa,GAAG,CACrB,IAAMC,EAAW,GAEjBC,EACA,QAAAC,EAAA,EAAAC,EAAoBL,EAApBI,EAAAC,EAAAC,OAAAF,IAA+B,CAA1B,IAAIG,EAAOF,EAAAD,GAAeI,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAC7B,QAAAC,EAAAC,EAVa,6BAUbC,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA6B,KAApBU,EAAoBN,EAAAO,MAC3B,GAAmB,IAAflB,EAAqB,MAAME,EAC/BD,EAASkB,KAAT,GAAAC,OAAiBd,GAAjBc,OAA2BH,IAC3BjB,GAAc,GAJa,MAAAqB,GAAAb,GAAA,EAAAC,EAAAY,EAAA,YAAAd,GAAA,MAAAK,EAAAU,QAAAV,EAAAU,SAAA,WAAAd,EAAA,MAAAC,IAQ/BV,EAAYE,EACZH,EAAK,GAAAsB,OAAAG,OAAAC,EAAA,EAAAD,CAAOzB,GAAUG,GAGxB,OAAOH,EAyBF,SAAS2B,EAAeC,GAC7B,IAAMC,EAAQ,GACRC,EAAYlC,EACdmC,EAAOH,EAAM,EAEjB,EAAG,CAED,IACMI,EAAYF,GAFlBC,GAAQ,GACsB,GAExBZ,EAASc,OAAOC,cAAcF,GACpCH,EAAMR,KAAKF,GAEXY,EAAOI,KAAKC,MAAML,EAAO,UAClBA,EAAO,GAEhB,OAAOF,EAAMQ,UAAUC,KAAK,IAGvB,SAASC,EAAcC,GAAU,IAAAC,EACrBD,EAASE,MAAM,KADMC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAgB,EAAA,GACjCI,EADiCF,EAAA,GAC5BG,EAD4BH,EAAA,GAKtC,MAAO,CAH4BE,EA5BVH,MAAM,IACPK,OAAO,SAACC,EAAM7B,GAAP,OACtB,GAAP6B,EAAY7B,EAAO8B,WAAW,GAAKrD,EAAkB,GACpD,GAEc,GAwBCkD,EAAM,GAKnB,SAASI,EAASC,GACvB,IAAMC,EAAqBC,QAAQF,EAAOG,MAAM,aAC1CC,GAAeJ,EAAOG,MAAM,QAAU,IAAI/C,OAEhD,QAAK6C,MACDG,EAAc,KACI,IAAlBJ,EAAO5C,QAA8B,MAAd4C,EAAO,gFCnCrBK,aA7Db,SAAAA,EAAYC,GAAShC,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAH,GACnBG,KAAKF,OAASA,yDAGL,IAAAG,EAAAD,KACT,OAAOA,KAAKF,OAAOI,IAAI,SAAAC,GACrB,OAAOA,EAAMC,MACX,KAAKC,EAAEC,OACL,OAAOL,EAAKM,OAAOJ,GACrB,KAAKE,EAAEG,KACL,OAAOP,EAAKQ,KAAKN,GACnB,KAAKE,EAAEK,SACL,OAAOT,EAAKU,SAASR,GACvB,QACE,OAAOA,oCAKRA,GACL,OAAKZ,YAASY,EAAMS,OAKpBT,EAAM1C,MAAQoD,WAAWV,EAAMS,MACxBT,IALLA,EAAMC,KAAOC,EAAES,KACRX,gCAONA,GAEH,OADAA,EAAM1C,MAAQuC,KAAKe,aAAaZ,GACzBA,mCAGAA,GACP,IAAMa,EAAKhB,KAAKiB,YAAYd,GAQ5B,OANIa,EACFb,EAAM1C,MAAQuD,EAEdb,EAAMC,KAAOC,EAAES,KAGVX,uCAGIA,GAAO,IACVS,EAAST,EAATS,KACAM,EAAUN,EAAKjB,MAAM,OAArBuB,MACFhC,EAAM0B,EAAKO,MAAM,EAAGD,GAAOE,cAC3BjC,EAAMyB,EAAKO,MAAMD,GACvB,SAAAvD,OAAUuB,EAAV,KAAAvB,OAAiBwB,uCAGPgB,GACV,IAAMkB,EAASlB,EAAMS,KAAKQ,cACpBE,EAASC,IAAaF,GAC5B,OAAOC,GAAUA,EAAON,YC9CbQ,aAhBb,SAAAA,EAAYC,EAAOC,EAAYvB,EAAOwB,GAAW7D,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAwB,GAC/CxB,KAAKyB,MAAQA,EACbzB,KAAK0B,WAAaA,EAClB1B,KAAKG,MAAQA,EACbH,KAAK2B,SAAWA,uDAGTT,GACPlB,KAAKyB,MAAMG,UAAYV,+BAGpBW,GACH,OAAO7B,KAAKyB,MAAMK,KAAKD,4ECP3B,IAAME,EAAS,CAEbC,IAAK,MAELC,OAAQ,SACRC,MAAO,QACPC,MAAO,QACPC,OAAQ,SACRC,OAAQ,SAERC,KAAM,OACNC,MAAO,QACPC,KAAM,OACNC,IAAK,MAELnC,OAAQ,SACRE,KAAM,OACNE,SAAU,WACVI,KAAM,QAGFT,EAAI0B,EAEJW,EAAU,CAEd,IAAIlB,EAAU,KAAM,EAAGnB,EAAE4B,OAAQ,aACjC,IAAIT,EAAU,KAAM,EAAGnB,EAAE6B,MAAO,aAChC,IAAIV,EAAU,KAAM,EAAGnB,EAAE8B,MAAO,aAChC,IAAIX,EAAU,MAAO,EAAGnB,EAAE+B,OAAQ,aAClC,IAAIZ,EAAU,MAAO,EAAGnB,EAAEgC,OAAQ,aAElC,IAAIb,EAAU,MAAO,EAAGnB,EAAEiC,KAAM,YAChC,IAAId,EAAU,MAAO,EAAGnB,EAAEkC,MAAO,YACjC,IAAIf,EAAU,MAAO,EAAGnB,EAAEmC,KAAM,YAChC,IAAIhB,EAAU,MAAO,EAAGnB,EAAEoC,IAAK,YAE/B,IAAIjB,EAAU,WAAY,EAAGnB,EAAEC,OAAQ,UACvC,IAAIkB,EAAU,gBAAiB,EAAGnB,EAAEG,KAAM,UAC1C,IAAIgB,EAAU,eAAgB,EAAGnB,EAAEK,SAAU,WAIzCiC,aACJ,SAAAA,EAAYd,GAAQ/D,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAA2C,GAClB3C,KAAK6B,MAAQA,EACb7B,KAAKkB,MAAQ,EACblB,KAAK4C,KAAO5C,KAAK6C,SAAShB,GAC1B7B,KAAK8C,QAAU,GACf9C,KAAKF,OAAS,2DAId,KAAOE,KAAK4C,OAASvC,EAAE2B,KAAK,CAC1B,IAAM7B,EAAQH,KAAK+C,YACnB/C,KAAKF,OAAOpC,KAAKyC,GAGnB,IAAM6C,EAAY,IAAInD,EAAeG,KAAKF,QAE1C,OADAE,KAAKF,OAASkD,EAAUC,WACjBjD,KAAKF,2CAIZ,GAAIE,KAAK4C,OAASvC,EAAE2B,IAClB,OAAO,IAAIkB,IAAM7C,EAAE2B,IAAK3B,EAAE2B,IAAK,EAAG,MAAOhC,KAAKkB,OAGhD,IAAKlB,KAAKmD,YACR,OAAOnD,KAAKoD,oBAMd,IAHA,IACIjD,EADEkD,EAAgBrD,KAAKsD,mBAG3B5G,EAAA,EAAA6G,EAAiBb,EAAjBhG,EAAA6G,EAAA3G,OAAAF,IAA0B,CAArB,IAAI8G,EAAID,EAAA7G,GACX8G,EAAKC,SAASzD,KAAKkB,OACnB,IAAMvB,EAAQ6D,EAAKE,KAAK1D,KAAK6B,OAE7B,GAAIlC,GAASA,EAAMuB,QAAUlB,KAAKkB,MAAO,CACvC,IAAMN,EAAOjB,EAAM6D,EAAK9B,YACxBvB,EAAQ,IAAI+C,IAAMM,EAAKrD,MAAOS,EAAMyC,EAAeG,EAAK7B,SAAU3B,KAAKkB,OACvElB,KAAKkB,OAASN,EAAKhE,OAAS,EAC5BoD,KAAK2D,UACL,OAQJ,OAJKxD,IACHA,EAAQH,KAAK4D,UAAUP,IAGlBlD,mCAGA0B,GAMP,OAL0B,IAAtB7B,KAAK6B,MAAMjF,SACboD,KAAK6B,MAAQ,IACb7B,KAAKkB,OAAS,GAGTW,EAAM7B,KAAKkB,yCAGV2C,GAGR,IAFA,IAAMC,EAAQ,KAEL9D,KAAK+D,SAAW/D,KAAKgE,eAAiBhE,KAAKiE,iBAClDH,EAAMpG,KAAKsC,KAAK4C,MAChB5C,KAAK2D,UAGP,IAAM/C,EAAOkD,EAAMnF,KAAK,IACxB,OAAO,IAAIuE,IAAM7C,EAAES,KAAMF,EAAMiD,EAAY,SAAU7D,KAAKkB,MAAQN,EAAKhE,oDAIvE,IAAIuD,EAUJ,OAPEA,EADEZ,YAASS,KAAK6B,OACR,IAAIqB,IAAM7C,EAAEC,OAAQN,KAAK6B,MAAO,EAAG,SAAU7B,KAAKkB,OAElD,IAAIgC,IAAM7C,EAAES,KAAMd,KAAK6B,MAAO,EAAG,SAAU7B,KAAKkB,OAG1DlB,KAAKkB,MAAQlB,KAAK6B,MAAMjF,OAAS,EACjCoD,KAAK2D,UACExD,oCAIPH,KAAKkB,QAEDlB,KAAKkB,MAAQlB,KAAK6B,MAAMjF,OAC1BoD,KAAK4C,KAAO5C,KAAK6B,MAAM7B,KAAKkB,OAE5BlB,KAAK4C,KAAOvC,EAAE2B,wCAKhB,MAAyB,MAAlBhC,KAAK6B,MAAM,mCAIlB,OAAO7B,KAAK4C,OAASvC,EAAE2B,2CAIvB,OAAQhC,KAAK+D,SAAWrE,QAAQM,KAAK4C,KAAKjD,MAAM,6CAIhD,OAAOD,QAAQM,KAAK4C,KAAKjD,MAAM,8DAM/B,IAFA,IAAIuE,EAAQ,EAELlE,KAAKiE,gBACVC,IACAlE,KAAK2D,UAGP,OAAOO,WAIIvB,mDC7KTwB,EAAK,CACTC,QAAS,CACPpD,GAAI,WAAa,IAAAqD,EAAAC,EACf,GAAoB,IAAhBC,UAAK3H,OACP,MAAM,IAAI4H,MAAM,kBAGlB,OAAOH,EAAAF,EAAGM,KAAIzD,GAAP0D,MAAAL,EAAAE,YAAqBD,EAAAH,EAAGQ,OAAM3D,GAAT0D,MAAAJ,EAAAC,YAE9BK,WAAY,+BACZC,QAAS,oBACTC,QAAS,iDAEXC,OAAQ,CACN/D,GAAI,WAAa,QAAAgE,EAAAT,UAAA3H,OAATqI,EAAS,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAATF,EAASE,GAAAZ,UAAAY,GACf,GAAoB,IAAhBF,EAAKrI,OACP,MAAM,IAAI4H,MAAM,kBAGlB,OAAOS,EAAK7F,OAAO,SAACC,EAAMjB,GAAP,OAAiBiB,EAAOjB,GAAO,KAEpDwG,WAAY,gCACZC,QAAS,uBACTC,QAAS,kEAEXH,MAAO,CACL3D,GAAI,kBAAauD,UAAK3H,QACtBgI,WAAY,iCACZC,QAAS,sBACTC,QAAS,sDAEXM,IAAK,CACHpE,GAAI,WAAa,QAAAqE,EAAAd,UAAA3H,OAATqI,EAAS,IAAAC,MAAAG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAATL,EAASK,GAAAf,UAAAe,GACf,GAAoB,IAAhBL,EAAKrI,OACP,MAAM,IAAI4H,MAAM,kBASlB,OANAS,EAAKM,QAAQ,SAAAC,GACX,GAAmB,kBAARA,EACT,MAAM,IAAIC,UAAJ,GAAA9H,OAAiB6H,EAAjB,uBAIHhH,KAAKkH,IAALhB,MAAAlG,KAAYyG,IAErBL,WAAY,2BACZC,QAAS,oBACTC,QAAS,sDAEXa,IAAK,CACH3E,GAAI,WAAa,QAAA4E,EAAArB,UAAA3H,OAATqI,EAAS,IAAAC,MAAAU,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAATZ,EAASY,GAAAtB,UAAAsB,GACf,GAAoB,IAAhBZ,EAAKrI,OACP,MAAM,IAAI4H,MAAM,kBASlB,OANAS,EAAKM,QAAQ,SAAAC,GACX,GAAmB,kBAARA,EACT,MAAM,IAAIC,UAAJ,GAAA9H,OAAiB6H,EAAjB,uBAIHhH,KAAKsH,IAALpB,MAAAlG,KAAYyG,IAErBL,WAAY,2BACZC,QAAS,oBACTC,QAAS,uDAEXiB,MAAO,CACL/E,GAAI,WAAa,QAAAgF,EAAAzB,UAAA3H,OAATqI,EAAS,IAAAC,MAAAc,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAThB,EAASgB,GAAA1B,UAAA0B,GACf,GAAoB,IAAhBhB,EAAKrI,OACP,MAAM,IAAI4H,MAAM,mCAFH,IAKR0B,EAAajB,EALL,GAKFkB,EAAOlB,EALL,GAMf,OAAOzG,KAAK4H,IAAIF,EAAMC,IAExBvB,WAAY,wBACZC,QAAS,cACTC,QAAS,2CAEXuB,KAAM,CACJrF,GAAI,WACF,GAAoB,IAAhBuD,UAAK3H,OACP,MAAM,IAAI4H,MAAJ,kCAGR,OAAOhG,KAAK8H,KAAL/B,UAAA3H,QAAA,OAAAK,EAAAsH,UAAA,KAETK,WAAY,cACZC,QAAS,sBACTC,QAAS,wCAEXL,IAAK,CACHzD,GAAI,WAAa,QAAAuF,EAAAhC,UAAA3H,OAATqI,EAAS,IAAAC,MAAAqB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAATvB,EAASuB,GAAAjC,UAAAiC,GACf,GAAoB,IAAhBvB,EAAKrI,OACP,MAAM,IAAI4H,MAAM,kBAGlB,OAAOS,EAAK7F,OAAO,SAACC,EAAMjB,GAAP,OAAgBiB,EAAOjB,KAE5CwG,WAAY,2BACZC,QAAS,oBACTC,QAAS,6CAKbX,EAAGsC,IAAH3I,OAAA4I,EAAA,EAAA5I,CAAA,GACKqG,EAAGC,QADR,CAEEQ,WAAY,2BACZC,QAAS,kBAGXV,EAAGwC,IAAH7I,OAAA4I,EAAA,EAAA5I,CAAA,GACKqG,EAAG4B,MADR,CAEEnB,WAAY,sBACZC,QAAS,cAGIV,kDC3GAjB,IAXb,SAAAA,EAAY9C,EAAMQ,EAAMiD,EAAYlC,EAAUT,GAAQpD,OAAA8I,EAAA,EAAA9I,CAAAkC,KAAAkD,GACpDlD,KAAKI,KAAOA,EACZJ,KAAK2B,SAAWA,EAChB3B,KAAKY,KAAOA,EACZZ,KAAK6D,WAAaA,EAClB7D,KAAKkB,MAAQA,EACblB,KAAKvC,MAAQ,KACbuC,KAAK6G,KAAO,uCCRhBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAGaG,EAHbH,EAAAK,EAAAD,GAG4BE,EAAMC,6DCMnBC,cAPc,CAC3BC,WAAY,KACZC,aAAc,KACdC,KAAM,GACNC,QAAS,GAGiC,CAC1CC,gBAAmB,SAACC,EAADC,GAAwB,IAAdC,EAAcD,EAAdC,QAC3BF,EAAML,WAAaO,GAErBC,kBAAqB,SAACH,EAADI,GAAwB,IAAdF,EAAcE,EAAdF,QAC7BF,EAAMJ,aAAeM,GAEvBG,oBAAuB,SAACL,GACtBA,EAAMJ,aAAe,QCZVF,cAFO,GAEsB,CAC1CY,cAAiB,SAACN,EAADC,GAAwB,IAAdC,EAAcD,EAAdC,QACjBjJ,EAAmBiJ,EAAnBjJ,SAAUsJ,EAASL,EAATK,KAClBP,EAAM/I,GAAYsJ,GAGpBC,iBAAoB,SAACR,EAADI,UACXJ,EADmCI,EAAdF,YCI1BO,EARJC,YAAe,CACbC,QAAS,CACPC,OAAQC,EACRC,MAAOC,KAQEN,uCClBfvB,EAAAC,EAAAC,EAAA,sBAAA4B,IAAA9B,EAAAC,EAAAC,EAAA,sBAAA6B,IAAA/B,EAAAC,EAAAC,EAAA,sBAAA8B,IAAA,IAAAC,EAAAjC,EAAA,IAGa8B,EAAgBI,YAAa,mBAC7BH,EAAsBG,YAAa,qBACnCF,EAAoBE,YAAa,kGC6B/BC,aA7Bb,SAAAA,IAA4B,IAAhBC,EAAgB3E,UAAA3H,OAAA,QAAAK,IAAAsH,UAAA,GAAAA,UAAA,GAAV8D,IAAUvK,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAiJ,GAAA,IACVE,EAAgBD,EAAME,WAA9BZ,OACRxI,KAAKkJ,MAAQA,EACblJ,KAAKyH,KAAO0B,EAAY1B,KACxBzH,KAAK0H,QAAUyB,EAAYzB,kEAWf7I,GACZ,IAAMsJ,EAAOnI,KAAK0I,MAAM7J,GACxB,OAAOsJ,GAAQA,EAAKkB,+CAGNxK,EAAUyK,EAASD,GACjCrJ,KAAKkJ,MAAMK,SAASC,EAAgB3K,EAAUyK,EAASD,sCAG/CxK,GACRmB,KAAKkJ,MAAMK,SAASE,EAAc5K,kCAjBlC,OAAOmB,KAAKkJ,MAAME,WAAWV,wCAI7B,OAAO5K,OAAO4L,KAAK1J,KAAK0I,uDCdtBiB,aACJ,SAAAA,EAAYC,GAAO9L,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAA2J,GACjB3J,KAAK6J,MAAQD,qDAIb,MAAM,IAAIpF,MAAM,8BAIdsF,cACJ,SAAAA,EAAYC,GAAU,IAAA9J,EAAA,OAAAnC,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAA8J,IACpB7J,EAAAnC,OAAAkM,EAAA,EAAAlM,CAAAkC,KAAAlC,OAAAmM,EAAA,EAAAnM,CAAAgM,GAAAI,KAAAlK,KAAM,cACD+J,SAAWA,EAFI9J,sEAMpB,OAAOD,KAAK+J,SAASnJ,YAPF+I,GAWjBQ,cACJ,SAAAA,EAAYC,GAAY,IAAAC,EAAA,OAAAvM,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAmK,IACtBE,EAAAvM,OAAAkM,EAAA,EAAAlM,CAAAkC,KAAAlC,OAAAmM,EAAA,EAAAnM,CAAAqM,GAAAD,KAAAlK,KAAM,gBACDoK,WAAaA,EAFIC,sEAUtB,OAAOrK,KAAKvC,oCAJZ,OAAOuC,KAAKoK,WAAW3M,aAPFkM,GAenBW,cACJ,SAAAA,EAAYnK,GAAO,IAAAoK,EAAA,OAAAzM,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAsK,IACjBC,EAAAzM,OAAAkM,EAAA,EAAAlM,CAAAkC,KAAAlC,OAAAmM,EAAA,EAAAnM,CAAAwM,GAAAJ,KAAAlK,KAAM,cACDS,KAAON,EAFKoK,wEAMjB,OAAOvK,KAAKS,KAAKhD,aAPEkM,GAWjBa,cACJ,SAAAA,EAAYC,EAAQC,GAAM,IAAAC,EAAA,OAAA7M,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAwK,IACxBG,EAAA7M,OAAAkM,EAAA,EAAAlM,CAAAkC,KAAAlC,OAAAmM,EAAA,EAAAnM,CAAA0M,GAAAN,KAAAlK,KAAM,aACDyK,OAASA,EACdE,EAAKD,KAAOA,EAHYC,oEAMrBC,GACH,OAAI5K,KAAKyK,OAAOrK,OAASC,IAAEiC,KAClBsI,EACE5K,KAAKyK,OAAOrK,OAASC,IAAEkC,OACxBqI,OADH,SAVWjB,GAgBhBkB,cACJ,SAAAA,EAAYC,EAAUC,GAAU,IAAAC,EAAA,OAAAlN,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAA6K,IAC9BG,EAAAlN,OAAAkM,EAAA,EAAAlM,CAAAkC,KAAAlC,OAAAmM,EAAA,EAAAnM,CAAA+M,GAAAX,KAAAlK,KAAM,YACD8K,SAAWA,EAChBE,EAAKD,SAAWA,EAHcC,oEAM3BC,GAEH,OADWjL,KAAK8K,SAASrN,MAChBiH,WAAF,EAAA5G,OAAAoN,EAAA,EAAApN,CAAMmN,WATItB,GAafwB,cACJ,SAAAA,EAAYC,EAAUX,EAAQY,GAAW,IAAAC,EAAA,OAAAxN,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAmL,IACvCG,EAAAxN,OAAAkM,EAAA,EAAAlM,CAAAkC,KAAAlC,OAAAmM,EAAA,EAAAnM,CAAAqN,GAAAjB,KAAAlK,KAAM,cACDoL,SAAWA,EAChBE,EAAKb,OAASA,EACda,EAAKD,UAAYA,EAJsBC,oEAOpCC,EAAMC,GACT,OAAOxL,KAAKyK,OAAOrK,MACjB,KAAKC,IAAEiC,KACL,OAAOiJ,EAAOC,EAChB,KAAKnL,IAAEkC,MACL,OAAOgJ,EAAOC,EAChB,KAAKnL,IAAEoC,IACL,GAAc,IAAV+I,EACF,MAAM,IAAIhH,MAAJ,qBAAA7G,OAA+B4N,EAA/B,KAAA5N,OAAuC6N,IAE7C,OAAOD,EAAOC,EAElB,KAAKnL,IAAEmC,KACL,OAAO+I,EAAOC,EAChB,QACE,MAAM,IAAIhH,MAAJ,yBAAA7G,OAAmCqC,KAAKG,MAAMS,KAA9C,cAvBS+I,GCuIR8B,aAjNb,SAAAA,EAAY3L,GAAShC,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAyL,GACnBzL,KAAKkB,MAAQ,EACblB,KAAKF,OAASA,EACdE,KAAK5B,KAAO4B,KAAKF,OAAO,GACxBE,KAAK0L,IAAM,KACX1L,KAAK2L,aAAc,sDAInB,OAAQ3L,KAAK4L,YACX,KAAKvL,IAAES,KACLd,KAAK0L,IAAM1L,KAAKY,OAChB,MACF,KAAKP,IAAEC,OACLN,KAAK0L,IAAM1L,KAAKO,SAChB,MACF,QACEP,KAAK6L,SACL7L,KAAK0L,IAAM1L,KAAK0K,OAIpB,GAAkB,OAAd1K,KAAK5B,KACP,MAAM,IAAIoG,MAAJ,4BAAA7G,OAAsCqC,KAAKkB,MAA3C,OAAAvD,OAAsDqC,KAAK5B,KAAKwC,KAAhE,MAGR,OAAOZ,KAAK0L,mCAKZ,IAAII,EAAMC,EAAUP,EAIpB,IAFAM,EAAO9L,KAAKgM,OAEJ,CAAC3L,IAAEiC,KAAMjC,IAAEkC,OAAO0J,SAASjM,KAAK4L,aACtCG,EAAW/L,KAAK+L,WAChBP,EAAQxL,KAAKgM,OACbF,EAAO,IAAIX,EAASW,EAAMC,EAAUP,GAGtC,OAAOM,iCAKP,IAAIA,EAAMC,EAAUP,EAIpB,IAFAM,EAAO9L,KAAKkM,SAEJ,CAAC7L,IAAEmC,KAAMnC,IAAEoC,KAAKwJ,SAASjM,KAAK4L,aACpCG,EAAW/L,KAAK+L,WAChBP,EAAQxL,KAAKkM,SACbJ,EAAO,IAAIX,EAASW,EAAMC,EAAUP,GAGtC,OAAOM,mCAOP,OAAQ9L,KAAK4L,YACX,KAAKvL,IAAEiC,KACP,KAAKjC,IAAEkC,MACL,OAAOvC,KAAKmM,UACd,KAAK9L,IAAEC,OACL,OAAON,KAAKO,SACd,KAAKF,IAAEG,KACL,OAAOR,KAAKS,OACd,KAAKJ,IAAE+B,OACL,OAAOpC,KAAKoM,eACd,KAAK/L,IAAEK,SACL,OAAOV,KAAKqM,OACd,KAAKhM,IAAEgC,OACL,MAAM,IAAImC,MAAJ,4BAAA7G,OAAsCqC,KAAKkB,MAA3C,OAAAvD,OAAsDqC,KAAK5B,KAAKwC,KAAhE,MACR,QACE,MAAM,IAAI4D,MAAM,kDAKpB,IAAIsH,EAEJ,GAAI9L,KAAK4L,aAAevL,IAAES,KACxB,MAAM,IAAI0D,MAAM,kBAKlB,OAFAsH,EAAO,IAAIhC,EAAS9J,KAAK5B,MACzB4B,KAAK2D,UACEmI,mCAIP,GAAI9L,KAAK4L,aAAevL,IAAEC,OAAQ,CAChC,IAAMwL,EAAO,IAAI3B,EAAWnK,KAAK5B,MAEjC,OADA4B,KAAK2D,UACEmI,EAEP,MAAM,IAAItH,MAAM,qDAKlB,GAAI,CAACnE,IAAEiC,KAAMjC,IAAEkC,MAAOlC,IAAEmC,KAAMnC,IAAEoC,KAAKwJ,SAASjM,KAAK4L,YAAa,CAC9D,IAAME,EAAO9L,KAAK5B,KAElB,OADA4B,KAAK2D,UACEmI,EAEP,MAAM,IAAItH,MAAM,2DAKlBxE,KAAKsM,SACL,IAAMR,EAAO9L,KAAK0K,OAElB,OADA1K,KAAKuM,SACET,iCAIP,GAAI9L,KAAK4L,aAAevL,IAAEG,KACxB,MAAM,IAAIgE,MAAM,qBAGlB,IAAMsH,EAAO,IAAIxB,EAAStK,KAAK5B,MAG/B,OAFA4B,KAAK2L,aAAc,EACnB3L,KAAK2D,UACEmI,iCAIP,GAAI9L,KAAK4L,aAAevL,IAAEK,SACxB,MAAM,IAAI8D,MAAM,oBAGlB,IAAM6H,EAAOrM,KAAK5B,KAClB4B,KAAK2D,UACL3D,KAAKsM,SACL,IAAMrH,EAAOjF,KAAKiF,OAElB,OADAjF,KAAKuM,SACE,IAAI1B,EAAOwB,EAAMpH,kCAIxB,IAAMA,EAAO,GACT+G,EAAOhM,KAAKgM,OAIhB,IAFA/G,EAAKvH,KAAKsO,GAEHhM,KAAK4L,aAAevL,IAAE6B,OAC3BlC,KAAK2D,UACLqI,EAAOhM,KAAKgM,OACZ/G,EAAKvH,KAAKsO,GAGZ,OAAO/G,mCAIP,GAAIjF,KAAK4L,aAAevL,IAAE4B,OACxB,MAAM,IAAIuC,MAAM,uBAGlBxE,KAAK2D,2CAIL,GAAI3D,KAAK4L,aAAevL,IAAE+B,OACxB,MAAM,IAAIoC,MAAM,4BAGlBxE,KAAK2D,2CAIL,GAAI3D,KAAK4L,aAAevL,IAAEgC,OACxB,MAAM,IAAImC,MAAM,6BAGlBxE,KAAK2D,4CAIL,IAAK,CAACtD,IAAEiC,KAAMjC,IAAEkC,OAAO0J,SAASjM,KAAK4L,YACnC,MAAM,IAAIpH,MAAM,0BAGlB,IAAMpG,EAAO4B,KAAK5B,KAGlB,OAFA4B,KAAK2D,UACQ,IAAI6G,EAAQpM,EAAM4B,KAAKkM,4CAKhClM,KAAKkB,MAAQlB,KAAKF,OAAOlD,OAAS,GACpCoD,KAAKkB,QACLlB,KAAK5B,KAAO4B,KAAKF,OAAOE,KAAKkB,QAE7BlB,KAAK5B,KAAO,wCAKd,OAAO4B,KAAK5B,MAAQ4B,KAAK5B,KAAKgC,cCzCnBoM,aA7Jb,SAAAA,EAAY3N,GAAWf,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAwM,GACrBxM,KAAKnB,SAAWA,EAChBmB,KAAKyM,MAAQ,KACbzM,KAAK0M,MAAQ,GACb1M,KAAKqJ,OAAS,KACdrJ,KAAK4H,MAAQ,IAAIqB,wDAGTpH,GACR,IACI8K,EAAOC,EADLC,EAASC,EAAMC,UAAU/M,KAAKnB,SAAUgD,GAG9C,IACE8K,EAAQ,IAAIhK,IAAMd,GAClB+K,EAAS,IAAInB,EAAQkB,EAAMK,aAC3BH,EAAOnB,IAAMkB,EAAOK,QACpBH,EAAMI,YAAYlN,KAAKnB,UACvBmB,KAAKqJ,OAASwD,EAAOxD,OACrB,MAAOoD,GAGP,OAFAzM,KAAKyM,MAAQI,EAAOJ,MAAQA,EAC5BzM,KAAKqJ,OAASwD,EAAOxD,OAASrJ,KAAKmN,gBAC5BnN,KAAKqJ,OAId,OADArJ,KAAKyM,MAAQI,EAAOJ,MACbzM,KAAKqJ,qCAGRxK,GACJ,IAAMgO,EAASC,EAAMM,UAAUvO,GAE/B,GAAIiO,EAAMO,WAAWxO,GACnB,OAAOgO,EAAOxD,OAKhB,GAFAyD,EAAMQ,YAAYzO,IAEbgO,EAAOnB,IACV,OAAOmB,EAAOxD,OAGhB,IACErJ,KAAKqJ,OAASwD,EAAOxD,OAASrJ,KAAKuN,OAAOV,EAAOnB,KACjD,MAAOe,GAGP,MAFAzM,KAAKyM,MAAQI,EAAOJ,MAAQA,EAC5BzM,KAAKqJ,OAASwD,EAAOxD,OAASrJ,KAAKmN,gBAC7BV,EAGR,OAAOzM,KAAKqJ,sCAGPyC,GACL,OAAQA,EAAKjC,OACX,IAAK,aACH,OAAO7J,KAAKmK,WAAW2B,GACzB,IAAK,WACH,OAAO9L,KAAKsK,SAASwB,GACvB,IAAK,WACH,OAAO9L,KAAK8J,SAASgC,GACvB,IAAK,SACH,OAAO9L,KAAK6K,OAAOiB,GACrB,IAAK,WACH,OAAO9L,KAAKmL,SAASW,GACvB,IAAK,UACH,OAAO9L,KAAKwK,QAAQsB,GACtB,QACE,IAAM0B,EAAW1B,EAAKjC,QAAUiC,EAAK2B,aAAe,IAAI7D,KACxD,MAAM,IAAIpF,MAAJ,yBAAA7G,OAAmC6P,sCAItC1B,GACP,OAAOA,EAAK4B,0CAGH5B,GACT,OAAOA,EAAK4B,wCAGL5B,GACP,IACIzC,EADEsE,EAAgB7B,EAAKjN,SAG3B,IAAKmB,KAAK4N,gBAAgBD,GACxB,MAAM,IAAInJ,MAAM,0BAGlB,QAAkCvH,IAA9B+C,KAAK0M,MAAMiB,GACb,OAAO3N,KAAK0M,MAAMiB,GAGpB,GAAIb,EAAMe,UAAUF,GAClB,MAAM,IAAInJ,MAAM,sBAKlB,OAFA6E,EAASrJ,KAAK8N,aAAaH,GAC3B3N,KAAK0M,MAAMiB,GAAiBtE,EACrBA,kCAGDyC,GACN,IAAMzC,EAASrJ,KAAKuN,OAAOzB,EAAKpB,MAChC,OAAOoB,EAAK4B,KAAKrE,kCAGZyC,GACL,IAAMb,EAAgB,GADXnO,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGX,QAAAC,EAAAC,EAAsB2O,EAAKf,SAA3B3N,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAqC,KAA5BiR,EAA4B7Q,EAAAO,MAC7B4L,EAASrJ,KAAKuN,OAAOQ,GAC3B9C,EAAcvN,KAAK2L,IALV,MAAAzL,GAAAb,GAAA,EAAAC,EAAAY,EAAA,YAAAd,GAAA,MAAAK,EAAAU,QAAAV,EAAAU,SAAA,WAAAd,EAAA,MAAAC,GAQX,OAAO8O,EAAK4B,KAAKzC,oCAGVa,GACP,IAAMP,EAAOvL,KAAKuN,OAAOzB,EAAKV,UACxBI,EAAQxL,KAAKuN,OAAOzB,EAAKT,WAC/B,OAAOS,EAAK4B,KAAKnC,EAAMC,2CAGT3M,GAAU,IAAAmP,EACKpP,YAAcC,GADnBoP,EAAAnQ,OAAAoQ,EAAA,EAAApQ,CAAAkQ,EAAA,GACjBG,EADiBF,EAAA,GACPG,EADOH,EAAA,GAGxB,QAAIzP,KAAKsH,IAAIqI,EAAUC,GAAY,OAC/BD,GAAYnO,KAAK4H,MAAMF,YACvB0G,GAAYpO,KAAK4H,MAAMH,4CAIhBkG,GACX,IAAMU,EAAc,IAAI7B,EAAYmB,GAChCtE,EAAS,EAOb,OAJIyD,EAAMwB,UAAUX,KAClBtE,EAASgF,EAAYE,MAAMZ,IAGtBtE,0CAGO,IACGmF,EAAaxO,KAAKyM,MAA3BgC,QAER,OAAID,EAAS7O,MAAM,qBAxJM,UA0Jd6O,EAAS7O,MAAM,uBAzJC,QACX,mBCLd+O,EACJ,SAAAA,EAAYpF,GAAUxL,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAA0O,GACpB1O,KAAKsJ,QAAUA,EACftJ,KAAKyM,MAAQ,KACbzM,KAAKqJ,OAAS,KACdrJ,KAAK0L,IAAM,MAmIAoB,EAHD,eA3HZ,SAAA6B,IAAe7Q,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAA2O,GACb3O,KAAK4O,IAAM,GACX5O,KAAK6O,QAAU,KACf7O,KAAK8O,QAAU,KACf9O,KAAKkJ,MAAQ,IAAID,wDAGTpK,EAAUgD,GAElB,OADoB,IAAI2K,EAAY3N,GACjBkQ,UAAUlN,uCAGnBmN,GACVhP,KAAKiP,kBACLjP,KAAKkP,IAAIF,GACThP,KAAKmP,oDAGOtQ,GACZ,OAAImB,KAAKsO,UAAUzP,GACVmB,KAAKoN,UAAUvO,GAAUwK,OAEzB,6CAIO,IAAApJ,EAAAD,KAChBA,KAAK6O,QAAU,IAAIO,IAEnBtR,OAAO4L,KAAK1J,KAAK4O,KAAKrJ,QAAQ,SAAAsH,GAC5B5M,EAAK4O,QAAQQ,IAAIxC,wCAIVhO,GACT,OAAOmB,KAAK6N,UAAUhP,KAAcmB,KAAKsP,UAAUzQ,qCAG3CA,GACR,OAAOmB,KAAK8O,QAAQS,IAAI1Q,qCAGhBA,GACR,OAAOmB,KAAK6O,QAAQU,IAAI1Q,+BAGtBA,GACF,IADY,IAAAwL,EAAArK,KACLA,KAAK6O,QAAQW,KAAO,GAAG,CAE5BxP,KAAK8O,QAAU,IAAIM,IAEdvQ,IACHA,EAAWf,OAAAoN,EAAA,EAAApN,CAAIkC,KAAK6O,SAAS,IAG/B,IACgB,IAAIrC,EAAY3N,GAClB0P,MAAM1P,GAClB,MAAO4N,IAETzM,KAAK8O,QAAQvJ,QAAQ,SAAA1G,GAAQ,OAAIwL,EAAKwE,QAAQY,OAAO5Q,KACrDA,EAAW,4CAOb,IAFA,IAAM6Q,EAAe,IAAIN,IAAIpP,KAAKkJ,MAAMyG,WAExCjT,EAAA,EAAAkT,EAA+B9R,OAAO+R,QAAQ7P,KAAK4O,KAAnDlS,EAAAkT,EAAAhT,OAAAF,IAAyD,KAAAoT,EAAAF,EAAAlT,GAAAsL,EAAAlK,OAAAoQ,EAAA,EAAApQ,CAAAgS,EAAA,GAA/CjR,EAA+CmJ,EAAA,GAArC6E,EAAqC7E,EAAA,GAC/CsB,EAAoBuD,EAApBvD,QAASD,EAAWwD,EAAXxD,OAEjBqG,EAAaD,OAAO5Q,GAEhBwK,IAAWrJ,KAAKkJ,MAAM6G,cAAclR,IACtCmB,KAAKkJ,MAAMM,gBAAgB3K,EAAUyK,EAASD,GATtC,IAAAvM,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAaZ,QAAAC,EAAAC,EAAqBuS,EAArBtS,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAmC,KAA1B+B,EAA0B3B,EAAAO,MACjCuC,KAAKkJ,MAAM8G,UAAUnR,IAdX,MAAAjB,GAAAb,GAAA,EAAAC,EAAAY,EAAA,YAAAd,GAAA,MAAAK,EAAAU,QAAAV,EAAAU,SAAA,WAAAd,EAAA,MAAAC,wCAkBF6B,GACV,OAAOmB,KAAK8O,QAAQO,IAAIxQ,qCAGhBA,EAAUyK,GAClB,IAAMuD,EAAS,IAAI6B,EAAOpF,GAE1B,OADAtJ,KAAK4O,IAAI/P,GAAYgO,EACdA,oCAGChO,GACR,OAAOA,KAAYmB,KAAK4O,sCAGhB/P,GAER,OADAmB,KAAKiQ,oBAAoBpR,GAClBmB,KAAK4O,IAAI/P,qCAGRA,GACJA,KAAYmB,KAAK4O,aACZ5O,KAAK4O,IAAI/P,GAChBmB,KAAKkN,kDAKPlN,KAAK4O,IAAM,GACX5O,KAAK6O,QAAU,KACf7O,KAAK8O,QAAU,KACf9O,KAAKkJ,MAAQ,IAAID,8CAGCpK,GAClB,IAAKmB,KAAKsO,UAAUzP,GAClB,MAAM,IAAI2F,MAAM,8BCjIf,SAAS0L,EAAYrR,EAAUyK,GAGpC,MAAO,CACLlJ,KAAM,gBACN0H,QAAS,CAAEjJ,WAAUsJ,KAAM,CAAEmB,UAASD,OAJzByD,EAAMiC,UAAUlQ,EAAUyK,MAQpC,SAASE,EAAgB3K,EAAUyK,EAASD,GACjD,MAAO,CACLjJ,KAAM,gBACN0H,QAAS,CAAEjJ,WAAUsJ,KAAM,CAAEmB,UAASD,YAInC,SAASI,EAAc5K,GAC5B,OAAO,SAAC0K,EAAUH,GAChB,IAAM3L,EAAQ2L,IAAWV,MAAM7J,GAI/B,OAFAiO,EAAMqD,UAAUtR,QAEF5B,IAAVQ,EACK2S,QAAQC,UAIVD,QAAQC,QAAQ9G,EAAS,CAC9BnJ,KAAM,mBACN0H,QAASjJ,MAhCfiI,EAAAC,EAAAC,EAAA,sBAAAkJ,IAAApJ,EAAAC,EAAAC,EAAA,sBAAAsJ,IAAAxJ,EAAAC,EAAAC,EAAA,sBAAAyC,yMCiBM8G,EAAIzS,OAAA0S,EAAA,EAAA1S,CAAA,OAAA2S,OAAA,YAAA3S,CAAA,CAAA8L,KAAA,UAAA8G,OAAA,oBAIJC,EAAK7S,OAAA0S,EAAA,EAAA1S,CAAA,SAAA2S,OAAA,YAAA3S,CAAA,CAAA8L,KAAA,SAAA8G,OAAA,yKAaLE,EAAc9S,OAAA0S,EAAA,EAAA1S,CAAO6S,EAAP,CAAAF,OAAA,YAAA3S,CAAH,CAAA8L,KAAA,SAAA8G,OAAA,2DAMJG,EAAb,SAAAC,GAeE,SAAAD,IAAc,IAAA5Q,EAAA,OAAAnC,OAAAiT,EAAA,EAAAjT,CAAAkC,KAAA6Q,IACZ5Q,EAAAnC,OAAAkT,EAAA,EAAAlT,CAAAkC,KAAAlC,OAAAmT,EAAA,EAAAnT,CAAA+S,GAAA3G,KAAAlK,QAQF4H,MAAQ,CACN9H,OAAQ,GACRoR,uBAAuB,EACvBC,WAAY,GACZC,SAAU,CAAEC,IAAK,IACjBC,UAAW,GAdCrR,EAiBdsR,SAAWnK,IAAMoK,YAjBHvR,EAkBdwR,eAAiBrK,IAAMoK,YAhBrBvR,EAAKyR,gBAAkBzR,EAAKyR,gBAAgBC,KAArB7T,OAAA8T,EAAA,EAAA9T,CAAAmC,IACvBA,EAAK4R,aAAe5R,EAAK4R,aAAaF,KAAlB7T,OAAA8T,EAAA,EAAA9T,CAAAmC,IACpBA,EAAK6R,eAAiB7R,EAAK6R,eAAeH,KAApB7T,OAAA8T,EAAA,EAAA9T,CAAAmC,IACtBA,EAAK8R,yBAA2B9R,EAAK8R,yBAAyBJ,KAA9B7T,OAAA8T,EAAA,EAAA9T,CAAAmC,IAChCA,EAAK+R,cAAgB/R,EAAK+R,cAAcL,KAAnB7T,OAAA8T,EAAA,EAAA9T,CAAAmC,IANTA,EAfhB,OAAAnC,OAAAmU,EAAA,EAAAnU,CAAA+S,EAAAC,GAAAhT,OAAAoU,EAAA,EAAApU,CAAA+S,EAAA,EAAAQ,IAAA,oBAAA5T,MAAA,WAoCI,IAAM6L,EAAUtJ,KAAKmS,MAAMC,iBAAmB,GAAKpS,KAAKmS,MAAM7I,QAC9DtJ,KAAKqS,gBACLrS,KAAKgS,cAAc1I,KAtCvB,CAAA+H,IAAA,qBAAA5T,MAAA,SAyCqB6U,EAAWC,GACxBA,EAAUnB,WAAapR,KAAK4H,MAAMwJ,WACpCpR,KAAKwS,SAASxS,KAAK4H,MAAMwJ,SAASC,KAClCrR,KAAKyS,cAGHF,EAAUpB,aAAenR,KAAK4H,MAAMuJ,YACtCnR,KAAK0S,uBAhDX,CAAArB,IAAA,aAAA5T,MAAA,WAqDI,OAAQuC,KAAK4H,MAAMwJ,SAASC,KAC1B,IAAK,SACHrR,KAAKmS,MAAMrJ,oBACX,MACF,IAAK,QACE9I,KAAK4H,MAAMsJ,wBACdlR,KAAK2S,eACL3S,KAAKmS,MAAMrJ,qBAEb,MACF,IAAK,YACL,IAAK,aACH9I,KAAK4S,SAAS,CAAEtB,UAAWtR,KAAKuR,SAASsB,QAAQC,kBAjEzD,CAAAzB,IAAA,qBAAA5T,MAAA,WAqEuB,IACX0T,EAAenR,KAAK4H,MAApBuJ,WAEFrR,EADQ,IAAI6C,IAAMwO,GACHnE,YACrBhN,KAAK4S,SAAS,CAAE9S,aAzEpB,CAAAuR,IAAA,gBAAA5T,MAAA,WA6EkBuC,KAAKuR,SAASsB,QACtBE,UA9EV,CAAA1B,IAAA,WAAA5T,MAAA,WAiFa,IAILuV,EAAIC,EAHY5B,EAAUrR,KAAK4H,MAA3BwJ,SAAYC,IACZxS,EAAamB,KAAKmS,MAAlBtT,SAFCmP,EAGoBpP,YAAcC,GAHlCoP,EAAAnQ,OAAAmB,EAAA,EAAAnB,CAAAkQ,EAAA,GAGFG,EAHEF,EAAA,GAGQG,EAHRH,EAAA,GAMT,GAAY,QAARoD,EACF4B,EAAI,uCAAAtV,OAA0CkB,EAA1C,WACC,GAAY,UAARwS,EAAiB,CAC1B,GAAIrR,KAAK4H,MAAMsJ,sBAAyB,OAExC,IAAMgC,EAAe1U,KAAKsH,IAAI9F,KAAKmS,MAAM1K,KAAO,EAAG2G,EAAW,GACxD+E,EAAWnV,YAAemQ,GAC1BiF,EAAW,IAAMF,EAAe,GAChCG,EAAW,GAAA1V,OAAMwV,EAAN,KAAAxV,OAAkByV,GACnCH,EAAI,uCAAAtV,OAA0C0V,EAA1C,WAEJJ,EADiB,WAAR5B,EACL,uCAAA1T,OAA0CkB,EAA1C,MAEA,sCAAAlB,OAAyCkB,EAAzC,MAGNmU,EAAKM,SAASC,cAAcN,GACxBK,SAASE,gBAAkBR,GAAMA,EAAGD,UAxG5C,CAAA1B,IAAA,eAAA5T,MAAA,WA2GiB,IACLoB,EAAamB,KAAKmS,MAAlBtT,SACAsS,EAAenR,KAAK4H,MAApBuJ,WAER,GAAInR,KAAKiE,aAAakN,GACpBnR,KAAKmS,MAAM1I,cAAc5K,OAD3B,CAKA,IAAM4U,EAAYtC,EAAWvU,OAAS,GAAuB,MAAlBuU,EAAW,GAClDA,EAAW/P,cACX+P,EAEJnR,KAAKmS,MAAMjC,YAAYrR,EAAU4U,MAxHrC,CAAApC,IAAA,eAAA5T,MAAA,SA2HemD,GACX,OAAuB,IAAhBA,EAAKhE,QAAgB8C,QAAQkB,EAAKjB,MAAM,YA5HnD,CAAA0R,IAAA,2BAAA5T,MAAA,SA+H2ByT,GACvBlR,KAAK4S,SAAS,CAAE1B,4BAhIpB,CAAAG,IAAA,gBAAA5T,MAAA,SAmIgB0T,EAAYG,GAAW,IAAAjH,EAAArK,KACnCA,KAAK4S,SAAS,CAAEzB,aAAYG,UAAWH,EAAWvU,QAAU,WACrD0U,GAELoC,EAAa,WACXrJ,EAAKkH,SAASsB,QAAQc,eAAiBrC,EACvCjH,EAAKkH,SAASsB,QAAQC,aAAexB,QAzI7C,CAAAD,IAAA,iBAAA5T,MAAA,SA8IiBmW,GAAO,IACFnW,EAAYmW,EAAtBnD,OAAUhT,MACZ6T,EAAYsC,EAAMnD,OAAOkD,eAC/B3T,KAAK4S,SAAS,CAAEzB,WAAY1T,EAAO6T,gBAjJvC,CAAAD,IAAA,kBAAA5T,MAAA,SAoJkBmW,GAAO,IACbvC,EAA2BuC,EAA3BvC,IAAe5T,EAAYmW,EAAtBnD,OAAUhT,MACvBuC,KAAK4S,SAAS,CAAExB,SAAU,CAAEC,OAAOF,WAAY1T,MAtJnD,CAAA4T,IAAA,eAAA5T,MAAA,SAyJemW,GAAO,IAAArJ,EAAAvK,KAClBA,KAAK4S,SAAS,CAAEzB,WAAYyC,EAAMnD,OAAOhT,OAAS,WAChD8M,EAAKoI,eACLpI,EAAK4H,MAAMrJ,wBA5JjB,CAAAuI,IAAA,eAAA5T,MAAA,WAgKiB,IAGToW,EAAOC,EAHEC,EAC+C/T,KAAKmS,MAAM6B,SAA/DC,EADKF,EACLE,IAAK1I,EADAwI,EACAxI,KAAa2I,EADbH,EACMF,MAA0BM,EADhCJ,EACwBD,OACpBM,EAAkBpU,KAAKyR,eAAhCoB,QAGR,GAAIuB,EAAe,CACjB,IAAMC,EAAYD,EAAcE,YAEhCT,EAAQQ,EADWD,EAAcG,wBACFV,MAC3BrV,KAAKkH,IAAIwO,EAAWG,EAlMF,IAmMlBH,EACJJ,EAASK,OAETN,EAAQK,EACRJ,EAASK,EAIX,MAAO,CACLF,MACA1I,OACAuI,SACAD,WAtLN,CAAAxC,IAAA,SAAA5T,MAAA,WA2LI,IAAM+W,EAAUxU,KAAKuR,SAASsB,QADvB4B,EAEmBzU,KAAKmS,MAAM6B,SAA7BH,EAFDY,EAECZ,MAAOC,EAFRW,EAEQX,OAEf,OAAK9T,KAAKmS,MAAMtT,SAGdf,OAAA4W,EAAA,EAAA5W,CAAC6W,EAAA,EAAaC,SAAd,CACEnX,MAAO,CACLoX,UAAWL,GAAWA,EAAQD,wBAC9BxC,yBAA0B/R,KAAK+R,yBAC/BC,cAAehS,KAAKgS,cACpBZ,SAAUpR,KAAK4H,MAAMwJ,SACrBD,WAAYnR,KAAK4H,MAAMuJ,aAGzBrT,OAAA4W,EAAA,EAAA5W,CAACyS,EAAD,CACEuE,IAAK9U,KAAK+U,gBAEVjX,OAAA4W,EAAA,EAAA5W,CAAC8S,EAAD,CACEoE,IAAKhV,KAAKyR,eACVwD,aAAcjV,KAAK4H,MAAMuJ,WACzB2D,IAAGhX,OAAAoX,EAAA,EAAApX,CAAE,CACH+V,MAAOA,EA1OO,GA2OdC,aAGJhW,OAAA4W,EAAA,EAAA5W,CAAC6S,EAAD,CACEqE,IAAKhV,KAAKuR,SACV4D,YAAU,QACVC,gBAAepV,KAAKmS,MAAMtT,SAC1BpB,MAAOuC,KAAK4H,MAAMuJ,WAClBkE,SAAUrV,KAAK8R,eACfwD,UAAWtV,KAAK0R,gBAChB6D,OAAQvV,KAAK6R,eAEf/T,OAAA4W,EAAA,EAAA5W,CAAC0X,EAAA,EAAD,CACE1V,OAAQE,KAAK4H,MAAM9H,OACnBwR,UAAWtR,KAAK4H,MAAM0J,cAlCK,SA9LvCT,EAAA,CAAkCzJ,IAAMqO,eAwPxC,IAAMC,EAAqB,CAAExF,gBAAazG,kBAAeX,uBAE1C6M,gBAlBf,SAAyB/N,GAAO,IAAAgO,EAS1BhO,EAPFY,OAF4BqN,EAAAD,EAG1BpO,aACE3I,EAJwBgX,EAIxBhX,SAAUuT,EAJcyD,EAIdzD,iBAAkB4B,EAJJ6B,EAII7B,SAE9BvM,EAN0BmO,EAM1BnO,KACAC,EAP0BkO,EAO1BlO,QAGEjH,EAAOmH,EAAMc,MAAM7J,GAGzB,MAAO,CAAEA,WAAUuT,mBAAkB4B,WAAU1K,QAF/B7I,EAAOA,EAAK6I,QAAU,GAEkB7B,OAAMC,YAKxBgO,EAAzBC,CAA6C9E,mLCxRtDN,EAAIzS,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,YAAA3S,CAAA,cACM,SAAAqU,GAAK,OAAIA,EAAM4D,MAAMC,OAAOC,SAASC,QAD3C,sCAGc,SAAA/D,GAAK,OAAIA,EAAM4D,MAAMC,OAAOG,QAH1C,qBAIY,SAAAhE,GAAK,OAAIA,EAAM4D,MAAMC,OAAOC,SAASG,QAJjD,iCASJC,EAAGvY,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,YAAA3S,CAAA,CAAA8L,KAAA,SAAA8G,OAAA,uDAMH4F,EAAQxY,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,YAAA3S,CAAA,CAAA8L,KAAA,UAAA8G,OAAA,qCAKR6F,EAACzY,OAAAgY,EAAA,EAAAhY,CAAA,KAAA2S,OAAA,YAAA3S,CAAA,CAAA8L,KAAA,SAAA8G,OAAA,oCAKD8F,EAAE1Y,OAAAgY,EAAA,EAAAhY,CAAA,MAAA2S,OAAA,YAAA3S,CAAA,iCAEkB,SAAAqU,GAAK,OAAIA,EAAM4D,MAAMC,OAAOC,SAASG,QAFvD,qDAKFK,uLASS,IAEPC,EAFOC,EACqB3W,KAAKmS,MAA7ByE,EADGD,EACHC,SAAUtF,EADPqF,EACOrF,UADPxU,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIX,QAAAC,EAAAC,EAAkByZ,EAAlBxZ,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA4B,KAAnB+Z,EAAmB3Z,EAAAO,MAC1B,KAAI6T,GAAauF,EAAMC,WAAa,GAGlC,MAFAJ,EAAYG,GANL,MAAAjZ,GAAAb,GAAA,EAAAC,EAAAY,EAAA,YAAAd,GAAA,MAAAK,EAAAU,QAAAV,EAAAU,SAAA,WAAAd,EAAA,MAAAC,GAYX,OAAI0Z,GAAoC,OAAvBA,EAAUK,SAA4BL,EACnDA,GAAapF,EAAY,EAAIoF,EAAUK,SAAmBL,EACvD,uCAGCG,GACR,IAAMxF,EAAMwF,EAAMxV,OAAOD,cACzB,OAAOG,IAAa8P,oCAIpB,IAAMwF,EAAQ7W,KAAKgX,aACXnC,EAAc7U,KAAKiX,QAAnBpC,UACR,IAAKA,EAAa,OAAO,KAHlB,IAKHvT,EADY2S,EAAcY,EAAtBqC,OAAa3L,EAASsJ,EAATtJ,KAGrB,OAAKsL,GACLvV,EAAStB,KAAKmX,UAAUN,GAGtB/Y,OAAAsZ,EAAA,EAAAtZ,CAACyS,EAAD,CACEuE,IAAGhX,OAAAuZ,EAAA,EAAAvZ,CAAE,CAAEmW,MAAK1I,UAEZzN,OAAAsZ,EAAA,EAAAtZ,CAACuY,EAAD,CACEvB,IAAGwC,GAIFhW,EAAOsD,YAEV9G,OAAAsZ,EAAA,EAAAtZ,CAAC0Y,EAAD,MACA1Y,OAAAsZ,EAAA,EAAAtZ,CAACwY,EAAD,gBACAxY,OAAAsZ,EAAA,EAAAtZ,CAACuY,EAAD,KAAM/U,EAAOuD,SACb/G,OAAAsZ,EAAA,EAAAtZ,CAACwY,EAAD,gBACAxY,OAAAsZ,EAAA,EAAAtZ,CAACyY,EAAD,KAAIjV,EAAOwD,WAlBM,YAtCKsC,IAAMqO,eAA9BgB,EAEGc,YAActQ,IAiERwP,iCCpGTe,EAAE1Z,OAAAgY,EAAA,EAAAhY,CAAA,MAAA2S,OAAA,YAAA3S,GAqBO2Z,MAlBf,SAAA5P,GAA0C,IAAlB6P,EAAkB7P,EAAlB6P,KAAMC,EAAY9P,EAAZ8P,SAC5B,OACE7Z,OAAAsZ,EAAA,EAAAtZ,CAAC0Z,EAAD,CACEI,SAAU,GAETD,GAAYD,EAAKtB,OAASsB,EAAKtB,OAASsB,EAAKxR,OCP9C2R,EAAE/Z,OAAAgY,EAAA,EAAAhY,CAAA,MAAA2S,OAAA,YAAA3S,CAAA,CAAA8L,KAAA,UAAA8G,OAAA,uDAOFoH,6MAYJlQ,MAAQ,CACNmQ,YAAa,EACbC,cAAe,wFAGE1F,EAAWC,GAC5BvS,KAAKiY,sDAIL,GAAiC,OAA7BjY,KAAK4H,MAAMoQ,cAAf,CACA,IAAMN,EAAO1X,KAAKmS,MAAM+F,MAAMlY,KAAK4H,MAAMoQ,eACzChY,KAAKmS,MAAMgG,WAAWT,EAAKja,kDAGX,IAAA4M,EAAArK,KAChB,OAAOA,KAAKmS,MAAM+F,MACfhY,IAAI,SAACwX,EAAMU,GAAP,OACHC,EAAAC,EAAAC,cAACC,EAAD,CACEnH,IAAK+G,EACLV,KAAMA,EAAKA,KACXe,MAAK3a,OAAA4a,EAAA,EAAA5a,CAAA,GAAMuM,EAAK8H,MAAMzB,OAAOiI,IAC7BhB,SAAUD,EAAKC,8CAKd,IAAAhB,EAC8B3W,KAAKmS,MAAlC+F,EADDvB,EACCuB,MAAOjE,EADR0C,EACQ1C,IAAK1I,EADboL,EACapL,KAAMmF,EADnBiG,EACmBjG,OAE1B,OAAqB,IAAjBwH,EAAMtb,OAAuB,KAG/Byb,EAAAC,EAAAC,cAACV,EAAD,CACED,UAAW,EACXa,MAAK3a,OAAA4a,EAAA,EAAA5a,CAAA,CAAImW,MAAK1I,QAASmF,EAAOkI,IAC9BC,QAAS7Y,KAAK8Y,eAEb9Y,KAAK+Y,0BAlDgB3R,IAAMqO,eAA9BqC,EACGkB,WAAa,CAClBb,WAAYc,IAAU5M,KAAK6M,WAC3BhB,MAAOe,IAAUE,MAAMD,WACvBjF,IAAKgF,IAAU1Y,OAAO2Y,WACtB3N,KAAM0N,IAAU1Y,OAAO2Y,WACvBxI,OAAQuI,IAAUG,MAAM,CACtBR,GAAIK,IAAUI,OACdV,GAAIM,IAAUI,UAgDLvB,wBC1DTwB,EAAS,CAAA1P,KAAA,SAAA8G,OAAA,oBAIT6I,EAAQzb,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,aAAA3S,CACVwb,EADU,eAEE,SAAAnH,GAAK,OAAIA,EAAM4D,MAAMC,OAAOC,SAASC,QAFvC,KAKRsD,EAAU1b,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,aAAA3S,CACZwb,EADY,eAEA,SAAAnH,GAAK,OAAIA,EAAM4D,MAAMC,OAAOC,SAASG,QAFrC,KAKVC,EAAGvY,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,aAAA3S,CAAA,CAAA8L,KAAA,SAAA8G,OAAA,uDAMH4F,EAAQxY,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,aAAA3S,CAAA,CAAA8L,KAAA,UAAA8G,OAAA,oBAIR+I,6MAUJ7R,MAAQ,CACN8R,UAAW,GACXC,UAAW,EACXvI,SAAU,KACVwI,WAAW,sFAGO,IAAAvP,EAAArK,KAClBA,KAAK4S,SAAS,CAAE+G,UAAW,GAAK,WAC9BtP,EAAKwP,+DAIaC,EAAWC,GAC/B,OAAO/Z,KAAK4H,MAAM8R,YAAcK,EAAUL,qDAGzBpH,EAAWC,GAC5BvS,KAAKga,kBAAkBzH,GACvBvS,KAAKia,gBAAgB3H,GACrBtS,KAAKyS,4DAILzS,KAAKiX,QAAQlF,0BAAyB,2CAGxBO,GAAW,IAAA/H,EAAAvK,KACrBsS,EAAUnS,QAAUH,KAAKmS,MAAMhS,OAEnCH,KAAK4S,SAAS,CAAE+G,UAAW,GAAK,WAC9BpP,EAAKsP,2DAIStH,GAAW,IACnBnB,EAAapR,KAAKiX,QAAlB7F,SAEJmB,EAAUnB,WAAaA,IACzBpR,KAAK4S,SAAS,CAAExB,aAChBpR,KAAKka,aAAa9I,yCAIT,IACHA,EAAapR,KAAKiX,QAAlB7F,SACJpR,KAAK4H,MAAMwJ,WAAaA,GACP,UAAjBA,EAASC,KAAmBrR,KAAK4H,MAAMgS,WACzC5Z,KAAKma,8DAKP,IAAMC,EAAiBpa,KAAKiX,QAAQ9F,WAC5BhR,EAAUH,KAAKmS,MAAfhS,MACAkB,EAAWrB,KAAK4H,MAAM8R,UAAU1Z,KAAK4H,MAAM+R,WAA3CtY,OACFgZ,EAAkBla,EAAMe,MAAQf,EAAMS,KAAKhE,OAC3C0d,EAAYF,EAAejZ,MAAM,EAAGhB,EAAMe,OAC1CqZ,EAAaH,EAAejZ,MAAMkZ,GAClCG,EAAa,GAAA7c,OAAM2c,GAAN3c,OAAkB0D,EAAlB,KAAA1D,OAA4B4c,GACzCjJ,EAAYgJ,EAAU1d,OAASyE,EAAOzE,OAAS,EACrDoD,KAAKiX,QAAQjF,cAAcwI,EAAelJ,0CAG7B,IAITqI,EAJShP,EAAA3K,KAEPY,EADYZ,KAAKmS,MAAfhS,MACWS,KAAKQ,cACpBwY,GAAY,EAEVF,EAAY5b,OACf4L,KAAKnI,KACLkZ,OAAO,SAAApZ,GAAM,OAAIA,EAAOqZ,WAAW9Z,KACnC+Z,OACAza,IAAI,SAAAmB,GAAM,MAAK,CACdqW,KAAM,CACJxR,KAAMyE,EAAKiQ,SAASvZ,GACpB+U,OAAQzL,EAAKkQ,WAAWxZ,IAE1BsW,UAAU,EACVtW,YAGJsY,EAAYnb,KAAKkH,IAAIlH,KAAKsH,IAAI4T,EAAU9c,OAAS,EAAGoD,KAAK4H,MAAM+R,WAAY,GAEvED,EAAU9c,OAAS,IACrB8c,EAAUC,GAAWhC,SAAWiC,GAAY,GAG9C5Z,KAAKiX,QAAQlF,yBAAyB6H,GACtC5Z,KAAK4S,SAAS,CAAE8G,YAAWC,YAAWC,mDAG3BxI,GAAU,IAAApG,EAAAhL,KACjB2Z,EAAY3Z,KAAK4H,MAAM+R,UAE3B,OAAQvI,EAASC,KACf,IAAK,UACDsI,EAAY3Z,KAAK4H,MAAM+R,UAAY,EACrC,MACF,IAAK,YACDA,EAAY3Z,KAAK4H,MAAM+R,UAAY,EAIzC3Z,KAAK4S,SAAS,CAAE+G,aAAa,WAC3B3O,EAAK6O,kDAIAxY,GACP,OACEvD,OAAAsZ,EAAA,EAAAtZ,CAACyb,EAAD,KACEzb,OAAAsZ,EAAA,EAAAtZ,CAACgd,EAAD,KACGzZ,uCAMEA,GACT,OACEvD,OAAAsZ,EAAA,EAAAtZ,CAAC0b,EAAD,KACE1b,OAAAsZ,EAAA,EAAAtZ,CAACgd,EAAD,KACGzZ,GAEHvD,OAAAsZ,EAAA,EAAAtZ,CAACid,EAAD,KACGxZ,IAAaF,GAAQyD,kDAMd,IACNiR,EAAU/V,KAAKmS,MAAf4D,MAER,MAAO,CACL6C,GAAI,CACFoC,UAAW,EACXC,UAAS,WAAAtd,OAAaoY,EAAMC,OAAOG,QACnC+E,OAAM,aAAAvd,OAAeoY,EAAMC,OAAOC,SAASG,QAC3CvC,MAAO,uCAKJ,IAAAsH,EAC0Bnb,KAAK4H,MAA9B8R,EADDyB,EACCzB,UAAWE,EADZuB,EACYvB,UACX/E,EAAc7U,KAAKiX,QAAnBpC,UAER,OAAI+E,EAEA9b,OAAAsZ,EAAA,EAAAtZ,CAACsd,EAAD,CACEC,WAAY,aACZnD,MAAOwB,EACPzF,IAAKzV,KAAK8c,MAAMzG,EAAUqC,QAC1B3L,KAAM/M,KAAK8c,MAAMzG,EAAUtJ,MAC3BmF,OAAQ1Q,KAAKub,kBAIV,YA1KcnU,IAAMoU,WAA3B/B,EAEGlC,YAActQ,IA6KRwU,kBAAUhC,GC5MnBiC,6MAWJ9T,MAAQ,CACNgP,SAAU,uFAIV5W,KAAK2b,yDAGYrJ,GACbA,EAAUxS,SAAWE,KAAKmS,MAAMrS,QAClCE,KAAK2b,oDAKP,IAAMC,EAAQ,GACRhF,EAAW,GAFL9Z,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIZ,QAAAC,EAAAC,EAAkB6C,KAAKmS,MAAMrS,OAA7B1C,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAqC,KAA5BqD,EAA4BjD,EAAAO,MACnC,GAAI0C,EAAMC,OAASC,IAAEK,SAAU,CAC7B,IAAMmW,EAAQ,CAAExV,OAAQlB,EAAMS,KAAMkW,WAAY3W,EAAMe,MAAO6V,SAAU,MACvE6E,EAAMle,KAAKmZ,GACXD,EAASlZ,KAAKmZ,QACT,GAAI1W,EAAMC,OAASC,IAAE+B,OAC1BwZ,EAAMle,KAAK,UACN,GAAIyC,EAAMC,OAASC,IAAEgC,OAAQ,CAElC,GADAuZ,EAAMC,MACFD,EAAMhf,OAAS,GAAiC,MAA5Bgf,EAAMA,EAAMhf,OAAS,GAC7Bgf,EAAMC,MACd9E,SAAW5W,EAAMe,MAAQ,IAfzB,MAAAtD,GAAAb,GAAA,EAAAC,EAAAY,EAAA,YAAAd,GAAA,MAAAK,EAAAU,QAAAV,EAAAU,SAAA,WAAAd,EAAA,MAAAC,GAoBZ4Z,EAAS+D,KAAK,SAACrC,EAAGwD,GAAJ,OAAUxD,EAAExB,WAAagF,EAAEhF,aACzC9W,KAAK4S,SAAS,CAAEgE,uDAGA9W,EAAQwR,GACxB,IAAIpQ,EAEJ,IAAKA,EAAQ,EAAGA,EAAQpB,EAAOlD,OAAQsE,IAAS,CAC9C,IAAMf,EAAQL,EAAOoB,GACf6V,EAAW5W,EAAMe,MAAQf,EAAMS,KAAKhE,OAE1C,GAAI0U,EAAYnR,EAAMe,OAASoQ,GAAayF,EAC1C,MAIJ,OAAO7V,6CAGU,IAAAyV,EACa3W,KAAKmS,MAA3BrS,EADS6W,EACT7W,OAAQwR,EADCqF,EACDrF,UACVpQ,EAAQlB,KAAK+b,kBAAkBjc,EAAQwR,GAI7C,MAAO,CAHapQ,EAAQ,GAAKpB,EAAOoB,EAAQ,GAC9BpB,EAAOoB,GACNA,EAAQpB,EAAOlD,OAAS,GAAKkD,EAAOoB,EAAQ,8CAI/C,IAAA8a,EAC+Bhc,KAAKic,mBADpCC,EAAApe,OAAAoQ,EAAA,EAAApQ,CAAAke,EAAA,GACRG,EADQD,EAAA,GACKE,EADLF,EAAA,GACgBG,EADhBH,EAAA,GAGhB,GAAIlc,KAAKmS,MAAMrS,OAAOlD,OAAS,EAAK,OAAO,KAE3C,IAAM0f,EACJH,GACGC,GACAC,GACyB,aAAzBF,EAAYxa,UACZ,CAACtB,IAAES,KAAMT,IAAEK,UAAUuL,SAASmQ,EAAUhc,OACxCic,EAAWjc,OAASC,IAAEgC,OAGrBka,EACJJ,GACGC,IACCC,GACD,CAAChc,IAAES,KAAMT,IAAEK,UAAUuL,SAASmQ,EAAUhc,MAG7C,OAAIkc,GAAWC,EAEXlE,EAAAC,EAAAC,cAACiE,EAAD,CACIrc,MAAOic,SAHf,mCAUA,IAAMK,EAAuBzc,KAAK0c,kBAElC,OAAID,GAIApE,EAAAC,EAAAC,cAACoE,EAAD,CACErL,UAAWtR,KAAKmS,MAAMb,UACtBsF,SAAU5W,KAAK4H,MAAMgP,kBAhHLxP,IAAMqO,eAA1BiG,EAOGkB,aAAe,CACpBtL,UAAW,GA+GAoK,sKC3GTmB,EAAS,CACbC,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,MAGAC,EAAY,CAChBJ,GAAI,KACJC,GAAI,KACJC,GAAI,MAGAG,EAAU,CACdL,GAAE,sBAAAnf,OAAwBkf,EAAOE,GAAK,EAApC,OACFA,GAAE,sBAAApf,OAAwBkf,EAAOE,GAA/B,wBAAApf,OAAwDkf,EAAOG,GAAK,EAApE,OACFA,GAAE,sBAAArf,OAAwBkf,EAAOG,GAA/B,wBAAArf,OAAwDkf,EAAOI,GAAK,EAApE,OACFA,GAAE,sBAAAtf,OAAwBkf,EAAOI,GAA/B,OACFG,KAAM,SAACC,GAAD,4BAAA1f,OAAuCkf,EAAOQ,GAA9C,QACNC,KAAM,SAACD,GAAD,4BAAA1f,OAAuCkf,EAAQK,EAAUG,IAAgB,EAAzE,SASOtH,EAND,CACZC,OA3Ca,CACbpV,KAAM,UACNH,KAAM,CACJya,OAAQ,UACRqC,WAAY,OACZC,SAAU,WAEZvH,SAAU,CACRC,OAAQ,UACRE,OAAQ,WAEVqH,QAAS,CACPC,OAAQ,WAEVC,MAAO,CACLC,WAAY,WAEdzH,OAAQ,WA2BR0G,SACAM,WChBaU,EAvBM/I,YAAH,cAELiB,EAAMC,OAAOpV,KAFR,wMCFZ2P,EAAIzS,OAAAgY,EAAA,EAAAhY,CAAA,UAAA2S,OAAA,aAAA3S,CAAA,CAAA8L,KAAA,UAAA8G,OAAA,0FAgBKoN,MARf,WACE,OACEzF,EAAAC,EAAAC,cAAChI,EAAD,KACE8H,EAAAC,EAAAC,cAAA,qFCVAwF,EAAWjgB,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,YAAA3S,CAAA,iFAIW,SAAAqU,GAAK,OAAIA,EAAM4D,MAAMC,OAAOvV,KAAK8c,YAJ5C,4BAKY,SAAApL,GAAK,OAAIA,EAAM4D,MAAMC,OAAOvV,KAAK8c,YAL7C,eAMD,SAAApL,GAAK,OAAIA,EAAM4D,MAAMC,OAAOvV,KAAK+c,UANhC,oBAyBFQ,MAff,SAAAnW,GAA6B,IAAT3J,EAAS2J,EAAT3J,MAClB,OACEma,EAAAC,EAAAC,cAACwF,EAAD,CACEE,WAAU/f,EACVggB,UAAU,oCAEThgB,ICdDigB,EAAGrgB,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,YAAA3S,CAAA,CAAA8L,KAAA,UAAA8G,OAAA,oCAKHqN,EAAWjgB,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,YAAA3S,CAAA,iFAIW,SAAAqU,GAAK,OAAIA,EAAM4D,MAAMC,OAAOvV,KAAK8c,YAJ5C,4BAKY,SAAApL,GAAK,OAAIA,EAAM4D,MAAMC,OAAOvV,KAAK8c,YAL7C,eAMD,SAAApL,GAAK,OAAIA,EAAM4D,MAAMC,OAAOvV,KAAK+c,UANhC,KAuCFY,MA9Bf,SAAAvW,GAAoC,IAAbwW,EAAaxW,EAAbwW,UAgBrB,OACEhG,EAAAC,EAAAC,cAAC4F,EAAD,CACEG,WAAS,UAhBXjG,EAAAC,EAAAC,cAACgG,EAAD,CACEL,UAAU,qCAKZ,IAAIhZ,MAAMmZ,EAAUzhB,QAAQ4hB,KAAK,GAAGte,IAAI,SAACue,EAAGrG,GAAJ,OACtCC,EAAAC,EAAAC,cAACmG,EAAD,CACErN,IAAK+G,EACLla,MAAOmgB,EAAUjG,SC3BnBuG,EAAO7gB,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,aAAA3S,CAAA,gGAKe,SAAAqU,GAAK,OAAIA,EAAM4D,MAAMC,OAAOvV,KAAK8c,YALhD,4BAMgB,SAAApL,GAAK,OAAIA,EAAM4D,MAAMC,OAAOvV,KAAK8c,YANjD,eAOG,SAAApL,GAAK,OAAIA,EAAM4D,MAAMC,OAAOvV,KAAK+c,UAPpC,KAyBEoB,MAff,SAAA/W,GAA6B,IAAT3J,EAAS2J,EAAT3J,MAClB,OACEma,EAAAC,EAAAC,cAACoG,EAAD,CACEL,WAAUpgB,EACVggB,UAAU,oCAEThgB,oBCVDygB,EAAO7gB,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,YAAA3S,CAAA,qDAGe,SAAAqU,GAAK,OAAIA,EAAM4D,MAAMC,OAAOvV,KAAKya,QAHhD,4BAIgB,SAAA/I,GAAK,OAAIA,EAAM4D,MAAMC,OAAOvV,KAAKya,QAJjD,KAOP2D,EAAI/gB,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,YAAA3S,CAAA,CAAA8L,KAAA,SAAA8G,OAAA,kLAeGoO,EAAb,SAAAhO,GAiBE,SAAAgO,IAAc,IAAA7e,EAAA,OAAAnC,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAA8e,IACZ7e,EAAAnC,OAAAkM,EAAA,EAAAlM,CAAAkC,KAAAlC,OAAAmM,EAAA,EAAAnM,CAAAghB,GAAA5U,KAAAlK,QAOF+e,QAAU3X,IAAMoK,YANdvR,EAAK+e,oBAAsB/e,EAAK+e,oBAAoBrN,KAAzB7T,OAAAmhB,EAAA,EAAAnhB,CAAAmC,IAC3BA,EAAKif,wBAA0Bjf,EAAKif,wBAAwBvN,KAA7B7T,OAAAmhB,EAAA,EAAAnhB,CAAAmC,IAC/BA,EAAKkf,kBAAoBlf,EAAKkf,kBAAkBxN,KAAvB7T,OAAAmhB,EAAA,EAAAnhB,CAAAmC,IACzBA,EAAKmf,qBAAuBnf,EAAKmf,qBAAqBzN,KAA1B7T,OAAAmhB,EAAA,EAAAnhB,CAAAmC,IALhBA,EAjBhB,OAAAnC,OAAAuhB,EAAA,EAAAvhB,CAAAghB,EAAAhO,GAAAhT,OAAAwhB,EAAA,EAAAxhB,CAAAghB,EAAA,EAAAzN,IAAA,sBAAA5T,MAAA,SAmCsB2U,GAAkB,IAC5BvT,EAAamB,KAAKmS,MAAlBtT,SACF0gB,EAAcvf,KAAK+e,QAAQlM,QAAQ0B,wBACnCP,EAAWwL,KAAKvS,MAAMuS,KAAKC,UAAUF,IAE3Cvf,KAAKmS,MAAMtJ,oBAAoB,CAC7BhK,WACAuT,mBACA4B,eA3CN,CAAA3C,IAAA,sBAAA5T,MAAA,SAAAoK,GA+C+B,IAAPwJ,EAAOxJ,EAAPwJ,KACpBrR,KAAKmS,MAAMvJ,cAAc5I,KAAKmS,MAAMtT,UAEhC,CAAC,SAAU,aAAaoN,SAASoF,KAClB,GAAKrR,KAAKmS,MAAM9I,QAEpBzM,OAAS,GACpBoD,KAAKmS,MAAM1I,cAAczJ,KAAKmS,MAAMtT,UAId,IAAfwS,EAAIzU,QACboD,KAAK6I,qBAAoB,KA3D/B,CAAAwI,IAAA,0BAAA5T,MAAA,WAgEIuC,KAAK6I,qBAAoB,KAhE7B,CAAAwI,IAAA,WAAA5T,MAAA,WAoEI,IAAIgb,EAAQ,GAUZ,MARiC,kBAAtBzY,KAAKmS,MAAM9I,SACpBoP,EAAQ,CACNiH,WAAY,SACZC,aAAc,OACdC,SAAU,WAIPnH,IA9EX,CAAApH,IAAA,uBAAA5T,MAAA,WAkFIuC,KAAK+e,QAAQlM,QAAQE,UAlFzB,CAAA1B,IAAA,oBAAA5T,MAAA,SAqFoBmW,GAChBA,EAAMiM,oBAtFV,CAAAxO,IAAA,SAAA5T,MAAA,WA0FI,OACEK,OAAAsZ,EAAA,EAAAtZ,CAACgiB,EAAD,CACE5B,UAAU,mCACVrF,QAAS7Y,KAAKof,sBAEdthB,OAAAsZ,EAAA,EAAAtZ,CAAC+gB,EAAD,CACE7J,IAAKhV,KAAK+e,QACV5J,YAAU,SACVC,gBAAepV,KAAKmS,MAAMtT,SAC1BiW,IAAK9U,KAAK+f,WACVnI,SAAS,IACTiB,QAAS7Y,KAAKmf,kBACd7J,UAAWtV,KAAKgf,oBAChBgB,cAAehgB,KAAKkf,yBAEnBlf,KAAKmS,MAAM9I,aAzGtByV,EAAA,CAAgC1X,IAAMqO,eAsHtC,IAAMC,EAAqB,CAAEjM,kBAAeZ,wBAAqBD,mBAElD+M,cARf,SAAyB/N,EAAOqY,GAC9B,IAAMxf,EAAOmH,EAAMc,MAAMuX,EAASphB,UAElC,MAAO,CAAEwK,OADM5I,EAAOA,EAAK4I,OAAS,KAMEqM,EAAzBC,CAA6CmJ,GChJtDX,EAAGrgB,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,YAAA3S,CAAA,CAAA8L,KAAA,UAAA8G,OAAA,oCA6CMwP,MAvCf,SAAArY,GAA2C,IAAxBsY,EAAwBtY,EAAxBsY,UAAW9B,EAAaxW,EAAbwW,UAqB5B,OACEhG,EAAAC,EAAAC,cAAC6H,EAAD,CACE9B,WAAU6B,GAEV9H,EAAAC,EAAAC,cAAC8H,EAAD,CACEniB,MAAOiiB,IAxBX,IAAIjb,MAAMmZ,EAAUzhB,QAAQ4hB,KAAK,GAAGte,IAAI,SAACue,EAAGrG,GAC1C,IAAMvZ,EAAQ,GAAAlB,OAAM0gB,EAAUjG,GAAhB,KAAAza,OAAsBwiB,GASpC,OACE9H,EAAAC,EAAAC,cAAC+H,EAAD,CACEjP,IAAK+G,EACLvZ,SAAUA,gCCapB,IAAM+I,EAAQ,CACZ2Y,GAAI,cACJC,QAAS,OACTvJ,QAAS,CACPvP,QAAS,KACTD,KAAM,KACN4J,IAAK,KACLlD,SAAU,KACVC,SAAU,KACViF,YAAa,KACboN,YAAY,GAEdC,OAAQ,CACNC,KAAM,CACJC,GAAI,CACFC,WAAc,CACZC,QAAS,CAAC,gBAAiB,sBAC3BrQ,OAAQ,iBAIdsQ,YAAa,CACXC,OAAQ,CACNC,IApCR,SAAyBC,GACvB,OAAKA,EAAI7N,YAEF,IAAIjD,QAAQ,SAAAC,GACjB8Q,WAAW,WACT,IAAMZ,EAAE,mBAAA5iB,OAAsBujB,EAAI7N,YAA1B,MACF5S,EAAO6S,SAASC,cAAcgN,GAChC9f,GAAQA,EAAKsS,QACjB1C,GAAQ,IACP,KAR0BD,QAAQC,SAAQ,IAoCzC+Q,OAAQ,CACNN,QAASO,YAAO,CAAEZ,WAAY,SAACS,EAAKtN,GAAN,OAAgBA,EAAMzL,QACpDsI,OAAQ,YAOZqQ,EAAU,CACdA,QAAS,CACPQ,cAAeD,YAAO,SAACH,EAADlZ,GAA4B,IAApBqJ,EAAoBrJ,EAApBqJ,IAAKxS,EAAemJ,EAAfnJ,SAAemP,EACnBpP,YAAcC,GADKoP,EAAAnQ,OAAAoQ,EAAA,EAAApQ,CAAAkQ,EAAA,GAEhD,MAAO,CAAEG,SAFuCF,EAAA,GAE7BG,SAF6BH,EAAA,GAEnBoD,SAE/BkQ,mBAAoBF,YAAO,CACzBhO,YAAa,SAAC6N,GACZ,OA/ER,SAAArZ,GAAuE,IAA1CJ,EAA0CI,EAA1CJ,KAAMC,EAAoCG,EAApCH,QAAS0G,EAA2BvG,EAA3BuG,SAAUD,EAAiBtG,EAAjBsG,SACpD,OADqEtG,EAAPwJ,KAE5D,IAAK,UACHjD,EAAW5P,KAAKkH,IAAI,EAAG0I,EAAW,GAClC,MACF,IAAK,aACHD,EAAW3P,KAAKsH,IAAI4B,EAAU,EAAGyG,EAAW,GAC5C,MACF,IAAK,YACL,IAAK,QACHC,EAAW5P,KAAKsH,IAAI2B,EAAO,EAAG2G,EAAW,GACzC,MACF,IAAK,YACHD,EAAW3P,KAAKkH,IAAI,EAAGyI,EAAW,GAClC,MACF,QACE,OAAO,KAGX,IAAMgF,EAAWnV,YAAemQ,GAC1BiF,EAAW,IAAMhF,EAAW,GAElC,SAAAzQ,OAAUwV,EAAV,KAAAxV,OAAsByV,GAyDToO,CAAkBN,QAuBlBO,MAjBf,SAA+Bha,EAAMC,GACnC,IAAMga,EAAU5jB,OAAA4a,EAAA,EAAA5a,CAAA,GACX8J,EAAMqP,QADK,CAEdvP,UACAD,SAGF,OAAOka,YAAQ/Z,EAAOkZ,EAASY,ICrF3BE,EAAI9jB,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,aAAA3S,CAAA,6EAIgB,SAAAqU,GAAK,OAAIA,EAAM4D,MAAMC,OAAOvV,KAAK8c,YAJjD,0BAKiB,SAAApL,GAAK,OAAIA,EAAM4D,MAAMC,OAAOvV,KAAK8c,YALlD,2BAMkB,SAAApL,GAAK,OAAIA,EAAM4D,MAAMC,OAAOvV,KAAK8c,YANnD,4BAOmB,SAAApL,GAAK,OAAIA,EAAM4D,MAAMC,OAAOvV,KAAK8c,YAPpD,+JA8BGsE,EAAb,SAAA/Q,GAOE,SAAA+Q,EAAY1P,GAAO,IAAAlS,EAAA,OAAAnC,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAA6hB,IACjB5hB,EAAAnC,OAAAkM,EAAA,EAAAlM,CAAAkC,KAAAlC,OAAAmM,EAAA,EAAAnM,CAAA+jB,GAAA3X,KAAAlK,KAAMmS,KAMR2P,mBAAqBL,EAAsBxhB,EAAKkS,MAAM1K,KAAMxH,EAAKkS,MAAMzK,SAPpDzH,EAQnB8hB,aAAehT,YAAU9O,EAAK6hB,oBAN5B7hB,EAAK+hB,mBAAqB/hB,EAAK+hB,mBAAmBrQ,KAAxB7T,OAAAmhB,EAAA,EAAAnhB,CAAAmC,IAC1BA,EAAKgiB,qBAAuBhiB,EAAKgiB,qBAAqBtQ,KAA1B7T,OAAAmhB,EAAA,EAAAnhB,CAAAmC,IAC5BA,EAAKoe,UAAYliB,YAAegW,EAAMzK,SAJrBzH,EAPrB,OAAAnC,OAAAuhB,EAAA,EAAAvhB,CAAA+jB,EAAA/Q,GAAAhT,OAAAwhB,EAAA,EAAAxhB,CAAA+jB,EAAA,EAAAxQ,IAAA,oBAAA5T,MAAA,WAkBIuC,KAAK+hB,aAAaG,UAlBtB,CAAA7Q,IAAA,uBAAA5T,MAAA,WAsBIuC,KAAK+hB,aAAaI,SAtBtB,CAAA9Q,IAAA,qBAAA5T,MAAA,SAyBqBmW,GACjBA,EAAMiM,oBA1BV,CAAAxO,IAAA,uBAAA5T,MAAA,SA6BuBmW,GACnBA,EAAMiM,kBACN7f,KAAKoiB,UAAUxO,EAAMvC,IAAKuC,EAAMnD,OAAO4R,QAAQxjB,YA/BnD,CAAAwS,IAAA,YAAA5T,MAAA,SAkCY4T,EAAKxS,GACbmB,KAAK+hB,aAAaO,KAAK,CAAEliB,KAAM,aAAciR,MAAKxS,eAnCtD,CAAAwS,IAAA,oBAAA5T,MAAA,SAsCoB2a,GAChB,OACEC,EAAAC,EAAAC,cAACgK,EAAD,CACElR,IAAK+G,EACL3Q,KAAMzH,KAAKmS,MAAM1K,KACjB4W,UAAWre,KAAKqe,cA3CxB,CAAAhN,IAAA,iBAAA5T,MAAA,SAgDiB0iB,GACb,OACE9H,EAAAC,EAAAC,cAACiK,EAAD,CACAnR,IAAK8O,EACHA,UAAWA,EACX9B,UAAWre,KAAKqe,UAChB9W,WAAYvH,KAAKmS,MAAM5K,eAtD/B,CAAA8J,IAAA,aAAA5T,MAAA,WA2De,IAAA4M,EAAArK,KACX,OAAO,IAAIkF,MAAMlF,KAAKmS,MAAM1K,KAAO,GAAG+W,KAAK,GAAGte,IAAI,SAACue,EAAGrG,GACpD,OAAU,IAANA,EACK/N,EAAKoY,kBAAkBrK,GAEvB/N,EAAKqY,eAAetK,OAhEnC,CAAA/G,IAAA,SAAA5T,MAAA,WAsEI,OACE4a,EAAAC,EAAAC,cAACqJ,EAAD,CACEe,aAAW,MACX9J,QAAS7Y,KAAKgiB,mBACd1M,UAAWtV,KAAKiiB,sBAEfjiB,KAAK4iB,kBA5Edf,EAAA,CAA2Bza,IAAMqO,eAuFlBE,cALS,SAAC/N,GAAU,IAAAgO,EACKhO,EAAMY,OAC5C,MAAO,CAAEjB,WAFwBqO,EACzBrO,WACaE,KAFYmO,EACbnO,KACOC,QAFMkO,EACPlO,UAIbiO,CAAyBkM,WCvHlCgB,EAAS/kB,OAAAgY,EAAA,EAAAhY,CAAA,OAAA2S,OAAA,YAAA3S,CAAA,CAAA8L,KAAA,SAAA8G,OAAA,2FAOToS,GAAIhlB,OAAAgY,EAAA,EAAAhY,CAAA,QAAA2S,OAAA,YAAA3S,CAAA,CAAA8L,KAAA,SAAA8G,OAAA,oBAsBV,IAEeiF,eAFS,SAAC/N,GAAD,MAAY,CAAEJ,aAAcI,EAAMY,OAAOhB,eAElDmO,CApBf,SAAA9N,GAA+B,IAAhBL,EAAgBK,EAAhBL,aACb,OACE6Q,EAAAC,EAAAC,cAACsK,EAAD,KACExK,EAAAC,EAAAC,cAACuK,GAAD,KACGtb,GAAiB6Q,EAAAC,EAAAC,cAAC1H,EAAA,EAAD,MAClBwH,EAAAC,EAAAC,cAAA,OAAKwK,yBAAA,EAAsBnL,SAAS,MACpCS,EAAAC,EAAAC,cAACyK,EAAD,MACA3K,EAAAC,EAAAC,cAAC0K,EAAD,UCFO1S,OAbf,WACE,OACE8H,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAUha,MAAOb,KACfgQ,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,KACE9K,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAerN,MAAOA,GACpBsC,EAAAC,EAAAC,cAACnB,EAAA,EAAD,CAAQ1G,OAAQmN,IAChBxF,EAAAC,EAAAC,cAAC8K,GAAD,UCPU3jB,QACW,cAA7B4jB,OAAOzkB,SAAS0kB,UAEe,UAA7BD,OAAOzkB,SAAS0kB,UAEhBD,OAAOzkB,SAAS0kB,SAAS5jB,MACvB,2DCbN6jB,IAASC,OAAOpL,EAAAC,EAAAC,cAACmL,GAAD,MAAUpQ,SAASqQ,eAAe,SD4H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.38ab4add.chunk.js","sourcesContent":["const BASE_CODE_POINT = 'A'.codePointAt(0)\n\nexport function buildUrl(baseUrl, query={}) {\n  const urlQuery = Object.entries(query).map(([key, val]) => `${key}=${val}`).join('&')\n  return [baseUrl.trim(), urlQuery].join('?')\n}\n\nexport function clamp(value, min, max) {\n  return Math.min( Math.max(value, min), max )\n}\n\nexport function getRangeArray(min, max, isString=false) {\n  const range = []\n\n  for (let num = min; num <= max; num++) {\n    range.push( isString ? num.toString() : num )\n  }\n\n  return range\n}\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms))\n\nexport function getColumnNames(cols) {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let names = []\n  let prevNames = ['']\n  let remainCols = cols\n\n  while (remainCols > 0) {\n    const newNames = []\n\n    outerLoop:\n    for (let colName of prevNames) {  \n      for (let letter of alphabet) {\n        if (remainCols === 0)  { break outerLoop }\n        newNames.push(`${colName}${letter}`)\n        remainCols -= 1\n      }\n    }\n\n    prevNames = newNames\n    names = [...names, ...newNames]\n  }\n\n  return names\n}\n\nexport function getCellNames(rows, cols) {\n  const names = []\n  let colNames = getColumnNames(cols)\n\n  for (let row=1; row <= rows; row++) {\n    for (let col of colNames) {\n      names.push(`${col}-${row}`)\n    }\n  }\n\n  return names\n}\n\nexport function getColumnPosition(colLabel) {\n  const letters = colLabel.split('')\n  const oneBase = letters.reduce((prev, letter) => (\n    prev * 26 + letter.charCodeAt(0) - BASE_CODE_POINT + 1\n  ), 0)\n\n  return oneBase - 1\n}\n\nexport function getColumnLabel(num) {\n  const label = []\n  const basePoint = BASE_CODE_POINT\n  let curr = num + 1\n\n  do {\n    curr -= 1\n    const letterPosition = curr % 26\n    const codePoint = basePoint + letterPosition\n    const letter = String.fromCodePoint(codePoint)\n    label.push(letter)\n\n    curr = Math.floor(curr / 26)\n  } while (curr > 0)\n\n  return label.reverse().join('')\n}\n\nexport function parseLocation(location) {\n  let [col, row] = location.split('-')\n  const colIndex = getColumnPosition(col)\n  const rowIndex = +row - 1\n\n  return [colIndex, rowIndex]\n}\n\nexport function isNumber(numStr) {\n  const isPeriodsAndDigits = Boolean(numStr.match(/^[.\\d]+$/))\n  const periodCount = (numStr.match(/\\./g) || []).length\n\n  if (!isPeriodsAndDigits) { return false }\n  if (periodCount > 1) { return false }\n  if (numStr.length === 1 && numStr[0] === '.') { return false }\n  return true\n}\n\n","import { TOKENS as t } from './Lexer'\nimport formulaFuncs from './formulaFunctions'\nimport { isNumber } from '~/library/utils'\n\n\nclass TokenSanitizer {\n  constructor(tokens) {\n    this.tokens = tokens\n  }\n\n  sanitize() {\n    return this.tokens.map(token => {\n      switch(token.type) {\n        case t.NUMBER:\n          return this.number(token)\n        case t.CELL:\n          return this.cell(token)\n        case t.FUNCTION:\n          return this.function(token)\n        default:\n          return token\n      }\n    })\n  }\n\n  number(token) {\n    if (!isNumber(token.text)) {\n      token.type = t.TEXT\n      return token\n    }\n\n    token.value = parseFloat(token.text)\n    return token\n  }\n\n  cell(token) {\n    token.value = this.getCellLabel(token)\n    return token\n  }\n\n  function(token) {\n    const fn = this.getFunction(token)\n\n    if (fn) {\n      token.value = fn\n    } else {\n      token.type = t.TEXT\n    }\n\n    return token\n  }\n\n  getCellLabel(token) {\n    const { text } = token\n    const { index } = text.match(/\\d+/)\n    const col = text.slice(0, index).toUpperCase()\n    const row = text.slice(index)\n    return `${col}-${row}`\n  }\n\n  getFunction(token) {\n    const fnName = token.text.toUpperCase()\n    const fnNode = formulaFuncs[fnName]\n    return fnNode && fnNode.fn\n  }\n}\n\nexport default TokenSanitizer\n","class LexerRule {\n  constructor(regex, groupIndex, token, category) {\n    this.regex = regex\n    this.groupIndex = groupIndex\n    this.token = token\n    this.category = category\n  }\n\n  setIndex(index) {\n    this.regex.lastIndex = index\n  }\n\n  test(input) {\n    return this.regex.exec(input)\n  }\n}\n\nexport default LexerRule\n","import Token from './Token'\nimport TokenSanitizer from './TokenSanitizer'\nimport LexerRule from './LexerRule'\nimport { isNumber } from '~/library/utils'\n\n\nconst TOKENS = {\n  // internal\n  EOF: 'EOF',\n  // structure\n  EQUALS: 'EQUALS',\n  COMMA: 'COMMA',\n  COLON: 'COLON',\n  LPAREN: 'LPAREN',\n  RPAREN: 'RPAREN',\n  // operators\n  PLUS: 'PLUS',\n  MINUS: 'MINUS',\n  MULT: 'MULT',\n  DIV: 'DIV',\n  // entities\n  NUMBER: 'NUMBER',\n  CELL: 'CELL',\n  FUNCTION: 'FUNCTION',\n  TEXT: 'TEXT',\n}\n\nconst t = TOKENS\n\nconst GRAMMAR = [\n  // structure\n  new LexerRule(/=/g, 0, t.EQUALS, 'structure'),\n  new LexerRule(/,/g, 0, t.COMMA, 'structure'),\n  new LexerRule(/:/g, 0, t.COLON, 'structure'),\n  new LexerRule(/\\(/g, 0, t.LPAREN, 'structure'),\n  new LexerRule(/\\)/g, 0, t.RPAREN, 'structure'),\n  // operators\n  new LexerRule(/\\+/g, 0, t.PLUS, 'operator'),\n  new LexerRule(/\\-/g, 0, t.MINUS, 'operator'), // eslint-disable-line\n  new LexerRule(/\\*/g, 0, t.MULT, 'operator'),\n  new LexerRule(/\\//g, 0, t.DIV, 'operator'),\n  // multi-character\n  new LexerRule(/[\\d\\.]+/g, 0, t.NUMBER, 'entity'), // eslint-disable-line\n  new LexerRule(/[a-z]+[\\d]+/gi, 0, t.CELL, 'entity'),\n  new LexerRule(/([a-z]+)\\(/gi, 1, t.FUNCTION, 'entity'),\n]\n\n\nclass Lexer {\n  constructor(input) {\n    this.input = input\n    this.index = 0\n    this.char = this.initChar(input)\n    this.markers = []\n    this.tokens = []\n  }\n\n  getTokens() {\n    while (this.char !== t.EOF) {\n      const token = this.nextToken()\n      this.tokens.push(token)\n    }\n\n    const sanitizer = new TokenSanitizer(this.tokens)\n    this.tokens = sanitizer.sanitize()\n    return this.tokens\n  }\n\n  nextToken() {\n    if (this.char === t.EOF) {\n      return new Token(t.EOF, t.EOF, 0, 'eof', this.index)\n    }\n\n    if (!this.isFormula()) {\n      return this.tokenTEXTorNUMBER()\n    }\n\n    const whitespaceLen = this.getWhitespaceLen()\n    let token\n\n    for (let rule of GRAMMAR) {\n      rule.setIndex(this.index)\n      const match = rule.test(this.input)\n\n      if (match && match.index === this.index) {\n        const text = match[rule.groupIndex]\n        token = new Token(rule.token, text, whitespaceLen, rule.category, this.index)\n        this.index += text.length - 1\n        this.consume()\n        break\n      }\n    }\n\n    if (!token) {\n      token = this.tokenTEXT(whitespaceLen)\n    }\n\n    return token\n  }\n\n  initChar(input) {\n    if (this.input.length === 0) {\n      this.input = '0'\n      this.index = -1\n    }\n\n    return input[this.index]\n  }\n\n  tokenTEXT(whitespace) {\n    const chars = []\n\n    while (!(this.isEOF() || this.isSeparator() || this.isWhitespace())) {\n      chars.push(this.char)\n      this.consume()\n    }\n\n    const text = chars.join('')\n    return new Token(t.TEXT, text, whitespace, 'entity', this.index - text.length)\n  }\n\n  tokenTEXTorNUMBER() {\n    let token\n\n    if (isNumber(this.input)) {\n      token = new Token(t.NUMBER, this.input, 0, 'entity', this.index)\n    } else {\n      token = new Token(t.TEXT, this.input, 0, 'entity', this.index)\n    }\n\n    this.index = this.input.length - 1\n    this.consume()\n    return token\n  }\n\n  consume() {\n    this.index++\n\n    if (this.index < this.input.length) {\n      this.char = this.input[this.index]\n    } else {\n      this.char = t.EOF\n    }\n  }\n\n  isFormula() {\n    return this.input[0] === '='\n  }\n\n  isEOF() {\n    return this.char === t.EOF\n  }\n\n  isWhitespace() {\n    return !this.isEOF() && Boolean(this.char.match(/\\s/))\n  }\n\n  isSeparator() {\n    return Boolean(this.char.match(/[\\(\\)\\+\\-\\/\\*]/)) // eslint-disable-line\n  }\n\n  getWhitespaceLen() {\n    let count = 0\n\n    while (this.isWhitespace()) {\n      count++\n      this.consume()\n    }\n\n    return count\n  }\n}\n\nexport default Lexer\nexport { GRAMMAR, TOKENS, Lexer }\n","const Fn = {\n  AVERAGE: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      return Fn.SUM.fn(...args) / Fn.COUNT.fn(...args)\n    },\n    definition: 'AVERAGE(value1, value2, ...)',\n    example: 'AVERAGE(A1:B3, 3)',\n    summary: 'Returns the average from a series of numbers.',\n  },\n  CONCAT: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      return args.reduce((prev, curr) => (prev + curr), '')\n    },\n    definition: 'CONCAT(\"text1\", \"text2\", ...)',\n    example: 'CONCAT(\"one\", \"two\")',\n    summary: 'Returns a single concatenated string from a series of strings.',\n  },\n  COUNT: {\n    fn: (...args) => args.length,\n    definition: 'COUNT(element1, element2, ...)',\n    example: 'COUNT(A1:B3, 2, C4)',\n    summary: 'Returns the number of non-empty elements in a set.',\n  },\n  MAX: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      args.forEach(arg => {\n        if (typeof arg !== 'number') {\n          throw new TypeError(`${arg} is not a number`)\n        }\n      })\n  \n      return Math.max(...args)\n    },\n    definition: 'MAX(value1, value2, ...)',\n    example: 'MAX(A1:B3, 4, C3)',\n    summary: 'Returns the maximum value from a series of numbers',\n  },\n  MIN: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      args.forEach(arg => {\n        if (typeof arg !== 'number') {\n          throw new TypeError(`${arg} is not a number`)\n        }\n      })\n  \n      return Math.min(...args)\n    },\n    definition: 'MIN(value1, value2, ...)',\n    example: 'MIN(A1:B3, 4, C3)',\n    summary: 'Returns the minimum value from a series of numbers.',\n  },\n  POWER: {\n    fn: (...args) => {\n      if (args.length !== 2) {\n        throw new Error('Formula takes only two elements')\n      }\n    \n      const [base, exp] = args\n      return Math.pow(base, exp)\n    },\n    definition: 'POWER(base, exponent)',\n    example: 'POWER(A3,2)',\n    summary: 'Returns a number raised to an exponent.'\n  },\n  SQRT: {\n    fn: (...args) => {\n      if (args.length !== 1) {\n        throw new Error(`Formula takes only one element`)\n      }\n  \n      return Math.sqrt(args[0])\n    },\n    definition: 'SQRT(value)',\n    example: 'SQRT(9) or SQRT(A3)',\n    summary: 'Returns the square root of a number.'\n  },\n  SUM: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      return args.reduce((prev, curr) => prev + curr)\n    },\n    definition: 'SUM(value1, value2, ...)',\n    example: 'SUM(A1:B3, 3, C5)',\n    summary: 'Retuns the sum from a series of numbers.',\n  }\n}\n\n// aliases\nFn.AVG = {\n  ...Fn.AVERAGE,\n  definition: 'AVG(value1, value2, ...)',\n  example: 'AVG(A1:B3, 3)',\n}\n\nFn.POW = {\n  ...Fn.POWER,\n  definition: 'POW(base, exponent)',\n  example: 'POW(A3,2)',\n}\n\nexport default Fn\n","class Token {\n  constructor(type, text, whitespace, category, index) {\n    this.type = type\n    this.category = category\n    this.text = text\n    this.whitespace = whitespace\n    this.index = index\n    this.value = null\n    this.html = null\n  }\n}\n\nexport default Token\n","import React from 'react'\n\n\nexport const InputContext = React.createContext()\n","import { createReducer } from 'redux-starter-kit'\n\nexport const INITIAL_STATE = {\n  activeCell: null,\n  cellInputter: null,\n  rows: 14,\n  columns: 6,\n}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_ACTIVE_CELL': (state, { payload }) => {\n    state.activeCell = payload\n  },\n  'SET_CELL_INPUTTER': (state, { payload }) => {\n    state.cellInputter = payload\n  },\n  'UNSET_CELL_INPUTTER': (state) => {\n    state.cellInputter = null\n  },\n})\n","import { createReducer } from 'redux-starter-kit'\n\n\nconst INITIAL_STATE = {}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_CELL_DATA': (state, { payload }) => {\n    const { location, data } = payload\n    state[location] = data\n  },\n\n  'DELETE_CELL_DATA': (state, { payload }) => {\n    delete state[payload]\n  }\n})\n","import { configureStore } from 'redux-starter-kit'\n\nimport globalReducer from './globalReducer'\nimport tableReducer from './tableReducer'\n\n\nconst appStoreGen = () => (\n  configureStore({\n    reducer: {\n      global: globalReducer,\n      table: tableReducer,\n    }\n  })\n)\n\nconst appStore = appStoreGen()\n\n\nexport default appStore\nexport { appStoreGen }\n","import { createAction } from 'redux-starter-kit'\n\n\nexport const setActiveCell = createAction('SET_ACTIVE_CELL')\nexport const displayCellInputter = createAction('SET_CELL_INPUTTER')\nexport const closeCellInputter = createAction('UNSET_CELL_INPUTTER')\n","import appStore from '~/reducers/'\nimport { clearCellData, replaceCellData } from '~/actions/tableActions'\n\n\nclass ReduxConnect {\n  constructor(store=appStore) {\n    const { global: globalState } = store.getState()\n    this.store = store\n    this.rows = globalState.rows\n    this.columns = globalState.columns\n  }\n\n  get table() {\n    return this.store.getState().table\n  }\n\n  get locations() {\n    return Object.keys(this.table)\n  }\n\n  getCellResult(location) {\n    const data = this.table[location]\n    return data && data.result\n  }\n\n  replaceCellData(location, entered, result) {\n    this.store.dispatch(replaceCellData(location, entered, result))\n  }\n\n  clearCell(location) {\n    this.store.dispatch(clearCellData(location))\n  }\n}\n\nexport default ReduxConnect\nexport { appStore }\n","import { TOKENS as t } from './Lexer'\n\n\nclass AST {\n  constructor(name) {\n    this._name = name\n  }\n\n  eval() {\n    throw new Error('Implement method.')\n  }\n}\n\nclass TextNode extends AST {\n  constructor(textNode) {\n    super('TextNode')\n    this.textNode = textNode\n  }\n\n  eval() {\n    return this.textNode.text\n  }\n}\n\nclass NumberNode extends AST {\n  constructor(numberNode) {\n    super('NumberNode')\n    this.numberNode = numberNode\n  }\n\n  get value() {\n    return this.numberNode.value\n  }\n\n  eval() {\n    return this.value\n  }\n}\n\nclass CellNode extends AST {\n  constructor(token) {\n    super('CellNode')\n    this.cell = token\n  }\n\n  get location() {\n    return this.cell.value\n  }\n}\n\nclass UnaryOp extends AST {\n  constructor(opNode, expr) {\n    super('UnaryOp')\n    this.opNode = opNode\n    this.expr = expr\n  }\n\n  eval(evaluatedExpr) {\n    if (this.opNode.type === t.PLUS) {\n      return evaluatedExpr\n    } else if (this.opNode.type === t.MINUS) {\n      return -evaluatedExpr\n    }\n  }\n}\n\nclass FuncOp extends AST {\n  constructor(funcNode, argNodes) {\n    super('FuncOp')\n    this.funcNode = funcNode\n    this.argNodes = argNodes\n  }\n\n  eval(evaluatedArgs) {\n    const fn = this.funcNode.value\n    return fn(...evaluatedArgs)\n  }\n}\n\nclass BinaryOp extends AST {\n  constructor(leftNode, opNode, rightNode) {\n    super('BinaryOp')\n    this.leftNode = leftNode\n    this.opNode = opNode\n    this.rightNode = rightNode\n  }\n\n  eval(left, right) {\n    switch(this.opNode.type) {\n      case t.PLUS:\n        return left + right\n      case t.MINUS:\n        return left - right\n      case t.DIV:\n        if (right === 0) {\n          throw new Error(`Division by zero: ${left}/${right}`)\n        } else {\n          return left / right\n        }\n      case t.MULT:\n        return left * right\n      default:\n        throw new Error(`Unsupported operator \"${this.token.text}\"`)\n    }\n  }\n}\n\nexport {\n  TextNode,\n  NumberNode,\n  CellNode,\n  BinaryOp,\n  UnaryOp,\n  FuncOp,\n}\n","import { TOKENS as t } from './Lexer'\nimport { TextNode, NumberNode, CellNode, BinaryOp, UnaryOp, FuncOp } from './ast'\n\n\nclass Parser {\n  constructor(tokens) {\n    this.index = 0\n    this.tokens = tokens\n    this.curr = this.tokens[0]\n    this.ast = null\n    this.hasCellRefs = false\n  }\n\n  parse() {\n    switch (this.peekType()) {\n      case t.TEXT:\n        this.ast = this.text()\n        break\n      case t.NUMBER:\n        this.ast = this.number()\n        break\n      default:\n        this.equals()\n        this.ast = this.expr()\n        break\n    }\n\n    if (this.curr !== null) {\n      throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n    }\n\n    return this.ast\n  }\n\n  expr() {\n    // expr : term ( ( PLUS | MINUS ) term ) *\n    let node, operator, right\n\n    node = this.term()\n\n    while ( [t.PLUS, t.MINUS].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.term()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  term() {\n    // term : factor ( ( MULT | DIV ) factor ) *\n    let node, operator, right\n\n    node = this.factor()\n\n    while ( [t.MULT, t.DIV].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.factor()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  factor() {\n    // factor : ( PLUS | MINUS ) ( NUMBER | CELL )\n    //          | LPAREN expr RPAREN\n    //          | FUNCTION LPAREN list RPAREN\n    switch (this.peekType()) {\n      case t.PLUS:\n      case t.MINUS:\n        return this.unaryOp()\n      case t.NUMBER:\n        return this.number()\n      case t.CELL:\n        return this.cell()\n      case t.LPAREN:\n        return this.enclosedExpr()\n      case t.FUNCTION:\n        return this.func()\n      case t.RPAREN:\n        throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n      default:\n        throw new Error('Missing factor')\n    }\n  }\n\n  text() {\n    let node\n\n    if (this.peekType() !== t.TEXT) {\n      throw new Error('Missing string')\n    }\n\n    node = new TextNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  number() {\n    if (this.peekType() === t.NUMBER) {\n      const node = new NumberNode(this.curr)\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing number')\n    }\n  }\n\n  operator() {\n    if ([t.PLUS, t.MINUS, t.MULT, t.DIV].includes(this.peekType())) {\n      const node = this.curr\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing operator')\n    }\n  }\n\n  enclosedExpr() {\n    this.lparen()\n    const node = this.expr()\n    this.rparen()\n    return node\n  }\n\n  cell() {\n    if (this.peekType() !== t.CELL) {\n      throw new Error('Missing cell node')\n    }\n\n    const node = new CellNode(this.curr)\n    this.hasCellRefs = true\n    this.consume()\n    return node\n  }\n\n  func() {\n    if (this.peekType() !== t.FUNCTION) {\n      throw new Error('Missing function')\n    }\n\n    const func = this.curr\n    this.consume()\n    this.lparen()\n    const args = this.args()\n    this.rparen()\n    return new FuncOp(func, args)\n  }\n\n  args() {\n    const args = []\n    let term = this.term()\n\n    args.push(term)\n\n    while (this.peekType() === t.COMMA) {\n      this.consume()\n      term = this.term()\n      args.push(term)\n    }\n\n    return args\n  }\n\n  equals() {\n    if (this.peekType() !== t.EQUALS) {\n      throw new Error('Missing equals sign')\n    }\n\n    this.consume()\n  }\n\n  lparen() {\n    if (this.peekType() !== t.LPAREN) {\n      throw new Error('Missing left parenthesis')\n    }\n\n    this.consume()\n  }\n\n  rparen() {\n    if (this.peekType() !== t.RPAREN) {\n      throw new Error('Missing right parenthesis')\n    }\n\n    this.consume()\n  }\n\n  unaryOp() {\n    if (![t.PLUS, t.MINUS].includes(this.peekType())) {\n      throw new Error('Missing unary operator')\n    }\n\n    const curr = this.curr\n    this.consume()\n    const node = new UnaryOp(curr, this.factor())\n    return node\n  }\n\n  consume() {\n    if (this.index < this.tokens.length - 1) {\n      this.index++\n      this.curr = this.tokens[this.index]\n    } else {\n      this.curr = null\n    }\n  }\n\n  peekType() {\n    return this.curr && this.curr.type\n  }\n}\n\nexport default Parser\n","import { Lexer } from './Lexer'\nimport { parseLocation } from '~/library/utils'\nimport graph from '~/formulas/graph'\nimport Parser from './Parser'\nimport ReduxConnect from './ReduxConnect'\n\n\nconst ERR_DIVISION_BY_ZERO = '#DIV/0!'\nconst ERR_CIRCULAR_REFERENCE = '#REF!'\nconst ERR_GENERIC = '#ERROR!'\n\nclass Interpreter {\n  constructor(location) {\n    this.location = location\n    this.error = null\n    this.cache = {}\n    this.result = null\n    this.state = new ReduxConnect()\n  }\n\n  interpret(input) {\n    const vertex = graph.addVertex(this.location, input)\n    let lexer, parser\n\n    try {\n      lexer = new Lexer(input)\n      parser = new Parser( lexer.getTokens() )\n      vertex.ast = parser.parse()\n      graph.recalculate(this.location)\n      this.result = vertex.result\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      return this.result\n    }\n\n    this.error = vertex.error\n    return this.result\n  }\n\n  visit(location) {\n    const vertex = graph.getVertex(location)\n\n    if (graph.isResolved(location)) {\n      return vertex.result\n    }\n\n    graph.markVisited(location)\n\n    if (!vertex.ast) {\n      return vertex.result\n    }\n\n    try {\n      this.result = vertex.result = this._visit(vertex.ast)\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      throw error\n    }\n\n    return this.result\n  }\n\n  _visit(node) {\n    switch (node._name) {\n      case 'NumberNode':\n        return this.NumberNode(node)\n      case 'CellNode':\n        return this.CellNode(node)\n      case 'TextNode':\n        return this.TextNode(node)\n      case 'FuncOp':\n        return this.FuncOp(node)\n      case 'BinaryOp':\n        return this.BinaryOp(node)\n      case 'UnaryOp':\n        return this.UnaryOp(node)\n      default:\n        const nodeName = node._name || (node.constructor || {}).name\n        throw new Error(`Unrecognized AST node ${nodeName}`)\n    }\n  }\n\n  TextNode(node) {\n    return node.eval()\n  }\n\n  NumberNode(node) {\n    return node.eval()\n  }\n\n  CellNode(node) {\n    const otherLocation = node.location\n    let result\n\n    if (!this.isLocationValid(otherLocation)) {\n      throw new Error('Location out of bounds')\n    }\n\n    if (this.cache[otherLocation] !== undefined) {\n      return this.cache[otherLocation]\n    }\n\n    if (graph.isVisited(otherLocation)) {\n      throw new Error('Circular reference')\n    }\n\n    result = this.dfsCellVisit(otherLocation)\n    this.cache[otherLocation] = result\n    return result\n  }\n\n  UnaryOp(node) {\n    const result = this._visit(node.expr)\n    return node.eval(result)\n  }\n\n  FuncOp(node) {\n    const evaluatedArgs = []\n\n    for (let childNode of node.argNodes) {\n      const result = this._visit(childNode)\n      evaluatedArgs.push(result)\n    }\n\n    return node.eval(evaluatedArgs)\n  }\n\n  BinaryOp(node) {\n    const left = this._visit(node.leftNode)\n    const right = this._visit(node.rightNode)\n    return node.eval(left, right)\n  }\n\n  isLocationValid(location) {\n    const [colIndex, rowIndex] = parseLocation(location)\n\n    if (Math.min(colIndex, rowIndex) < 0) { return false }\n    if (colIndex >= this.state.columns) { return false }\n    if (rowIndex >= this.state.rows) { return false }\n    return true\n  }\n\n  dfsCellVisit(otherLocation) {\n    const interpreter = new Interpreter(otherLocation)\n    let result = 0\n\n    // cell has a value\n    if (graph.hasVertex(otherLocation)) {\n      result = interpreter.visit(otherLocation)\n    }\n\n    return result\n  }\n\n  errorResponse() {\n    const { message: errorMsg } = this.error\n\n    if (errorMsg.match(/division by zero/i)) {\n      return ERR_DIVISION_BY_ZERO\n    } else if (errorMsg.match(/circular reference/i)) {\n      return ERR_CIRCULAR_REFERENCE\n    } else {\n      return ERR_GENERIC\n    }\n  }\n}\n\nexport default Interpreter\nexport {\n  ERR_DIVISION_BY_ZERO,\n  ERR_CIRCULAR_REFERENCE,\n  ERR_GENERIC,\n}\n","import ReduxConnect from './ReduxConnect'\nimport Interpreter from './Interpreter'\n\n\nclass Vertex {\n  constructor(entered) {\n    this.entered = entered\n    this.error = null\n    this.result = null\n    this.ast = null\n  }\n}\n\nclass Graph {\n  constructor() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  interpret(location, input) {\n    const interpreter = new Interpreter(location)\n    return interpreter.interpret(input)\n  }\n\n  recalculate(initLocation) {\n    this.setPendingNodes()\n    this.dfs(initLocation)\n    this.updateStore()\n  }\n\n  getCellResult(location) {\n    if (this.hasVertex(location)) {\n      return this.getVertex(location).result\n    } else {\n      return ''\n    }\n  }\n\n  setPendingNodes() {\n    this.pending = new Set()\n\n    Object.keys(this.adj).forEach(vertex => {\n      this.pending.add(vertex)\n    })\n  }\n\n  isResolved(location) {\n    return this.isVisited(location) || !this.isPending(location)\n  }\n\n  isVisited(location) {\n    return this.visited.has(location)\n  }\n\n  isPending(location) {\n    return this.pending.has(location)\n  }\n\n  dfs(location) {\n    while (this.pending.size > 0) {\n      let interpreter\n      this.visited = new Set()\n\n      if (!location) {\n        location = [...this.pending][0]\n      }\n\n      try {\n        interpreter = new Interpreter(location)\n        interpreter.visit(location)\n      } catch (error) {}\n\n      this.visited.forEach(location => this.pending.delete(location))\n      location = null\n    }\n  }\n\n  updateStore() {\n    const locationKeys = new Set(this.store.locations)\n\n    for (let [location, vertex] of Object.entries(this.adj)) {\n      const { entered, result } = vertex\n\n      locationKeys.delete(location)\n\n      if (result !== this.store.getCellResult(location)) {\n        this.store.replaceCellData(location, entered, result)\n      }\n    }\n\n    for (let location of locationKeys) {\n      this.store.clearCell(location)\n    }\n  }\n\n  markVisited(location) {\n    return this.visited.add(location)\n  }\n\n  addVertex(location, entered) {\n    const vertex = new Vertex(entered)\n    this.adj[location] = vertex\n    return vertex\n  }\n\n  hasVertex(location) {\n    return location in this.adj\n  }\n\n  getVertex(location) {\n    this.testMissingLocation(location)\n    return this.adj[location]\n  }\n\n  delVertex(location) {\n    if (location in this.adj) {\n      delete this.adj[location]\n      this.recalculate()\n    }\n  }\n\n  resetAll() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  testMissingLocation(location) {\n    if (!this.hasVertex(location)) {\n      throw new Error('Missing location')\n    }\n  }\n}\n\nconst graph = new Graph()\n\n\nexport default graph\nexport {\n  Vertex,\n  Graph,\n}\n","import graph from '~/formulas/graph'\n\n\nexport function setCellData(location, entered) {\n  const result = graph.interpret(location, entered)\n\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function replaceCellData(location, entered, result) {\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function clearCellData(location) {\n  return (dispatch, getState) => {\n    const value = getState().table[location]\n\n    graph.delVertex(location)\n\n    if (value === undefined) {\n      return Promise.resolve()\n    }\n\n\n    return Promise.resolve(dispatch({\n      type: 'DELETE_CELL_DATA',\n      payload: location,\n    }))\n  }\n}\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { css, jsx } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { setCellData, clearCellData } from '~/actions/tableActions'\nimport { parseLocation, getColumnLabel } from '~/library/utils'\nimport Lexer from '~/formulas/Lexer'\nimport Suggestions from './Suggestions'\nimport { InputContext } from './InputContext'\nimport { closeCellInputter } from '~/actions/globalActions'\n\n\nconst INPUT_PADDING_RIGHT = 15\n\nconst Root = styled.div`\n  position: fixed;\n`\n\nconst Input = styled.input`\n  align-items: center;\n  background-color: white;\n  border: 2px solid salmon;\n  box-sizing: border-box;\n  display: flex;\n  font-size: 13px;\n  height: 100%;\n  outline: none;\n  padding: 2px;\n  width: 100%;\n`\n\nconst HiddenInput = styled(Input)`\n  position: absolute;\n  margin-top: -100vh;\n  visibility: hidden;\n`\n\nexport class CellInputter extends React.PureComponent {\n\n  static propTypes = {\n    // redux\n    cellRect: PropTypes.object.isRequired,\n    clearCellData: PropTypes.func.isRequired,\n    closeCellInputter: PropTypes.func.isRequired,\n    columns: PropTypes.number.isRequired,\n    entered: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    rows: PropTypes.number.isRequired,\n    setCellData: PropTypes.func.isRequired,\n    willReplaceValue: PropTypes.bool.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.setIsFuncSelectorVisible = this.setIsFuncSelectorVisible.bind(this)\n    this.setInputValue = this.setInputValue.bind(this)\n  }\n\n  state = {\n    tokens: [],\n    isFuncSelectorVisible: false,\n    inputValue: '',\n    keyEvent: { key: '' },\n    cursorPos: 0,\n  }\n\n  refInput = React.createRef()\n  refHiddenInput = React.createRef()\n\n  componentDidMount() {\n    const entered = this.props.willReplaceValue ? '' : this.props.entered\n    this.focusInputTag()\n    this.setInputValue(entered)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.keyEvent !== this.state.keyEvent) {\n      this.setFocus(this.state.keyEvent.key)\n      this.keyActions()\n    }\n\n    if (prevState.inputValue !== this.state.inputValue) {\n      this.tokenizeInputValue()\n    }\n  }\n\n  keyActions() {\n    switch (this.state.keyEvent.key) { // eslint-disable-line\n      case 'Escape':\n        this.props.closeCellInputter()\n        break\n      case 'Enter':\n        if (!this.state.isFuncSelectorVisible) {\n          this.setCellValue()\n          this.props.closeCellInputter()\n        }\n        break\n      case 'ArrowLeft':\n      case 'ArrowRight':\n        this.setState({ cursorPos: this.refInput.current.selectionEnd })\n    }\n  }\n\n  tokenizeInputValue() {\n    const { inputValue } = this.state\n    const lexer = new Lexer(inputValue)\n    const tokens = lexer.getTokens()\n    this.setState({ tokens })\n  }\n\n  focusInputTag() {\n    const input = this.refInput.current\n    input.focus()\n  }\n\n  setFocus() {\n    const { keyEvent: { key } } = this.state\n    const { location } = this.props\n    const [colIndex, rowIndex] = parseLocation(location)\n    let el, elId\n\n    if (key === 'Tab') {\n      elId = `[data-cell=\"result\"][data-location=\"${location}\"]`\n    } else if (key === 'Enter') {\n      if (this.state.isFuncSelectorVisible) { return }\n\n      const nextRowIndex = Math.min(this.props.rows - 1, rowIndex + 1)\n      const colLabel = getColumnLabel(colIndex)\n      const rowLabel = '' + (nextRowIndex + 1)\n      const endLocation = `${colLabel}-${rowLabel}`\n      elId = `[data-cell=\"result\"][data-location=\"${endLocation}\"]`\n    } else if (key === 'Escape') {\n      elId = `[data-cell=\"result\"][data-location=\"${location}\"]`\n    } else {\n      elId = `[data-cell=\"input\"][data-location=\"${location}\"]`\n    }\n\n    el = document.querySelector(elId)\n    if (document.activeElement !== el) { el.focus() }\n  }\n\n  setCellValue() {\n    const { location } = this.props\n    const { inputValue } = this.state\n\n    if (this.isWhitespace(inputValue)) {\n      this.props.clearCellData(location)\n      return\n    }\n\n    const cellValue = inputValue.length > 0 && inputValue[0] === '='\n      ? inputValue.toUpperCase()\n      : inputValue\n\n    this.props.setCellData(location, cellValue)\n  }\n\n  isWhitespace(text) {\n    return text.length === 0 || Boolean(text.match(/^\\s+$/))\n  }\n\n  setIsFuncSelectorVisible(isFuncSelectorVisible) {\n    this.setState({ isFuncSelectorVisible })\n  }\n\n  setInputValue(inputValue, cursorPos) {\n    this.setState({ inputValue, cursorPos: inputValue.length }, () => {\n      if (!cursorPos) { return }\n\n      setImmediate(() => {\n        this.refInput.current.selectionStart = cursorPos\n        this.refInput.current.selectionEnd = cursorPos\n      })\n    })\n  }\n\n  handleOnChange(event) {\n    const { target: { value } } = event\n    const cursorPos = event.target.selectionStart\n    this.setState({ inputValue: value, cursorPos })\n  }\n\n  handleOnKeyDown(event) {\n    const { key, target: { value } } = event\n    this.setState({ keyEvent: { key }, inputValue: value })\n  }\n\n  handleOnBlur(event) {\n    this.setState({ inputValue: event.target.value }, () => {\n      this.setCellValue()\n      this.props.closeCellInputter()\n    })\n  }\n\n  getRootStyle() {\n    const { top, left, width: cellWidth, height: cellHeight } = this.props.cellRect\n    const { current: hiddenInputEl } = this.refHiddenInput\n    let width, height\n\n    if (hiddenInputEl) {\n      const textWidth = hiddenInputEl.scrollWidth\n      const hiddenRect = hiddenInputEl.getBoundingClientRect()\n      width = textWidth > hiddenRect.width\n        ? Math.max(cellWidth, textWidth + INPUT_PADDING_RIGHT)\n        : cellWidth\n      height = cellHeight\n    } else {\n      width = cellWidth\n      height = cellHeight\n    }\n\n\n    return {\n      top,\n      left,\n      height,\n      width,\n    }\n  }\n\n  render() {\n    const inputEl = this.refInput.current\n    const { width, height } = this.props.cellRect\n\n    if (!this.props.location) { return null }\n\n    return (\n      <InputContext.Provider\n        value={{\n          inputRect: inputEl && inputEl.getBoundingClientRect(),\n          setIsFuncSelectorVisible: this.setIsFuncSelectorVisible,\n          setInputValue: this.setInputValue,\n          keyEvent: this.state.keyEvent,\n          inputValue: this.state.inputValue,\n        }}\n      >\n        <Root\n          css={this.getRootStyle()}\n        >\n          <HiddenInput\n            ref={this.refHiddenInput}\n            defaultValue={this.state.inputValue}\n            css={{\n              width: width - INPUT_PADDING_RIGHT,\n              height,\n            }}\n          />\n          <Input\n            ref={this.refInput}\n            data-cell='input'\n            data-location={this.props.location}\n            value={this.state.inputValue}\n            onChange={this.handleOnChange}\n            onKeyDown={this.handleOnKeyDown}\n            onBlur={this.handleOnBlur}\n          />\n          <Suggestions\n            tokens={this.state.tokens}\n            cursorPos={this.state.cursorPos}\n          />\n        </Root>\n      </InputContext.Provider>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {\n    global: {\n      cellInputter: {\n        location, willReplaceValue, cellRect\n      },\n      rows,\n      columns,\n    }\n  } = state\n  const cell = state.table[location]\n  const entered = cell ? cell.entered : ''\n\n  return { location, willReplaceValue, cellRect, entered, rows, columns }\n}\n\nconst mapDispatchToProps = { setCellData, clearCellData, closeCellInputter }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CellInputter)\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport { InputContext } from './InputContext'\n\n\nconst Root = styled.div`\n  background: ${props => props.theme.colors.dropdown.normal};\n  margin-top: 1px;\n  box-shadow: 0 0 5px ${props => props.theme.colors.shadow};\n  border: 1px solid ${props => props.theme.colors.dropdown.active};\n  width: 300px;\n  padding: 6px 8px;\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  padding-top: 12px;\n  font-size: 12px;\n`\n\nconst P = styled.p`\n  line-height: 1em;\n  font-size: 13px;\n`\n\nconst Hr = styled.hr`\n  border: 0;\n  border-top: 1px solid ${props => props.theme.colors.dropdown.active};\n`\n\nclass FuncDescription extends React.PureComponent {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    cursorPos: PropTypes.number,\n    fnScopes: PropTypes.array,\n  }\n\n  getFnScope() {\n    const { fnScopes, cursorPos } = this.props\n    let currScope\n\n    for (let scope of fnScopes) {\n      if (cursorPos >= scope.startIndex + 1) {\n        currScope = scope\n      } else {\n        break\n      }\n    }\n\n    if (currScope && currScope.endIndex === null) { return currScope}\n    if (currScope && cursorPos - 1 < currScope.endIndex) { return currScope }\n    return null\n  }\n\n  getFnNode(scope) {\n    const key = scope.fnName.toUpperCase()\n    return formulaFuncs[key]\n  }\n\n  render() {\n    const scope = this.getFnScope()\n    const { inputRect } = this.context\n    if (!inputRect) { return null }\n    const { bottom: top, left } = inputRect\n    let fnNode\n\n    if (!scope) { return null }\n    fnNode = this.getFnNode(scope)\n\n    return (\n      <Root\n        css={{ top, left }}\n      >\n        <Pre\n          css={css`\n            padding-bottom: 6px;\n          `}\n        >\n          {fnNode.definition}\n        </Pre>\n        <Hr />\n        <Subtitle>Example</Subtitle>\n        <Pre>{fnNode.example}</Pre>\n        <Subtitle>Summary</Subtitle>\n        <P>{fnNode.summary}</P>\n      </Root>\n    )\n  }\n}\n\nFuncDescription.propTypes = {\n  cursorPos: PropTypes.number,\n  fnScopes: PropTypes.array,\n}\n\nexport default FuncDescription\n\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport styled from '@emotion/styled'\n\n\nconst Li = styled.li`\n`\n\nfunction DropdownItem({ item, isActive }) {\n  return (\n    <Li\n      tabIndex={0}\n    >\n      {isActive && item.active ? item.active : item.base}\n    </Li>\n  )\n}\n\nDropdownItem.propTypes = {\n  item: PropTypes.shape({\n    base: PropTypes.node.isRequired,\n    active: PropTypes.node,\n  }),\n  isActive: PropTypes.bool.isRequired,\n}\n\nexport default DropdownItem\n","\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport InteractiveListItem from './InteractiveListItem'\n\n\nconst Ul = styled.ul`\n  position: fixed;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`\n\nclass InteractiveList extends React.PureComponent {\n  static propsTypes = {\n    selectedFn: PropTypes.func.isRequired,\n    items: PropTypes.array.isRequired,\n    top: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    styles: PropTypes.shape({\n      ul: PropTypes.object,\n      li: PropTypes.object,\n    }),\n  }\n\n  state = {\n    activeIndex: 0,\n    selectedIndex: null,\n  }\n\n  componentDidUpdate(prevProps, prevState) { // eslint-disable-line\n    this.fireSelected()\n  }\n\n  fireSelected() {\n    if (this.state.selectedIndex === null) { return }\n    const item = this.props.items[this.state.selectedIndex]\n    this.props.selectedFn(item.value)\n  }\n\n  renderListItems() {\n    return this.props.items\n      .map((item, i) => (\n        <InteractiveListItem\n          key={i}\n          item={item.item}\n          style={{...this.props.styles.li}}\n          isActive={item.isActive}\n        />\n      ))\n  }\n\n  render() {\n    const { items, top, left, styles } = this.props\n\n    if (items.length === 0) { return null }\n\n    return (\n      <Ul\n        tabIndex={-1}\n        style={{ top, left, ...styles.ul }}\n        onClick={this.handleOnClick}\n      >\n        {this.renderListItems()}\n      </Ul>\n    )\n  }\n}\n\nexport default InteractiveList\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport InteractiveList from '~/library/InteractiveList'\nimport Token from '~/formulas/Token'\nimport { InputContext } from './InputContext'\nimport { withTheme } from 'emotion-theming'\n\n\nconst baseStyle = css`\n  padding: 6px 8px;\n`\n\nconst BaseRoot = styled.div`\n  ${baseStyle}\n  background: ${props => props.theme.colors.dropdown.normal};\n`\n\nconst ActiveRoot = styled.div`\n  ${baseStyle}\n  background: ${props => props.theme.colors.dropdown.active};\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  font-size: 12px;\n`\n\nclass FuncSelector extends React.Component {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    token: PropTypes.instanceOf(Token),\n    colors: PropTypes.object,\n    theme: PropTypes.object,\n  }\n\n  state = {\n    listItems: [],\n    itemIndex: 0,\n    keyEvent: null,\n    isVisible: false,\n  }\n\n  componentDidMount() {\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.state.listItems !== nextState.listItems\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.updateContextData(prevState)\n    this.updateListItems(prevProps)\n    this.keyActions()\n  }\n\n  componentWillUnmount() {\n    this.context.setIsFuncSelectorVisible(false)\n  }\n\n  updateListItems(prevProps) {\n    if (prevProps.token === this.props.token) { return }\n\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  updateContextData(prevState) {\n    const { keyEvent } = this.context\n\n    if (prevState.keyEvent !== keyEvent) {\n      this.setState({ keyEvent })\n      this.setItemIndex(keyEvent)\n    }\n  }\n\n  keyActions() {\n    const { keyEvent } = this.context\n    if (this.state.keyEvent === keyEvent) { return }\n    if (keyEvent.key === 'Enter' && this.state.isVisible) {\n      this.updateInputValue()\n    }\n  }\n\n  updateInputValue() {\n    const currInputValue = this.context.inputValue\n    const { token } = this.props\n    const { fnName } = this.state.listItems[this.state.itemIndex]\n    const rightChunkIndex = token.index + token.text.length\n    const leftChunk = currInputValue.slice(0, token.index)\n    const rightChunk = currInputValue.slice(rightChunkIndex)\n    const newInputValue = `${leftChunk}${fnName}(${rightChunk}`\n    const cursorPos = leftChunk.length + fnName.length + 1\n    this.context.setInputValue(newInputValue, cursorPos)\n  }\n\n  setListItems() {\n    const { token } = this.props\n    const text = token.text.toUpperCase()\n    let isVisible = false\n    let itemIndex\n    const listItems = Object\n      .keys(formulaFuncs)\n      .filter(fnName => fnName.startsWith(text))\n      .sort()\n      .map(fnName => ({\n        item: {\n          base: this.itemBase(fnName),\n          active: this.itemActive(fnName),\n        },\n        isActive: false,\n        fnName,\n      }))\n\n    itemIndex = Math.max(Math.min(listItems.length - 1, this.state.itemIndex), 0)\n\n    if (listItems.length > 0) {\n      listItems[itemIndex].isActive = isVisible = true\n    }\n\n    this.context.setIsFuncSelectorVisible(isVisible)\n    this.setState({ listItems, itemIndex, isVisible })\n  }\n\n  setItemIndex(keyEvent) {\n    let itemIndex = this.state.itemIndex\n\n    switch (keyEvent.key) { // eslint-disable-line default-case\n      case 'ArrowUp':\n          itemIndex = this.state.itemIndex - 1\n        break\n      case 'ArrowDown':\n          itemIndex = this.state.itemIndex + 1\n        break\n    }\n\n    this.setState({ itemIndex }, () => {\n      this.setListItems()\n    })\n  }\n\n  itemBase(fnName) {\n    return (\n      <BaseRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n      </BaseRoot>\n    )\n  }\n\n  itemActive(fnName) {\n    return (\n      <ActiveRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n        <Subtitle>\n          {formulaFuncs[fnName].summary}\n        </Subtitle>\n      </ActiveRoot>\n    )\n  }\n\n  getListStyles() {\n    const { theme } = this.props\n\n    return {\n      ul: {\n        marginTop: 1,\n        boxShadow: `0 0 5px ${theme.colors.shadow}`,\n        border: `1px solid ${theme.colors.dropdown.active}`,\n        width: 300,\n      }\n    }\n  }\n\n  render() {\n    const { listItems, isVisible } = this.state\n    const { inputRect } = this.context\n\n    if (isVisible) {\n      return (\n        <InteractiveList\n          selectItem={() => {}}\n          items={listItems}\n          top={Math.round(inputRect.bottom)}\n          left={Math.round(inputRect.left)}\n          styles={this.getListStyles()}\n        />\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nexport default withTheme(FuncSelector)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { TOKENS as t } from '~/formulas/Lexer'\nimport FuncDescription from './FuncDescription'\nimport FuncSelector from './FuncSelector'\n\n\nclass Suggestions extends React.PureComponent {\n\n  static propTypes = {\n    tokens: PropTypes.array.isRequired,\n    cursorPos: PropTypes.number,\n  }\n\n  static defaultProps = {\n    cursorPos: 0,\n  }\n\n  state = {\n    fnScopes: [],\n  }\n\n  componentDidMount() {\n    this.setFnScopes()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.tokens !== this.props.tokens) {\n      this.setFnScopes()\n    }\n  }\n\n  setFnScopes() {\n    const stack = []\n    const fnScopes = []\n\n    for (let token of this.props.tokens) {\n      if (token.type === t.FUNCTION) {\n        const scope = { fnName: token.text, startIndex: token.index, endIndex: null }\n        stack.push(scope)\n        fnScopes.push(scope)\n      } else if (token.type === t.LPAREN) {\n        stack.push('(')\n      } else if (token.type === t.RPAREN) {\n        stack.pop()\n        if (stack.length > 0 && stack[stack.length - 1] !== '(') {\n          const scope = stack.pop()\n          scope.endIndex = token.index - 1\n        }\n      }\n    }\n\n    fnScopes.sort((a, b) => a.startIndex - b.startIndex)\n    this.setState({ fnScopes })\n  }\n\n  getCurrTokenIndex(tokens, cursorPos) {\n    let index\n\n    for (index = 0; index < tokens.length; index++) {\n      const token = tokens[index]\n      const endIndex = token.index + token.text.length\n\n      if (cursorPos > token.index && cursorPos <= endIndex) {\n        break\n      }\n    }\n\n    return index\n  }\n\n  getCompareTokens() {\n    const { tokens, cursorPos } = this.props\n    const index = this.getCurrTokenIndex(tokens, cursorPos)\n    const tokenBefore = index > 0 && tokens[index - 1]\n    const tokenCurr = tokens[index]\n    const tokenAfter = index < tokens.length - 2 && tokens[index + 1]\n    return [ tokenBefore, tokenCurr, tokenAfter ]\n  }\n\n  getFuncSelector() {\n    const [ tokenBefore, tokenCurr, tokenAfter ] = this.getCompareTokens()\n\n    if (this.props.tokens.length < 2) { return null }\n\n    const option1 = (\n      tokenBefore\n      && tokenCurr\n      && tokenAfter\n      && tokenBefore.category === 'operator'\n      && [t.TEXT, t.FUNCTION].includes(tokenCurr.type)\n      && tokenAfter.type !== t.RPAREN\n    )\n\n    const option2 = (\n      tokenBefore\n      && tokenCurr\n      && !tokenAfter\n      && [t.TEXT, t.FUNCTION].includes(tokenCurr.type)\n    )\n\n    if (option1 || option2) {\n      return (\n        <FuncSelector\n            token={tokenCurr}\n        />\n      )\n    }\n  }\n\n  render() {\n    const renderedFuncSelector = this.getFuncSelector()\n\n    if (renderedFuncSelector) {\n      return renderedFuncSelector\n    } else {\n      return (\n        <FuncDescription\n          cursorPos={this.props.cursorPos}\n          fnScopes={this.state.fnScopes}\n        />\n      )\n    }\n  }\n}\n\nexport default Suggestions\n","const colors = {\n  text: '#3D3D3D',\n  cell: {\n    border: '#dfdfdf',\n    borderDark: '#CCC',\n    labelBkg: '#F5F5F5'\n  },\n  dropdown: {\n    normal: '#fafafa',\n    active: '#ebebeb',\n  },\n  primary: {\n    strong: '#E10D75'\n  },\n  field: {\n    background: '#F0F0F0',\n  },\n  shadow: '#939393',\n}\n\nconst breaks = {\n  xs: 0,\n  sm: 420,\n  md: 900,\n  lg: 1200,\n}\n\nconst breakBump = {\n  xs: 'sm',\n  sm: 'md',\n  md: 'lg',\n}\n\nconst queries = {\n  xs: `@media (max-width: ${breaks.sm - 1}px)`,\n  sm: `@media (min-width: ${breaks.sm}px) and (max-width: ${breaks.md - 1}px)`,\n  md: `@media (min-width: ${breaks.md}px) and (max-width: ${breaks.lg - 1}px)`,\n  lg: `@media (min-width: ${breaks.lg}px)`,\n  from: (breakPoint) => (`@media (min-width: ${breaks[breakPoint]}px)`),\n  upTo: (breakPoint) => (`@media (max-width: ${breaks[ breakBump[breakPoint] ] - 1}px)`),\n}\n\nconst theme = {\n  colors,\n  breaks,\n  queries,\n}\n\nexport default theme\n","/* @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nimport theme from './theme'\n\n\nconst globalStyles = css`\n  body {\n    color: ${theme.colors.text};\n    line-height: 1.3em;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  table, th, td {\n    border: 0;\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n\n  td {\n    padding: 0;\n    line-height: 1.2em;\n  }\n\n  pre, p, h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n`\n\nexport default globalStyles\n","import React from 'react'\nimport styled from '@emotion/styled'\n\n\nconst Root = styled.header`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0 30px;\n`\n\nfunction Header() {\n  return (\n    <Root>\n      <h3>Spreadsheet App</h3>\n    </Root>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n  font-size: 12px;\n`\n\nfunction ColLabel({ label }) {\n  return (\n    <InnerBorder\n      data-col={label}\n      className='col-label-width col-label-height'\n    >\n      {label}\n    </InnerBorder>\n  )\n}\n\nColLabel.propTypes = {\n  label: PropTypes.string,\n}\n\nexport default ColLabel\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport ColLabel from '../cell/ColLabel'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction ColLabelRow({ colLabels }) {\n  const renderCornerCell = () => (\n    <InnerBorder\n      className='row-label-width col-label-height'\n    />\n  )\n\n  const renderLabelCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => (\n      <ColLabel\n        key={i}\n        label={colLabels[i]}\n      />\n    )\n  ))\n\n  return (\n    <Row\n      data-row='header'\n    >\n      {renderCornerCell()}\n      {renderLabelCells()}\n    </Row>\n  )\n}\n\nColLabelRow.propTypes = {\n  colLabels: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default ColLabelRow\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst Wrapper = styled.div`\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction RowLabel({ label }) {\n  return (\n    <Wrapper\n      data-row={label}\n      className='row-label-width row-label-height'\n    >\n      {label}\n    </Wrapper>\n  )\n}\n\nRowLabel.propTypes = {\n  label: PropTypes.number,\n}\n\nexport default RowLabel\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { clearCellData } from '~/actions/tableActions'\nimport { displayCellInputter, setActiveCell } from '~/actions/globalActions'\n\n\nconst Wrapper = styled.div`\n  cursor: cell;\n  font-size: 13px;\n  border-right: 1px solid ${props => props.theme.colors.cell.border};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.border};\n`\n\nconst Cell = styled.div`\n  display: flex;\n  align-items: center;\n  outline: none;\n  border: 2px solid transparent;\n  line-height: 1.1em;\n  height: 100%;\n  width: 100%;\n  padding: 2px;\n\n  :focus, :focus-within {\n    border: 2px solid salmon;\n  }\n`\n\nexport class ResultCell extends React.PureComponent {\n  static propTypes = {\n    // props\n    // isFocused: PropTypes.bool,\n    location: PropTypes.string.isRequired,\n    // onDoubleClick: PropTypes.func.isRequired,\n    // onKeyDownEditable: PropTypes.func.isRequired,\n    displayCellInputter: PropTypes.func.isRequired,\n    // redux\n    clearCellData: PropTypes.func.isRequired,\n    // setActiveCell: PropTypes.func.isRequired,\n    result: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleCellOnKeyDown = this.handleCellOnKeyDown.bind(this)\n    this.handleCellOnDoubleClick = this.handleCellOnDoubleClick.bind(this)\n    this.handleCellOnClick = this.handleCellOnClick.bind(this)\n    this.handleWrapperOnClick = this.handleWrapperOnClick.bind(this)\n  }\n\n  refCell = React.createRef()\n\n  // componentDidMount() {\n  //   this.focusCell()\n  // }\n\n  // focusCell() {\n  //   if (this.props.isFocused) { this.refCell.current.focus() }\n  // }\n\n  displayCellInputter(willReplaceValue) {\n    const { location } = this.props\n    const cellDomRect = this.refCell.current.getBoundingClientRect()\n    const cellRect = JSON.parse(JSON.stringify(cellDomRect))\n\n    this.props.displayCellInputter({\n      location,\n      willReplaceValue,\n      cellRect,\n    })\n  }\n\n  handleCellOnKeyDown({ key }) {\n    this.props.setActiveCell(this.props.location)\n\n    if (['Delete', 'Backspace'].includes(key)) {\n      const valueStr = '' + this.props.result\n\n      if (valueStr.length > 0) {\n        this.props.clearCellData(this.props.location)\n      }\n      // key pressed is a printable symbol, ex: 'a', '1', ','\n      // can be further refined, but for now it's fine\n    } else if (key.length === 1) {\n      this.displayCellInputter(true)\n    }\n  }\n\n  handleCellOnDoubleClick() {\n    this.displayCellInputter(false)\n  }\n\n  getStyle() {\n    let style = {}\n\n    if (typeof this.props.result === 'number') {\n      style = {\n        whiteSpace: 'nowrap',\n        textOverflow: 'clip',\n        overflow: 'hidden',\n      }\n    }\n\n    return style\n  }\n\n  handleWrapperOnClick() {\n    this.refCell.current.focus()\n  }\n\n  handleCellOnClick(event) {\n    event.stopPropagation()\n  }\n\n  render() {\n    return (\n      <Wrapper\n        className='row-label-height col-label-width'\n        onClick={this.handleWrapperOnClick}\n      >\n        <Cell\n          ref={this.refCell}\n          data-cell='result'\n          data-location={this.props.location}\n          css={this.getStyle()}\n          tabIndex='0'\n          onClick={this.handleCellOnClick}\n          onKeyDown={this.handleCellOnKeyDown}\n          onDoubleClick={this.handleCellOnDoubleClick}\n        >\n          {this.props.result}\n        </Cell>\n      </Wrapper>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const result = cell ? cell.result : ''\n  return { result }\n}\n\nconst mapDispatchToProps = { clearCellData, displayCellInputter, setActiveCell }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultCell)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport RowLabel from '../cell/RowLabel'\n// import CellData from '../cell/CellData'\nimport CellResult from '../cell/CellResult'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\n// function DataRow({ rowNumber, colLabels, activeCell }) {\nfunction DataRow({ rowNumber, colLabels }) {\n  const dataCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => {\n      const location = `${colLabels[i]}-${rowNumber}`\n\n      // return (\n      //   <CellData\n      //     key={i}\n      //     isActive={activeCell === location}\n      //     location={location}\n      //   />\n      // )\n      return (\n        <CellResult\n          key={i}\n          location={location}\n        />\n      )\n    })\n  )\n\n  return (\n    <Row\n      data-row={rowNumber}\n    >\n      <RowLabel\n        label={rowNumber}\n      />\n      {dataCells()}\n    </Row>\n  )\n}\n\nDataRow.propTypes = {\n  rowNumber: PropTypes.number,\n  colLabels: PropTypes.arrayOf(PropTypes.string),\n  // activeCell: PropTypes.string,\n}\n\nexport default DataRow\n\n","import { Machine, assign } from 'xstate'\n\nimport { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nfunction getTargetLocation({ rows, columns, rowIndex, colIndex, key }) {\n  switch (key) {\n    case 'ArrowUp':\n      rowIndex = Math.max(0, rowIndex - 1)\n      break\n    case 'ArrowRight':\n      colIndex = Math.min(columns - 1, colIndex + 1)\n      break\n    case 'ArrowDown':\n    case 'Enter':\n      rowIndex = Math.min(rows - 1, rowIndex + 1)\n      break\n    case 'ArrowLeft':\n      colIndex = Math.max(0, colIndex - 1)\n      break\n    default:\n      return null\n  }\n\n  const colLabel = getColumnLabel(colIndex)\n  const rowLabel = '' + (rowIndex + 1)\n\n  return `${colLabel}-${rowLabel}`\n}\n\nfunction focusTargetCell(ctx) {\n  if (!ctx.endLocation) { return Promise.resolve(false) }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const id = `[data-location=\"${ctx.endLocation}\"]`\n      const cell = document.querySelector(id)\n      if (cell) { cell.focus() }\n      resolve(true)\n    }, 0)\n  })\n}\n\nconst state = {\n  id: 'keyboardNav',\n  initial: 'idle',\n  context: {\n    columns: null,\n    rows: null,\n    key: null,\n    colIndex: null,\n    rowIndex: null,\n    endLocation: null,\n    wasFocused: false,\n  },\n  states: {\n    idle: {\n      on: {\n        'MOVE_FOCUS': {\n          actions: ['setNewContext', 'calcTargetLocation'],\n          target: 'focusTarget',\n        }\n      }\n    },\n    focusTarget: {\n      invoke: {\n        src: focusTargetCell,\n        onDone: {\n          actions: assign({ wasFocused: (ctx, event) => event.data }),\n          target: 'idle',\n        },\n      },\n    },\n  },\n}\n\nconst actions = {\n  actions: {\n    setNewContext: assign((ctx, { key, location }) => {\n      const [colIndex, rowIndex] = parseLocation(location)\n      return { colIndex, rowIndex, key }\n    }),\n    calcTargetLocation: assign({\n      endLocation: (ctx) => {\n        return getTargetLocation(ctx)\n      }\n    }),\n  },\n}\n\nfunction getKeyboardNavMachine(rows, columns) {\n  const newContext = {\n    ...state.context,\n    columns,\n    rows,\n  }\n\n  return Machine(state, actions, newContext)\n}\n\nexport {\n  state,\n  actions,\n  getTargetLocation,\n  focusTargetCell,\n}\n\nexport default getKeyboardNavMachine\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport { interpret } from 'xstate'\n\nimport ColLabelRow from './ColLabelRow'\nimport DataRow from './DataRow'\nimport { getColumnNames } from '~/library/utils'\nimport getKeyboardNavMachine from './keyboardNavMachine'\n\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n  border-top: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-left: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .row-label-width {\n    width: 34px;\n  }\n\n  .row-label-height {\n    min-height: 28px;\n  }\n\n  .col-label-width {\n    width: 140px;\n  }\n\n  .col-label-height {\n    min-height: 26px;\n  }\n`\n\nexport class Table extends React.PureComponent {\n  static propTypes = {\n    activeCell: PropTypes.string,\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleTableOnClick = this.handleTableOnClick.bind(this)\n    this.handleTableOnKeyDown = this.handleTableOnKeyDown.bind(this)\n    this.colLabels = getColumnNames(props.columns)\n  }\n\n  keyboardNavMachine = getKeyboardNavMachine(this.props.rows, this.props.columns)\n  focusService = interpret(this.keyboardNavMachine)\n\n  componentDidMount() {\n    this.focusService.start()\n  }\n\n  componentWillUnmount() {\n    this.focusService.stop()\n  }\n\n  handleTableOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleTableOnKeyDown(event) {\n    event.stopPropagation()\n    this.moveFocus(event.key, event.target.dataset.location)\n  }\n\n  moveFocus(key, location) {\n    this.focusService.send({ type: 'MOVE_FOCUS', key, location })\n  }\n\n  renderColLabelRow(i) {\n    return (\n      <ColLabelRow\n        key={i}\n        rows={this.props.rows}\n        colLabels={this.colLabels}\n      />\n    )\n  }\n\n  renderDataRows(rowNumber) {\n    return (\n      <DataRow\n      key={rowNumber}\n        rowNumber={rowNumber}\n        colLabels={this.colLabels}\n        activeCell={this.props.activeCell}\n      />\n    )\n  }\n\n  renderRows() {\n    return new Array(this.props.rows + 1).fill(0).map((_, i) => {\n      if (i === 0) {\n        return this.renderColLabelRow(i)\n      } else {\n        return this.renderDataRows(i)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Grid\n        data-table='app'\n        onClick={this.handleTableOnClick}\n        onKeyDown={this.handleTableOnKeyDown}\n      >\n        {this.renderRows()}\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { activeCell, rows, columns } = state.global\n  return { activeCell, rows, columns }\n}\n\nexport default connect(mapStateToProps)(Table)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\n\nimport Header from './components/header/Header'\nimport Table from './components/table/Table'\nimport CellInputter from './components/cellInputter/CellInputter'\n\n\nconst Container = styled.div`\n  display: grid;\n  grid:\n    \"left-blank main right-blank\" 100vh\n    / auto minmax(auto, 1000px) auto;\n`\n\nconst Main = styled.main`\n  grid-area: main;\n`\n\nfunction App({ cellInputter }) {\n  return (\n    <Container>\n      <Main>\n        {cellInputter &&  <CellInputter />}\n        <div data-dummy-focus-stop tabIndex=\"0\" />\n        <Header />\n        <Table />\n      </Main>\n    </Container>\n  )\n}\n\nApp.propTypes = {\n  cellInputter: PropTypes.object,\n  setActiveCell: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({ cellInputter: state.global.cellInputter })\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from 'emotion-theming'\nimport { Global } from '@emotion/core'\nimport 'sanitize.css'\n\nimport appStore from './reducers/'\nimport globalStyles from './styles/globalStyles'\nimport theme from './styles/theme'\nimport App from './App'\n\n\nfunction Root() {\n  return (\n    <Provider store={appStore}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Global styles={globalStyles} />\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default Root\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
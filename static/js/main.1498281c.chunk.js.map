{"version":3,"sources":["reducers/globalReducer.js","reducers/tableDataReducer.js","reducers/tableMetaReducer.js","reducers/index.js","styles/theme.js","styles/globalStyles.js","components/header/Header.jsx","library/utils.js","library/constants.js","components/cell/ColHeader.jsx","actions/tableMetaActions.js","components/table/ColHeaderRow.jsx","components/cell/RowHeader.jsx","formulas/ReduxConnect.js","actions/tableDataActions.js","formulas/Token.js","formulas/formulaFunctions.js","formulas/TokenSanitizer.js","formulas/LexerRule.js","formulas/Lexer.js","formulas/ast.js","formulas/Parser.js","formulas/Interpreter.js","formulas/graph.js","actions/globalActions.js","components/ResultCell/Datum.jsx","components/ResultCell/Result.jsx","components/ResultCell/OutterBorder.jsx","components/ResultCell/ResultCell.jsx","components/table/DataRow.jsx","components/table/keyboardNavMachine.js","components/table/Table.jsx","components/CellInputter/InputContext.js","components/CellInputter/FuncDescription.jsx","library/InteractiveListItem.jsx","library/InteractiveList.jsx","components/CellInputter/FuncSelector.jsx","components/CellInputter/Suggestions.jsx","components/CellInputter/Inputter.jsx","components/CellInputter/HiddenInput.jsx","components/CellInputter/Wrapper.jsx","components/CellInputter/KeyboardActions.js","components/CellInputter/KeyboardFocuser.js","components/CellInputter/CellValueSetter.js","components/CellInputter/CellInputter.jsx","App.jsx","Root.jsx","serviceWorker.js","index.js"],"names":["createReducer","activeCell","cellInputter","rows","columns","SET_ACTIVE_CELL","state","_ref","payload","OPEN_CELL_INPUTTER","_ref2","CLOSE_CELL_INPUTTER","Object","objectSpread","isCellInputterOpen","SET_CELL_DATA","location","data","DELETE_CELL_DATA","colWidths","rowHeights","SET_COL_WIDTH","colLabel","width","defineProperty","SET_ROW_HEIGHT","rowLabel","height","appStore","configureStore","reducer","global","globalReducer","tableData","tableDataReducer","tableMeta","tableMetaReducer","breaks","xs","sm","md","lg","breakBump","queries","concat","from","breakPoint","upTo","theme","colors","text","cell","border","borderDark","labelBkg","dropdown","normal","active","primary","strong","light","field","background","shadow","globalStyles","css","Root","styled_base_browser_esm","target","name","styles","Header","react_default","a","createElement","BASE_CODE_POINT","codePointAt","clamp","value","min","max","Math","getColumnNames","cols","names","prevNames","remainCols","newNames","outerLoop","_i","_prevNames","length","colName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","letter","push","err","return","toConsumableArray","getColumnLabel","num","label","basePoint","curr","codePoint","String","fromCodePoint","floor","reverse","join","parseLocation","_location$split","split","_location$split2","slicedToArray","col","row","reduce","prev","charCodeAt","isNumber","numStr","isPeriodsAndDigits","Boolean","match","periodCount","debounce","time","fn","timeout","apply","arguments","setTimeout","clearTimeout","MIN_COL_WIDTH","MAX_COL_WIDTH","MIN_ROW_HEIGHT","MAX_ROW_HEIGHT","props","BtnWidth","ColHeader","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pageX","btnRight","isResizing","debSetColWidth","event","delta","setState","handleBtnWidthOnMouseDown","bind","assertThisInitialized","handleDocumentMouseMove","handleDocumentMouseUp","right","setColWidth","document","removeEventListener","preventDefault","addEventListener","_this$props","core_browser_esm","ColHeader_Root","data-col","className","getBtnWidthStyle","tabIndex","onMouseDown","onMouseMove","handleBtnWidthOnMouseMove","onMouseUp","handleBtnWidthOnMouseUp","React","PureComponent","defaultProps","mapDispatchToProps","Error","type","connect","ownProps","Row","InnerBorder","ColHeaderRow","colLabels","data-row","ColHeaderRow_ref","Array","fill","map","_","i","cell_ColHeader","key","BtnHeight","RowHeader","pageY","btnBottom","refRoot","createRef","debSetRowHeight","handleBtnHeightOnMouseDown","style","minHeight","bottom","setRowHeight","current","getBoundingClientRect","RowHeader_Root","ref","getRootStyle","getBtnHeightStyle","handleBtnHeightOnMouseMove","handleBtnHeightOnMouseUp","ReduxConnect","store","globalState","getState","result","entered","dispatch","replaceCellData","clearCellData","keys","Token","whitespace","category","index","html","testArgsAllNumbers","args","forEach","arg","TypeError","Fn","AVERAGE","_Fn$SUM","_Fn$COUNT","SUM","COUNT","definition","example","summary","CONCAT","_len","_key","MAX","_len2","_key2","MIN","_len3","_key3","POWER","_len4","_key4","base","exp","pow","SQRT","_len5","_key5","sqrt","_len6","_key6","AVG","POW","TokenSanitizer","tokens","token","t","NUMBER","number","CELL","FUNCTION","function","STRING","string","parseFloat","UNKNOWN","getCellLabel","getFunction","slice","toUpperCase","fnName","fnNode","formulaFuncs","LexerRule","regex","groupIndex","lastIndex","input","exec","TOKENS","EOF","EQUALS","COMMA","COLON","LPAREN","RPAREN","PLUS","MINUS","MULT","DIV","TEXT","GRAMMAR","Lexer","char","initChar","markers","nextToken","sanitizer","sanitize","isFormula","tokenTEXTorNUMBER","whitespaceLen","getWhitespaceLen","_GRAMMAR","rule","setIndex","test","consume","tokenUNKNOWN","chars","isEOF","isSeparator","isWhitespace","count","AST","_name","TextNode","textNode","node","StringNode","_this2","NumberNode","_this3","CellNode","_this4","CellRange","leftCell","rightCell","_this5","UnaryOp","opNode","expr","_this6","evaluatedExpr","FuncOp","funcNode","argNodes","_this7","evaluatedArgs","BinaryOp","leftNode","rightNode","_this8","left","Parser","ast","peekType","equals","operator","term","includes","factor","enclosedExpr","unaryOp","func","lparen","rparen","isCellRange","_this$invertCellRange","invertCellRange","_this$invertCellRange2","temp","list","listNode","cellRange","DQUOTE","stepsAhead","Interpreter","error","cache","lexer","parser","vertex","graph","addVertex","getTokens","parse","recalculate","errorResponse","getVertex","visitNode","nodeName","constructor","eval","getCellResult","_parseLocation","_parseLocation2","leftColIndex","leftRowIndex","_parseLocation3","_parseLocation4","rightColIndex","rightRowIndex","colIndexStart","colIndexEnd","rowIndexStart","rowIndexEnd","rowI","colI","otherLocation","isLocationValid","visitCell","childNode","_parseLocation5","_parseLocation6","colIndex","rowIndex","errorMsg","message","Vertex","Graph","adj","pending","visited","setPendingNodes","dfs","updateStore","Set","add","size","visitAST","delete","hasVertex","testPathCycle","has","locationKeys","locations","_Object$entries","entries","_ref3","clearCell","testMissingLocation","delVertex","Promise","resolve","closeCellInputter","createAction","Datum","fwdRef","onClick","onKeyDown","onDoubleClick","onFocus","Datum_Root","data-cell","data-location","whiteSpace","textOverflow","overflow","getStyle","Result","_React$PureComponent","handleOnClick","handleOnDoubleClick","handleOnFocus","handleOnKeyDown","refDatum","inherits","createClass","willReplaceValue","datumRect","cellRect","JSON","stringify","openCellInputter","setActiveCell","stopPropagation","ResultCell_Datum","newEntered","OutterBorder","children","OutterBorder_Root","css_browser_esm","_ownProps$location$sp","_ownProps$location$sp2","ResultCell","focus","focusDatum","ResultCell_OutterBorder","ResultCell_Result","DataRow","rowNumber","DataRow_Row","cell_RowHeader","components_ResultCell_ResultCell","id","initial","context","endLocation","wasFocused","states","idle","on","MOVE_FOCUS","actions","focusTarget","invoke","src","ctx","querySelector","onDone","assign","setNewContext","calcTargetLocation","getTargetLocation","getKeyboardNavMachine","newContext","Machine","Grid","Table","keyboardNavMachine","focusService","interpret","handleTableOnClick","handleTableOnKeyDown","start","stop","dataset","moveFocus","send","table_ColHeaderRow","table_DataRow","renderColHeaderRow","renderDataRows","data-table","renderRows","_state$global","InputContext","createContext","Pre","Subtitle","P","Hr","FuncDescription","currScope","fnScopes","cursorPos","scope","startIndex","endIndex","getFnScope","inputRect","top","getFnNode","FuncDescription_Root","FuncDescription_ref","contextType","Li","DropdownItem","item","isActive","onMouseEnter","Ul","InteractiveList","items","InteractiveListItem","li","ul","renderListItems","propsTypes","PropTypes","array","isRequired","shape","object","Dialog","baseItemStyle","ItemBaseRoot","ItemActiveRoot","FuncSelector","listItems","itemIndex","keyEvent","isVisible","setListItems","nextProps","nextState","prevProps","prevState","updateContextData","updateListItems","keyActions","setIsFuncSelectorVisible","keyEventSetIndex","updateInputValue","currInputValue","inputValue","rightChunkIndex","leftChunk","rightChunk","newInputValue","setInputValue","filter","startsWith","sort","itemBase","itemActive","FuncSelector_Pre","FuncSelector_Subtitle","marginTop","boxShadow","_this$state","open","library_InteractiveList","round","getListStyles","Component","withTheme","Suggestions","setFnScopes","stack","pop","b","getCurrTokenIndex","_this$getCompareToken","getCompareTokens","_this$getCompareToken2","tokenBefore","tokenCurr","tokenAfter","option1","option2","CellInputter_FuncSelector","renderedFuncSelector","getFuncSelector","CellInputter_FuncDescription","Input","BaseInput","HiddenInput","refInput","setInputWidth","cellWidth","inputEl","textWidth","scrollWidth","HiddenInput_Input","defaultValue","Wrapper","Wrapper_Root","KeyboardActions","component","c","isFuncSelectorVisible","funcSelector","default","selectionEnd","setCellValue","KeyboardFocuser","elementId","funcSelectorElId","defaultElId","focusElement","defaultEnter","nextRowIndex","el","activeElement","CellValueSetter","cellValue","sanitizeValue","setCellData","CellInputter","handleOnBlur","handleOnChange","keyboardActions","keyboardFocuser","cellValueSetter","focusInputTag","run","tokenizeInputValue","selectionStart","console","_this$props$cellRect","Provider","CellInputter_Wrapper","CellInputter_HiddenInput","onChange","onBlur","CellInputter_Suggestions","_state$global$cellInp","_state$global$activeC","Container","Main","components_CellInputter_CellInputter","data-dummy-focus-stop","header_Header","table_Table","es","react_router_dom","emotion_theming_browser_esm","src_App","window","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOASeA,cAPc,CAC3BC,WAAY,GACZC,aAAc,GACdC,KAAM,GACNC,QAAS,GAGiC,CAC1CC,gBAAmB,SAACC,EAADC,GAAwB,IAAdC,EAAcD,EAAdC,QAC3BF,EAAML,WAAaO,GAErBC,mBAAsB,SAACH,EAADI,GAAwB,IAAdF,EAAcE,EAAdF,QAC9BF,EAAMJ,aAAeM,GAGvBG,oBAAuB,SAACL,GACtBA,EAAMJ,aAANU,OAAAC,EAAA,EAAAD,CAAA,GAA0BN,EAAMJ,aAAhC,CAA8CY,oBAAoB,OCbvDd,cAFO,GAEsB,CAC1Ce,cAAiB,SAACT,EAADC,GAAwB,IAAdC,EAAcD,EAAdC,QACjBQ,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAClBX,EAAMU,GAAYC,GAGpBC,iBAAoB,SAACZ,EAADI,UACXJ,EADmCI,EAAdF,oBCJjBR,cALO,CACpBmB,UAAW,GACXC,WAAY,IAG8B,CAE1CC,cAAiB,SAACf,EAADC,GAAwB,IAAdC,EAAcD,EAAdC,QACjBc,EAAoBd,EAApBc,SAAUC,EAAUf,EAAVe,MACVJ,EAAcb,EAAda,UACRb,EAAMa,UAANP,OAAAC,EAAA,EAAAD,CAAA,GAAuBO,EAAvBP,OAAAY,EAAA,EAAAZ,CAAA,GAAmCU,EAAWC,KAGhDE,eAAkB,SAACnB,EAADI,GAAwB,IAAdF,EAAcE,EAAdF,QAClBkB,EAAqBlB,EAArBkB,SAAUC,EAAWnB,EAAXmB,OACVP,EAAed,EAAfc,WACRd,EAAMc,WAANR,OAAAC,EAAA,EAAAD,CAAA,GAAwBQ,EAAxBR,OAAAY,EAAA,EAAAZ,CAAA,GAAqCc,EAAWC,OCErCC,EAZbC,YAAe,CACbC,QAAS,CACPC,OAAQC,EACRC,UAAWC,EACXC,UAAWC,KCSXC,EAAS,CACbC,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,MAGAC,EAAY,CAChBJ,GAAI,KACJC,GAAI,KACJC,GAAI,MAGAG,EAAU,CACdL,GAAE,sBAAAM,OAAwBP,EAAOE,GAAK,EAApC,OACFA,GAAE,sBAAAK,OAAwBP,EAAOE,GAA/B,wBAAAK,OAAwDP,EAAOG,GAAK,EAApE,OACFA,GAAE,sBAAAI,OAAwBP,EAAOG,GAA/B,wBAAAI,OAAwDP,EAAOI,GAAK,EAApE,OACFA,GAAE,sBAAAG,OAAwBP,EAAOI,GAA/B,OACFI,KAAM,SAACC,GAAD,4BAAAF,OAAuCP,EAAOS,GAA9C,QACNC,KAAM,SAACD,GAAD,4BAAAF,OAAuCP,EAAQK,EAAUI,IAAgB,EAAzE,SASOE,EAND,CACZC,OA5Ca,CACbC,KAAM,UACNC,KAAM,CACJC,OAAQ,UACRC,WAAY,OACZC,SAAU,WAEZC,SAAU,CACRC,OAAQ,UACRC,OAAQ,WAEVC,QAAS,CACPC,OAAQ,UACRC,MAAO,UAETC,MAAO,CACLC,WAAY,WAEdC,OAAQ,WA2BR1B,SACAM,WCjBaqB,EAvBMC,YAAH,cAELjB,EAAMC,OAAOC,KAFR,wMCFZgB,EAAItD,OAAAuD,EAAA,EAAAvD,CAAA,UAAAwD,OAAA,aAAAxD,CAAA,CAAAyD,KAAA,UAAAC,OAAA,0FAgBKC,MARf,WACE,OACEC,EAAAC,EAAAC,cAACR,EAAD,KACEM,EAAAC,EAAAC,cAAA,mGCfAC,EAAkB,IAAIC,YAAY,GAOjC,SAASC,EAAMC,EAAOC,EAAKC,GAChC,OAAOC,KAAKF,IAAKE,KAAKD,IAAIF,EAAOC,GAAMC,GAelC,SAASE,EAAeC,GAM7B,IALA,IACIC,EAAQ,GACRC,EAAY,CAAC,IACbC,EAAaH,EAEVG,EAAa,GAAG,CACrB,IAAMC,EAAW,GAEjBC,EACA,QAAAC,EAAA,EAAAC,EAAoBL,EAApBI,EAAAC,EAAAC,OAAAF,IAA+B,CAA1B,IAAIG,EAAOF,EAAAD,GAAeI,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAC7B,QAAAC,EAAAC,EAVa,6BAUbC,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA6B,KAApBU,EAAoBN,EAAAnB,MAC3B,GAAmB,IAAfQ,EAAqB,MAAME,EAC/BD,EAASiB,KAAT,GAAA5D,OAAiBgD,GAAjBhD,OAA2B2D,IAC3BjB,GAAc,GAJa,MAAAmB,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,IAQ/BV,EAAYE,EACZH,EAAK,GAAAxC,OAAAhC,OAAA+F,EAAA,EAAA/F,CAAOwE,GAAUG,GAGxB,OAAOH,EAyBF,SAASwB,EAAeC,GAC7B,IAAMC,EAAQ,GACRC,EAAYpC,EACdqC,EAAOH,EAAM,EAEjB,EAAG,CAED,IACMI,EAAYF,GAFlBC,GAAQ,GACsB,GAExBT,EAASW,OAAOC,cAAcF,GACpCH,EAAMN,KAAKD,GAEXS,EAAO/B,KAAKmC,MAAMJ,EAAO,UAClBA,EAAO,GAEhB,OAAOF,EAAMO,UAAUC,KAAK,IAGvB,SAASC,EAAcvG,GAAU,IAAAwG,EACrBxG,EAASyG,MAAM,KADMC,EAAA9G,OAAA+G,EAAA,EAAA/G,CAAA4G,EAAA,GACjCI,EADiCF,EAAA,GAC5BG,EAD4BH,EAAA,GAKtC,MAAO,CAH4BE,EA5BVH,MAAM,IACPK,OAAO,SAACC,EAAMxB,GAAP,OACtB,GAAPwB,EAAYxB,EAAOyB,WAAW,GAAKrD,EAAkB,GACpD,GAEc,GAwBCkD,EAAM,GAKnB,SAASI,EAASC,GACvB,IAAMC,EAAqBC,QAAQF,EAAOG,MAAM,aAC1CC,GAAeJ,EAAOG,MAAM,QAAU,IAAI1C,OAEhD,QAAKwC,MACDG,EAAc,KACI,IAAlBJ,EAAOvC,QAA8B,MAAduC,EAAO,KAI7B,SAASK,EAASC,EAAMC,GAC7B,IAAIC,EAEJ,OAAO,WACDA,IAEJD,EAAEE,WAAF,EAAAC,WAEAF,EAAUG,WAAW,WACnBC,aAAaJ,GACbA,EAAU,MACTF,KCrHA,IACMO,EAAgB,GAChBC,EAAgB,IAEhBC,EAAiB,GACjBC,EAAiB,ICO9B,IAAIhF,EAAItD,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,aAAAxD,CAAA,mGAKoB,SAAAuI,GAAK,OAAIA,EAAMnG,MAAMC,OAAOE,KAAKE,YALrD,4BAMqB,SAAA8F,GAAK,OAAIA,EAAMnG,MAAMC,OAAOE,KAAKE,YANtD,eAOQ,SAAA8F,GAAK,OAAIA,EAAMnG,MAAMC,OAAOE,KAAKG,UAPzC,oBAWF8F,EAAQxI,OAAAuD,EAAA,EAAAvD,CAAA,UAAAwD,OAAA,aAAAxD,CAAA,gLAeI,SAAAuI,GAAK,OAAIA,EAAMnG,MAAMC,OAAOS,QAAQE,OAfxC,MAmBRyF,cAYJ,SAAAA,IAAc,IAAAC,EAAA,OAAA1I,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAH,IACZC,EAAA1I,OAAA6I,EAAA,EAAA7I,CAAA4I,KAAA5I,OAAA8I,EAAA,EAAA9I,CAAAyI,GAAAM,KAAAH,QAOFlJ,MAAQ,CACNsJ,MAAO,EACPrI,MAAO,EACPsI,SAAU,EACVC,YAAY,GAZAR,EA+BdS,eAAiBxB,EAAS,GAAI,SAACyB,GAC7B,IAAMC,EAAQD,EAAMJ,MAAQN,EAAKhJ,MAAMsJ,MACvCN,EAAKY,SAAS,CAAEL,SAAUI,MA/B1BX,EAAKa,0BAA4Bb,EAAKa,0BAA0BC,KAA/BxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IACjCA,EAAKgB,wBAA0BhB,EAAKgB,wBAAwBF,KAA7BxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IAC/BA,EAAKiB,sBAAwBjB,EAAKiB,sBAAsBH,KAA3BxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IAC7BA,EAAKS,eAAiBT,EAAKS,eAAeK,KAApBxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IALVA,kFAgBZ,GAAKE,KAAKlJ,MAAMwJ,WAAhB,CAEA,IAGMU,IAAU3F,EAHC2E,KAAKlJ,MAAMuJ,SACXd,EAAgBS,KAAKlJ,MAAMiB,MAC3ByH,EAAgBQ,KAAKlJ,MAAMiB,OACU,GAEtD,OAAO,SAACyB,GAAD,OAAWiB,WAAX,kCAGIuG,EAHJ,iBAISxH,EAAMC,OAAOS,QAAQE,MAJ9B,uDAaeoG,GACtBR,KAAKO,eAAeC,iDAGAA,GACpB,IAAMC,EAAQD,EAAMJ,MAAQJ,KAAKlJ,MAAMsJ,MACjCrI,EAAQiI,KAAKlJ,MAAMiB,MAAQ0I,EAEjCT,KAAKL,MAAMsB,YAAYjB,KAAKL,MAAMrC,MAAOvF,GACzCiI,KAAKU,SAAS,CAAEL,SAAU,EAAGC,YAAY,IACzCY,SAASC,oBAAoB,YAAanB,KAAKc,yBAC/CI,SAASC,oBAAoB,UAAWnB,KAAKe,yEAGrBP,GACxBA,EAAMY,iBAENpB,KAAKU,SAAS,CACZN,MAAOI,EAAMJ,MACbrI,MAAOiI,KAAKL,MAAM5H,MAClBuI,YAAY,IAGdY,SAASG,iBAAiB,YAAarB,KAAKc,yBAC5CI,SAASG,iBAAiB,UAAWrB,KAAKe,wDAYnC,IAAAO,EACkBtB,KAAKL,MAAtBrC,EADDgE,EACChE,MAAOvF,EADRuJ,EACQvJ,MAEf,OACEX,OAAAmK,EAAA,EAAAnK,CAACoK,EAAD,CACEC,WAAUnE,EACVoE,UAAU,mBACVjH,IAAKA,YAAF,SACQ1C,EADR,oBAKFuF,EACDlG,OAAAmK,EAAA,EAAAnK,CAACwI,EAAD,CACEnF,IAAKuF,KAAK2B,mBACVC,SAAS,KACTC,YAAa7B,KAAKW,0BAClBmB,YAAa9B,KAAK+B,0BAClBC,UAAWhC,KAAKiC,kCAtGFC,IAAMC,eAAxBtC,EAQGuC,aAAe,CACpBrK,MDnD6B,KC4JjC,IAAMsK,EAAqB,CAAEpB,YCnJtB,SAAqBnJ,EAAUC,GACpC,GAAqB,kBAAVA,EACT,MAAM,IAAIuK,MAAM,yBAGlB,MAAO,CACLC,KAAM,gBACNvL,QAAS,CAAEc,WAAUC,MAAOsD,EAAMtD,EAAOwH,EAAeC,OD8I7CgD,cAPf,SAAyB1L,EAAO2L,GAE9B,MAAO,CAAE1K,MADKjB,EAAM6B,UAAUhB,UAAU8K,EAASnF,SAMX+E,EAAzBG,CAA6C3C,GErJtD6C,EAAGtL,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,YAAAxD,CAAA,CAAAyD,KAAA,UAAAC,OAAA,oCAKH6H,EAAWvL,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,YAAAxD,CAAA,iFAIW,SAAAuI,GAAK,OAAIA,EAAMnG,MAAMC,OAAOE,KAAKE,YAJ5C,4BAKY,SAAA8F,GAAK,OAAIA,EAAMnG,MAAMC,OAAOE,KAAKE,YAL7C,eAMD,SAAA8F,GAAK,OAAIA,EAAMnG,MAAMC,OAAOE,KAAKG,UANhC,wDA0CF8I,OAjCf,SAAA1L,GAAqC,IAAb2L,EAAa3L,EAAb2L,UAmBtB,OACEzL,OAAAmK,EAAA,EAAAnK,CAACsL,EAAD,CACEI,WAAS,UAnBX1L,OAAAmK,EAAA,EAAAnK,CAACuL,EAAD,CACElI,IAAGsI,IAQL,IAAIC,MAAMH,EAAU1G,QAAQ8G,KAAK,GAAGC,IAAI,SAACC,EAAGC,GAAJ,OACtChM,OAAAmK,EAAA,EAAAnK,CAACiM,EAAD,CACEC,IAAKF,EACL9F,MAAOuF,EAAUO,SCzBnB1I,GAAItD,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,aAAAxD,CAAA,kHAMkB,SAAAuI,GAAK,OAAIA,EAAMnG,MAAMC,OAAOE,KAAKE,YANnD,4BAOmB,SAAA8F,GAAK,OAAIA,EAAMnG,MAAMC,OAAOE,KAAKE,YAPpD,eAQM,SAAA8F,GAAK,OAAIA,EAAMnG,MAAMC,OAAOE,KAAKG,UARvC,KAWJyJ,GAASnM,OAAAuD,EAAA,EAAAvD,CAAA,UAAAwD,OAAA,aAAAxD,CAAA,kLAeG,SAAAuI,GAAK,OAAIA,EAAMnG,MAAMC,OAAOS,QAAQE,OAfvC,MAmBToJ,eAQJ,SAAAA,IAAc,IAAA1D,EAAA,OAAA1I,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAwD,IACZ1D,EAAA1I,OAAA6I,EAAA,EAAA7I,CAAA4I,KAAA5I,OAAA8I,EAAA,EAAA9I,CAAAoM,GAAArD,KAAAH,QAOFlJ,MAAQ,CACN2M,MAAO,EACPtL,OAAQ,EACRuL,UAAW,EACXpD,YAAY,GAZAR,EAed6D,QAAUzB,IAAM0B,YAfF9D,EAiDd+D,gBAAkB9E,EAAS,GAAI,SAACyB,GAC9B,IAAMC,EAAQD,EAAMiD,MAAQ3D,EAAKhJ,MAAM2M,MACvC3D,EAAKY,SAAS,CAAEgD,UAAWjD,MAjD3BX,EAAKgE,2BAA6BhE,EAAKgE,2BAA2BlD,KAAhCxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IAClCA,EAAKgB,wBAA0BhB,EAAKgB,wBAAwBF,KAA7BxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IAC/BA,EAAKiB,sBAAwBjB,EAAKiB,sBAAsBH,KAA3BxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IAC7BA,EAAK+D,gBAAkB/D,EAAK+D,gBAAgBjD,KAArBxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IALXA,8EAiBC,IACL3H,EAAW6H,KAAKL,MAAhBxH,OACF4L,EAAQ,CACZhM,MAAO,IAUT,OAPII,EACF4L,EAAM5L,OAASA,GAEf4L,EAAMC,UJzEsB,GI0E5BD,EAAM5L,OAAS,QAGV4L,8CAIP,GAAK/D,KAAKlJ,MAAMwJ,WAAhB,CAEA,IAGM2D,IAAW5I,EAHC2E,KAAKlJ,MAAM4M,UACXjE,EAAiBO,KAAKlJ,MAAMqB,OAC5BuH,EAAiBM,KAAKlJ,MAAMqB,QACY,GAE1D,OAAO,SAACqB,GAAD,OAAWiB,WAAX,mCAGKwJ,EAHL,iBAISzK,EAAMC,OAAOS,QAAQE,MAJ9B,uDAaeoG,GACtBR,KAAK6D,gBAAgBrD,iDAGDA,GACpB,IAAMC,EAAQD,EAAMiD,MAAQzD,KAAKlJ,MAAM2M,MACjCtL,EAAS6H,KAAKlJ,MAAMqB,OAASsI,EAEnCT,KAAKL,MAAMuE,aAAalE,KAAKL,MAAMrC,MAAOnF,GAC1C6H,KAAKU,SAAS,CAAEgD,UAAW,EAAGpD,YAAY,IAC1CY,SAASC,oBAAoB,YAAanB,KAAKc,yBAC/CI,SAASC,oBAAoB,UAAWnB,KAAKe,0EAGpBP,GACzBA,EAAMY,iBAENpB,KAAKU,SAAS,CACZ+C,MAAOjD,EAAMiD,MACbtL,OAAQ6H,KAAKL,MAAMxH,QAAU6H,KAAK2D,QAAQQ,QAAQC,wBAAwBjM,OAC1EmI,YAAY,IAGdY,SAASG,iBAAiB,YAAarB,KAAKc,yBAC5CI,SAASG,iBAAiB,UAAWrB,KAAKe,wDAGnC,IACCzD,EAAU0C,KAAKL,MAAfrC,MAER,OACElG,OAAAmK,EAAA,EAAAnK,CAACiN,GAAD,CACEC,IAAKtE,KAAK2D,QACVb,WAAUxF,EACVoE,UAAU,mBACVjH,IAAKuF,KAAKuE,gBAETjH,EACDlG,OAAAmK,EAAA,EAAAnK,CAACmM,GAAD,CACE9I,IAAKuF,KAAKwE,oBACV5C,SAAS,KACTC,YAAa7B,KAAK8D,2BAClBhC,YAAa9B,KAAKyE,2BAClBzC,UAAWhC,KAAK0E,mCAzGFxC,IAAMC,eAqH9B,IAAME,GAAqB,CAAE6B,aF3ItB,SAAsBhM,EAAUC,GACrC,GAAsB,kBAAXA,EACT,MAAM,IAAImK,MAAM,0BAGlB,MAAO,CACLC,KAAM,iBACNvL,QAAS,CAAEkB,WAAUC,OAAQkD,EAAMlD,EAAQsH,EAAgBC,OEsIhD8C,eAPf,SAAyB1L,EAAO2L,GAE9B,MAAO,CAAEtK,OADMrB,EAAM6B,UAAUf,WAAW6K,EAASnF,SAMb+E,GAAzBG,CAA6CgB,IC/H7CmB,cA7Bb,SAAAA,IAA4B,IAAhBC,EAAgBxF,UAAAjD,OAAA,QAAAK,IAAA4C,UAAA,GAAAA,UAAA,GAAVhH,EAAUhB,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAA2E,GAAA,IACVE,EAAgBD,EAAME,WAA9BvM,OACRyH,KAAK4E,MAAQA,EACb5E,KAAKrJ,KAAOkO,EAAYlO,KACxBqJ,KAAKpJ,QAAUiO,EAAYjO,kEAWfY,GACZ,IAAMC,EAAOuI,KAAKvH,UAAUjB,GAC5B,OAAOC,GAAQA,EAAKsN,+CAGNvN,EAAUwN,EAASD,GACjC/E,KAAK4E,MAAMK,SCXR,SAAyBzN,EAAUwN,EAASD,GACjD,MAAO,CACLxC,KAAM,gBACNvL,QAAS,CAAEQ,WAAUC,KAAM,CAAEuN,UAASD,YDQlBG,CAAgB1N,EAAUwN,EAASD,sCAG/CvN,GACRwI,KAAK4E,MAAMK,SAASE,GAAc3N,sCAjBlC,OAAOwI,KAAK4E,MAAME,WAAWrM,4CAI7B,OAAOrB,OAAOgO,KAAKpF,KAAKvH,oBELb4M,GAXb,SAAAA,EAAY9C,EAAM7I,EAAM4L,EAAYC,EAAUC,GAAQpO,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAqF,GACpDrF,KAAKuC,KAAOA,EACZvC,KAAKuF,SAAWA,EAChBvF,KAAKtG,KAAOA,EACZsG,KAAKsF,WAAaA,EAClBtF,KAAKwF,MAAQA,EACbxF,KAAK1E,MAAQ,KACb0E,KAAKyF,KAAO,MCRhB,SAASC,GAAmBC,GAC1BA,EAAKC,QAAQ,SAAAC,GACX,GAAmB,kBAARA,EACT,MAAM,IAAIC,UAAJ,mCAAA1M,OAAiDyM,MAK7D,IAAME,GAAK,CACTC,QAAS,CACP/G,GAAI,WAAa,IAAAgH,EAAAC,EACf,GAAoB,IAAhB9G,UAAKjD,OACP,MAAM,IAAImG,MAAM,kBAGlB,OAAO2D,EAAAF,GAAGI,KAAIlH,GAAPE,MAAA8G,EAAA7G,YAAqB8G,EAAAH,GAAGK,OAAMnH,GAATE,MAAA+G,EAAA9G,YAE9BiH,WAAY,+BACZC,QAAS,oBACTC,QAAS,iDAGXC,OAAQ,CACNvH,GAAI,WAAa,QAAAwH,EAAArH,UAAAjD,OAATwJ,EAAS,IAAA3C,MAAAyD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAATf,EAASe,GAAAtH,UAAAsH,GACf,GAAoB,IAAhBf,EAAKxJ,OACP,MAAM,IAAImG,MAAM,kBAGlB,OAAOqD,EAAKrH,OAAO,SAACC,EAAMf,GAAP,OAAiBe,EAAOf,GAAO,KAEpD6I,WAAY,gCACZC,QAAS,uBACTC,QAAS,kEAGXH,MAAO,CACLnH,GAAI,kBAAaG,UAAKjD,QACtBkK,WAAY,iCACZC,QAAS,sBACTC,QAAS,sDAGXI,IAAK,CACH1H,GAAI,WAAa,QAAA2H,EAAAxH,UAAAjD,OAATwJ,EAAS,IAAA3C,MAAA4D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAATlB,EAASkB,GAAAzH,UAAAyH,GACf,GAAoB,IAAhBlB,EAAKxJ,OACP,MAAM,IAAImG,MAAM,kBAIlB,OADAoD,GAAmBC,GACZlK,KAAKD,IAAL2D,MAAA1D,KAAYkK,IAErBU,WAAY,2BACZC,QAAS,oBACTC,QAAS,sDAGXO,IAAK,CACH7H,GAAI,WAAa,QAAA8H,EAAA3H,UAAAjD,OAATwJ,EAAS,IAAA3C,MAAA+D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAATrB,EAASqB,GAAA5H,UAAA4H,GACf,GAAoB,IAAhBrB,EAAKxJ,OACP,MAAM,IAAImG,MAAM,kBAIlB,OADAoD,GAAmBC,GACZlK,KAAKF,IAAL4D,MAAA1D,KAAYkK,IAErBU,WAAY,2BACZC,QAAS,oBACTC,QAAS,uDAGXU,MAAO,CACLhI,GAAI,WAAa,QAAAiI,EAAA9H,UAAAjD,OAATwJ,EAAS,IAAA3C,MAAAkE,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAATxB,EAASwB,GAAA/H,UAAA+H,GACf,GAAoB,IAAhBxB,EAAKxJ,OACP,MAAM,IAAImG,MAAM,mCAGlBoD,GAAmBC,GALJ,IAMRyB,EAAazB,EANL,GAMF0B,EAAO1B,EANL,GAOf,OAAOlK,KAAK6L,IAAIF,EAAMC,IAExBhB,WAAY,wBACZC,QAAS,cACTC,QAAS,2CAGXgB,KAAM,CACJtI,GAAI,WAAa,QAAAuI,EAAApI,UAAAjD,OAATwJ,EAAS,IAAA3C,MAAAwE,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAT9B,EAAS8B,GAAArI,UAAAqI,GACf,GAAoB,IAAhB9B,EAAKxJ,OACP,MAAM,IAAImG,MAAJ,kCAIR,OADAoD,GAAmBC,GACZlK,KAAKiM,KAAK/B,EAAK,KAExBU,WAAY,cACZC,QAAS,sBACTC,QAAS,wCAGXJ,IAAK,CACHlH,GAAI,WAAa,QAAA0I,EAAAvI,UAAAjD,OAATwJ,EAAS,IAAA3C,MAAA2E,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAATjC,EAASiC,GAAAxI,UAAAwI,GACf,GAAoB,IAAhBjC,EAAKxJ,OACP,MAAM,IAAImG,MAAM,kBAIlB,OADAoD,GAAmBC,GACZA,EAAKrH,OAAO,SAACC,EAAMf,GAAP,OAAiBA,EAAOe,GAAO,IAEpD8H,WAAY,2BACZC,QAAS,oBACTC,QAAS,6CAKbR,GAAG8B,IAAHzQ,OAAAC,EAAA,EAAAD,CAAA,GACK2O,GAAGC,QADR,CAEEK,WAAY,2BACZC,QAAS,kBAGXP,GAAG+B,IAAH1Q,OAAAC,EAAA,EAAAD,CAAA,GACK2O,GAAGkB,MADR,CAEEZ,WAAY,sBACZC,QAAS,cAGIP,UCrDAgC,cApEb,SAAAA,EAAYC,GAAS5Q,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAA+H,GACnB/H,KAAKgI,OAASA,yDAGL,IAAAlI,EAAAE,KACT,OAAOA,KAAKgI,OAAO9E,IAAI,SAAA+E,GACrB,OAAOA,EAAM1F,MACX,KAAK2F,GAAEC,OACL,OAAOrI,EAAKsI,OAAOH,GACrB,KAAKC,GAAEG,KACL,OAAOvI,EAAKnG,KAAKsO,GACnB,KAAKC,GAAEI,SACL,OAAOxI,EAAKyI,SAASN,GACvB,KAAKC,GAAEM,OACL,OAAO1I,EAAK2I,OAAOR,GACrB,QACE,OAAOA,oCAKRA,GACL,OAAKxJ,EAASwJ,EAAMvO,OAKpBuO,EAAM3M,MAAQoN,WAAWT,EAAMvO,MACxBuO,IALLA,EAAM1F,KAAO2F,GAAES,QACRV,gCAONA,GAEH,OADAA,EAAM3M,MAAQ0E,KAAK4I,aAAaX,GACzBA,mCAGAA,GACP,IAAMhJ,EAAKe,KAAK6I,YAAYZ,GAQ5B,OANIhJ,EACFgJ,EAAM3M,MAAQ2D,EAEdgJ,EAAM1F,KAAO2F,GAAES,QAGVV,iCAGFA,GAEL,OADAA,EAAM3M,MAAQ2M,EAAMvO,KAAKoP,MAAM,GAAI,GAC5Bb,uCAGIA,GAAO,IACVvO,EAASuO,EAATvO,KACA8L,EAAU9L,EAAKmF,MAAM,OAArB2G,MACFpH,EAAM1E,EAAKoP,MAAM,EAAGtD,GAAOuD,cAC3B1K,EAAM3E,EAAKoP,MAAMtD,GACvB,SAAApM,OAAUgF,EAAV,KAAAhF,OAAiBiF,uCAGP4J,GACV,IAAMe,EAASf,EAAMvO,KAAKqP,cACpBE,EAASC,GAAaF,GAC5B,OAAOC,GAAUA,EAAOhK,YCrDbkK,cAhBb,SAAAA,EAAYC,EAAOC,EAAYpB,EAAO1C,GAAWnO,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAmJ,GAC/CnJ,KAAKoJ,MAAQA,EACbpJ,KAAKqJ,WAAaA,EAClBrJ,KAAKiI,MAAQA,EACbjI,KAAKuF,SAAWA,uDAGTC,GACPxF,KAAKoJ,MAAME,UAAY9D,+BAGpB+D,GACH,OAAOvJ,KAAKoJ,MAAMI,KAAKD,YCPrBE,GAAS,CAEbC,IAAK,MAELC,OAAQ,SACRC,MAAO,QACPC,MAAO,QACPC,OAAQ,SACRC,OAAQ,SAERC,KAAM,OACNC,MAAO,QACPC,KAAM,OACNC,IAAK,MAELC,KAAM,OACN/B,KAAM,OACNG,OAAQ,SACRL,OAAQ,SACRG,SAAU,WACVK,QAAS,WAGLT,GAAIuB,GAEJY,GAAU,CAEd,IAAIlB,GAAU,KAAM,EAAGjB,GAAEyB,OAAQ,aACjC,IAAIR,GAAU,KAAM,EAAGjB,GAAE0B,MAAO,aAChC,IAAIT,GAAU,KAAM,EAAGjB,GAAE2B,MAAO,aAChC,IAAIV,GAAU,MAAO,EAAGjB,GAAE4B,OAAQ,aAClC,IAAIX,GAAU,MAAO,EAAGjB,GAAE6B,OAAQ,aAElC,IAAIZ,GAAU,MAAO,EAAGjB,GAAE8B,KAAM,YAChC,IAAIb,GAAU,MAAO,EAAGjB,GAAE+B,MAAO,YACjC,IAAId,GAAU,MAAO,EAAGjB,GAAEgC,KAAM,YAChC,IAAIf,GAAU,MAAO,EAAGjB,GAAEiC,IAAK,YAE/B,IAAIhB,GAAU,aAAc,EAAGjB,GAAEM,OAAQ,UACzC,IAAIW,GAAU,WAAY,EAAGjB,GAAEC,OAAQ,UACvC,IAAIgB,GAAU,gBAAiB,EAAGjB,GAAEG,KAAM,UAC1C,IAAIc,GAAU,eAAgB,EAAGjB,GAAEI,SAAU,WAIzCgC,cACJ,SAAAA,EAAYf,GAAQnS,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAsK,GAClBtK,KAAKuJ,MAAQA,EACbvJ,KAAKwF,MAAQ,EACbxF,KAAKuK,KAAOvK,KAAKwK,SAASjB,GAC1BvJ,KAAKyK,QAAU,GACfzK,KAAKgI,OAAS,2DAId,KAAOhI,KAAKuK,OAASrC,GAAEwB,KAAK,CAC1B,IAAMzB,EAAQjI,KAAK0K,YACnB1K,KAAKgI,OAAOhL,KAAKiL,GAGnB,IAAM0C,EAAY,IAAI5C,GAAe/H,KAAKgI,QAE1C,OADAhI,KAAKgI,OAAS2C,EAAUC,WACjB5K,KAAKgI,2CAIZ,GAAIhI,KAAKuK,OAASrC,GAAEwB,IAClB,OAAO,IAAIrE,GAAM6C,GAAEwB,IAAKxB,GAAEwB,IAAK,EAAG,MAAO1J,KAAKwF,OAGhD,IAAKxF,KAAK6K,YACR,OAAO7K,KAAK8K,oBAMd,IAHA,IACI7C,EADE8C,EAAgB/K,KAAKgL,mBAG3B/O,EAAA,EAAAgP,EAAiBZ,GAAjBpO,EAAAgP,EAAA9O,OAAAF,IAA0B,CAArB,IAAIiP,EAAID,EAAAhP,GACXiP,EAAKC,SAASnL,KAAKwF,OACnB,IAAM3G,EAAQqM,EAAKE,KAAKpL,KAAKuJ,OAE7B,GAAI1K,GAASA,EAAM2G,QAAUxF,KAAKwF,MAAO,CACvC,IAAM9L,EAAOmF,EAAMqM,EAAK7B,YACxBpB,EAAQ,IAAI5C,GAAM6F,EAAKjD,MAAOvO,EAAMqR,EAAeG,EAAK3F,SAAUvF,KAAKwF,OACvExF,KAAKwF,OAAS9L,EAAKyC,OAAS,EAC5B6D,KAAKqL,UACL,OAQJ,OAJKpD,IACHA,EAAQjI,KAAKsL,aAAaP,IAGrB9C,mCAGAsB,GAMP,OAL0B,IAAtBvJ,KAAKuJ,MAAMpN,SACb6D,KAAKuJ,MAAQ,IACbvJ,KAAKwF,OAAS,GAGT+D,EAAMvJ,KAAKwF,4CAGPF,GAGX,IAFA,IAAMiG,EAAQ,KAELvL,KAAKwL,SAAWxL,KAAKyL,eAAiBzL,KAAK0L,iBAClDH,EAAMvO,KAAKgD,KAAKuK,MAChBvK,KAAKqL,UAGP,IAAM3R,EAAO6R,EAAMzN,KAAK,IACxB,OAAO,IAAIuH,GAAM6C,GAAES,QAASjP,EAAM4L,EAAY,SAAUtF,KAAKwF,MAAQ9L,EAAKyC,oDAI1E,IAAI8L,EAUJ,OAPEA,EADExJ,EAASuB,KAAKuJ,OACR,IAAIlE,GAAM6C,GAAEC,OAAQnI,KAAKuJ,MAAO,EAAG,SAAUvJ,KAAKwF,OAElD,IAAIH,GAAM6C,GAAEkC,KAAMpK,KAAKuJ,MAAO,EAAG,SAAUvJ,KAAKwF,OAG1DxF,KAAKwF,MAAQxF,KAAKuJ,MAAMpN,OAAS,EACjC6D,KAAKqL,UACEpD,oCAIPjI,KAAKwF,QAEDxF,KAAKwF,MAAQxF,KAAKuJ,MAAMpN,OAC1B6D,KAAKuK,KAAOvK,KAAKuJ,MAAMvJ,KAAKwF,OAE5BxF,KAAKuK,KAAOrC,GAAEwB,wCAKhB,MAAyB,MAAlB1J,KAAKuJ,MAAM,mCAIlB,OAAOvJ,KAAKuK,OAASrC,GAAEwB,2CAIvB,OAAQ1J,KAAKwL,SAAW5M,QAAQoB,KAAKuK,KAAK1L,MAAM,6CAIhD,OAAOD,QAAQoB,KAAKuK,KAAK1L,MAAM,8DAM/B,IAFA,IAAI8M,EAAQ,EAEL3L,KAAK0L,gBACVC,IACA3L,KAAKqL,UAGP,OAAOM,WAIIrB,MC7KTsB,cACJ,SAAAA,EAAY/Q,GAAOzD,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAA4L,GACjB5L,KAAK6L,MAAQhR,qDAIb,MAAM,IAAIyH,MAAM,8BAIdwJ,eACJ,SAAAA,EAAYC,GAAU,IAAAjM,EAAA,OAAA1I,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAA8L,IACpBhM,EAAA1I,OAAA6I,EAAA,EAAA7I,CAAA4I,KAAA5I,OAAA8I,EAAA,EAAA9I,CAAA0U,GAAA3L,KAAAH,KAAM,cACDgM,KAAOD,EAFQjM,sEAMpB,OAAOE,KAAKgM,KAAKtS,YAPEkS,IAWjBK,eACJ,SAAAA,EAAYD,GAAM,IAAAE,EAAA,OAAA9U,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAiM,IAChBC,EAAA9U,OAAA6I,EAAA,EAAA7I,CAAA4I,KAAA5I,OAAA8I,EAAA,EAAA9I,CAAA6U,GAAA9L,KAAAH,KAAM,gBACDgM,KAAOA,EAFIE,sEAMhB,OAAOlM,KAAKgM,KAAK1Q,aAPIsQ,IAWnBO,eACJ,SAAAA,EAAYH,GAAM,IAAAI,EAAA,OAAAhV,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAmM,IAChBC,EAAAhV,OAAA6I,EAAA,EAAA7I,CAAA4I,KAAA5I,OAAA8I,EAAA,EAAA9I,CAAA+U,GAAAhM,KAAAH,KAAM,gBACDgM,KAAOA,EAFII,sEAMhB,OAAOpM,KAAKgM,KAAK1Q,aAPIsQ,IAWnBS,eACJ,SAAAA,EAAYpE,GAAO,IAAAqE,EAAA,OAAAlV,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAqM,IACjBC,EAAAlV,OAAA6I,EAAA,EAAA7I,CAAA4I,KAAA5I,OAAA8I,EAAA,EAAA9I,CAAAiV,GAAAlM,KAAAH,KAAM,cACDrG,KAAOsO,EAFKqE,wEAMjB,OAAOtM,KAAKrG,KAAK2B,aAPEsQ,IAWjBW,eACJ,SAAAA,EAAYC,EAAUC,GAAW,IAAAC,EAAA,OAAAtV,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAuM,IAC/BG,EAAAtV,OAAA6I,EAAA,EAAA7I,CAAA4I,KAAA5I,OAAA8I,EAAA,EAAA9I,CAAAmV,GAAApM,KAAAH,KAAM,eACDwM,SAAWA,EAChBE,EAAKD,UAAYA,EAHcC,6BADXd,IAQlBe,eACJ,SAAAA,EAAYC,EAAQC,GAAM,IAAAC,EAAA,OAAA1V,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAA2M,IACxBG,EAAA1V,OAAA6I,EAAA,EAAA7I,CAAA4I,KAAA5I,OAAA8I,EAAA,EAAA9I,CAAAuV,GAAAxM,KAAAH,KAAM,aACD4M,OAASA,EACdE,EAAKD,KAAOA,EAHYC,oEAMrBC,GACH,OAAI/M,KAAK4M,OAAOrK,OAAS2F,GAAE8B,KAClB+C,EACE/M,KAAK4M,OAAOrK,OAAS2F,GAAE+B,OACxB8C,OADH,SAVWnB,IAgBhBoB,eACJ,SAAAA,EAAYC,EAAUC,GAAU,IAAAC,EAAA,OAAA/V,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAgN,IAC9BG,EAAA/V,OAAA6I,EAAA,EAAA7I,CAAA4I,KAAA5I,OAAA8I,EAAA,EAAA9I,CAAA4V,GAAA7M,KAAAH,KAAM,YACDiN,SAAWA,EAChBE,EAAKD,SAAWA,EAHcC,oEAM3BC,GAEH,OADWpN,KAAKiN,SAAS3R,MAChB6D,WAAF,EAAA/H,OAAA+F,EAAA,EAAA/F,CAAMgW,WATIxB,IAafyB,eACJ,SAAAA,EAAYC,EAAUV,EAAQW,GAAW,IAAAC,EAAA,OAAApW,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAqN,IACvCG,EAAApW,OAAA6I,EAAA,EAAA7I,CAAA4I,KAAA5I,OAAA8I,EAAA,EAAA9I,CAAAiW,GAAAlN,KAAAH,KAAM,cACDsN,SAAWA,EAChBE,EAAKZ,OAASA,EACdY,EAAKD,UAAYA,EAJsBC,oEAOpCC,EAAMzM,GACT,OAAOhB,KAAK4M,OAAOrK,MACjB,KAAK2F,GAAE8B,KACL,OAAOyD,EAAOzM,EAChB,KAAKkH,GAAE+B,MACL,OAAOwD,EAAOzM,EAChB,KAAKkH,GAAEiC,IACL,GAAc,IAAVnJ,EACF,MAAM,IAAIsB,MAAJ,qBAAAlJ,OAA+BqU,EAA/B,KAAArU,OAAuC4H,IAE7C,OAAOyM,EAAOzM,EAElB,KAAKkH,GAAEgC,KACL,OAAOuD,EAAOzM,EAChB,QACE,MAAM,IAAIsB,MAAJ,yBAAAlJ,OAAmC4G,KAAKiI,MAAMvO,KAA9C,cAvBSkS,ICyMR8B,cAzRb,SAAAA,EAAY1F,GAAS5Q,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAA0N,GACnB1N,KAAKwF,MAAQ,EACbxF,KAAKgI,OAASA,EACdhI,KAAKxC,KAAOwC,KAAKgI,OAAO,GACxBhI,KAAK2N,IAAM,yDAIX,OAAQ3N,KAAK4N,YACX,KAAK1F,GAAEkC,KACLpK,KAAK2N,IAAM3N,KAAKtG,OAChB,MACF,KAAKwO,GAAEC,OACLnI,KAAK2N,IAAM3N,KAAKoI,SAChB,MACF,QACEpI,KAAK6N,SACL7N,KAAK2N,IAAM3N,KAAK6M,OAIpB,GAAkB,OAAd7M,KAAKxC,KACP,MAAM,IAAI8E,MAAJ,4BAAAlJ,OAAsC4G,KAAKwF,MAA3C,OAAApM,OAAsD4G,KAAKxC,KAAK9D,KAAhE,MAGR,OAAOsG,KAAK2N,mCAKZ,IAAI3B,EAAM8B,EAAU9M,EAIpB,IAFAgL,EAAOhM,KAAK+N,OAEJ,CAAC7F,GAAE8B,KAAM9B,GAAE+B,OAAO+D,SAAShO,KAAK4N,aACtCE,EAAW9N,KAAK8N,WAChB9M,EAAQhB,KAAK+N,OACb/B,EAAO,IAAIqB,GAASrB,EAAM8B,EAAU9M,GAGtC,OAAOgL,iCAKP,IAAIA,EAAM8B,EAAU9M,EAIpB,IAFAgL,EAAOhM,KAAKiO,SAEJ,CAAC/F,GAAEgC,KAAMhC,GAAEiC,KAAK6D,SAAShO,KAAK4N,aACpCE,EAAW9N,KAAK8N,WAChB9M,EAAQhB,KAAKiO,SACbjC,EAAO,IAAIqB,GAASrB,EAAM8B,EAAU9M,GAGtC,OAAOgL,mCAOP,OAAQhM,KAAK4N,YACX,KAAK1F,GAAE4B,OACL,OAAO9J,KAAKkO,eACd,KAAKhG,GAAE8B,KACP,KAAK9B,GAAE+B,MACL,OAAOjK,KAAKmO,UACd,KAAKjG,GAAEC,OACL,OAAOnI,KAAKoI,SACd,KAAKF,GAAEG,KACL,OAAOrI,KAAKrG,OACd,KAAKuO,GAAEI,SACL,OAAOtI,KAAKoO,OACd,KAAKlG,GAAE6B,OACL,MAAM,IAAIzH,MAAJ,4BAAAlJ,OAAsC4G,KAAKwF,MAA3C,OAAApM,OAAsD4G,KAAKxC,KAAK9D,KAAhE,MACR,QACE,MAAM,IAAI4I,MAAM,0DAKpBtC,KAAKqO,SACL,IAAMrC,EAAOhM,KAAK6M,OAElB,OADA7M,KAAKsO,SACEtC,iCAIP,GAAIhM,KAAK4N,aAAe1F,GAAEG,KACxB,MAAM,IAAI/F,MAAM,qBAGlB,IAAM0J,EAAO,IAAIK,GAASrM,KAAKxC,MAE/B,OADAwC,KAAKqL,UACEW,sCAIP,IAAIyB,EAAMzM,EAEV,IAAKhB,KAAKuO,cACR,MAAM,IAAIjM,MAAM,sBASlB,GANAmL,EAAO,IAAIpB,GAASrM,KAAKxC,MACzBwC,KAAKqL,UACLrL,KAAKqL,UACLrK,EAAQ,IAAIqL,GAASrM,KAAKxC,MAC1BwC,KAAKqL,UAEDrK,EAAMxJ,SAAWiW,EAAKjW,SAAU,KAAAgX,EAClBxO,KAAKyO,gBAAgBhB,EAAMzM,GADT0N,EAAAtX,OAAA+G,EAAA,EAAA/G,CAAAoX,EAAA,GACjCf,EADiCiB,EAAA,GAC3B1N,EAD2B0N,EAAA,GAIpC,OAAO,IAAInC,GAAUkB,EAAMzM,2CAGbyM,EAAMzM,GACpBhB,KAAKgI,OAAOhI,KAAKwF,MAAQ,GAAKxE,EAAMrH,KACpCqG,KAAKgI,OAAOhI,KAAKwF,OAASiI,EAAK9T,KAC/B,IAAIgV,EAAOlB,EAGX,MAAO,CAFPA,EAAOzM,EACPA,EAAQ2N,kCAKR,GAAI3O,KAAK4N,aAAe1F,GAAEI,SACxB,MAAM,IAAIhG,MAAM,oBAGlB,IAAM8L,EAAOpO,KAAKxC,KAClBwC,KAAKqL,UACLrL,KAAKqO,SACL,IAAM1I,EAAO3F,KAAK4O,OAElB,OADA5O,KAAKsO,SACE,IAAItB,GAAOoB,EAAMzI,kCAIxB,IACIqG,EADE4C,EAAO,GAMb,IAHA5C,EAAOhM,KAAK6O,WACZD,EAAK5R,KAAKgP,GAEHhM,KAAK4N,aAAe1F,GAAE0B,OAC3B5J,KAAKqL,UACLW,EAAOhM,KAAK6O,WACZD,EAAK5R,KAAKgP,GAGZ,OAAO4C,qCAIP,OAAI5O,KAAKuO,cACAvO,KAAK8O,YACH9O,KAAK4N,aAAe1F,GAAEM,OACxBxI,KAAKyI,SAELzI,KAAK6M,sCAKd,IAAIb,EAEJ,GAAIhM,KAAK4N,aAAe1F,GAAEkC,KACxB,MAAM,IAAI9H,MAAM,kBAKlB,OAFA0J,EAAO,IAAIF,GAAS9L,KAAKxC,MACzBwC,KAAKqL,UACEW,mCAIP,IAAMA,EAAO,IAAIC,GAAWjM,KAAKxC,MAEjC,OADAwC,KAAKqL,UACEW,mCAIP,GAAIhM,KAAK4N,aAAe1F,GAAEC,OAAQ,CAChC,IAAM6D,EAAO,IAAIG,GAAWnM,KAAKxC,MAEjC,OADAwC,KAAKqL,UACEW,EAEP,MAAM,IAAI1J,MAAM,qDAKlB,GAAI,CAAC4F,GAAE8B,KAAM9B,GAAE+B,MAAO/B,GAAEgC,KAAMhC,GAAEiC,KAAK6D,SAAShO,KAAK4N,YAAa,CAC9D,IAAM5B,EAAOhM,KAAKxC,KAElB,OADAwC,KAAKqL,UACEW,EAEP,MAAM,IAAI1J,MAAM,qDAKlB,GAAItC,KAAK4N,aAAe1F,GAAEyB,OACxB,MAAM,IAAIrH,MAAM,uBAGlBtC,KAAKqL,2CAIL,GAAIrL,KAAK4N,aAAe1F,GAAE4B,OACxB,MAAM,IAAIxH,MAAM,4BAGlBtC,KAAKqL,2CAIL,GAAIrL,KAAK4N,aAAe1F,GAAE6B,OACxB,MAAM,IAAIzH,MAAM,6BAGlBtC,KAAKqL,4CAIL,IAAK,CAACnD,GAAE8B,KAAM9B,GAAE+B,OAAO+D,SAAShO,KAAK4N,YACnC,MAAM,IAAItL,MAAM,0BAGlB,IAAM9E,EAAOwC,KAAKxC,KAGlB,OAFAwC,KAAKqL,UACQ,IAAIsB,GAAQnP,EAAMwC,KAAKiO,4CAKhCjO,KAAKwF,MAAQxF,KAAKgI,OAAO7L,OAAS,GACpC6D,KAAKwF,QACLxF,KAAKxC,KAAOwC,KAAKgI,OAAOhI,KAAKwF,QAE7BxF,KAAKxC,KAAO,2CAKd,OACEwC,KAAK4N,SAAS,KAAO1F,GAAEG,MACpBrI,KAAK4N,SAAS,KAAO1F,GAAE2B,OACvB7J,KAAK4N,SAAS,KAAO1F,GAAEG,wCAK5B,OACErI,KAAK4N,SAAS,KAAO1F,GAAE6G,QACpB/O,KAAK4N,SAAS,KAAO1F,GAAEkC,MACvBpK,KAAK4N,SAAS,KAAO1F,GAAE6G,wCAIrBC,GACP,IAAIA,EAWF,OAAOhP,KAAKxC,MAAQwC,KAAKxC,KAAK+E,KAV9B,GAAIyM,EAAa,EACf,MAAM,IAAI1M,MAAM,qCAGlB,IAAMkD,EAAQxF,KAAKwF,MAAQwJ,EAE3B,OAAIxJ,EAAQxF,KAAKgI,OAAO7L,OACf6D,KAAKgI,OAAOxC,GAAOjD,UAD5B,WCzFS0M,cAzLb,SAAAA,EAAYzX,GAAWJ,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAiP,GACrBjP,KAAKxI,SAAWA,EAChBwI,KAAKkP,MAAQ,KACblP,KAAKmP,MAAQ,GACbnP,KAAK+E,OAAS,KACd/E,KAAKlJ,MAAQ,IAAI6N,yDAGT4E,GACR,IACI6F,EAAOC,EADLC,EAASC,GAAMC,UAAUxP,KAAKxI,SAAU+R,GAG9C,IACE6F,EAAQ,IAAI9E,GAAMf,GAClB8F,EAAS,IAAI3B,GAAQ0B,EAAMK,aAC3BH,EAAO3B,IAAM0B,EAAOK,QACpBH,GAAMI,YAAY3P,KAAKxI,UACvBwI,KAAK+E,OAASuK,EAAOvK,OACrB,MAAOmK,GAGP,OAFAlP,KAAKkP,MAAQI,EAAOJ,MAAQA,EAC5BlP,KAAK+E,OAASuK,EAAOvK,OAAS/E,KAAK4P,gBAC5B5P,KAAK+E,OAId,OADA/E,KAAKkP,MAAQI,EAAOJ,MACblP,KAAK+E,wCAGLvN,GACP,IAAM8X,EAASC,GAAMM,UAAUrY,GAE/B,IAAK8X,EAAO3B,IACV,OAAO2B,EAAOvK,OAGhB,IACE/E,KAAK+E,OAASuK,EAAOvK,OAAS/E,KAAK8P,UAAUR,EAAO3B,KACpD,MAAOuB,GAGP,MAFAlP,KAAKkP,MAAQI,EAAOJ,MAAQA,EAC5BlP,KAAK+E,OAASuK,EAAOvK,OAAS/E,KAAK4P,gBAC7BV,EAGR,OAAOlP,KAAK+E,yCAGJiH,GACR,OAAQA,EAAKH,OACX,IAAK,aACH,OAAO7L,KAAKmM,WAAWH,GACzB,IAAK,WACH,OAAOhM,KAAKqM,SAASL,GACvB,IAAK,WACH,OAAOhM,KAAK8L,SAASE,GACvB,IAAK,aACH,OAAOhM,KAAKiM,WAAWD,GACzB,IAAK,YACH,OAAOhM,KAAKuM,UAAUP,GACxB,IAAK,SACH,OAAOhM,KAAKgN,OAAOhB,GACrB,IAAK,WACH,OAAOhM,KAAKqN,SAASrB,GACvB,IAAK,UACH,OAAOhM,KAAK2M,QAAQX,GACtB,QACE,IAAM+D,EAAW/D,EAAKH,QAAUG,EAAKgE,aAAe,IAAInV,KACxD,MAAM,IAAIyH,MAAJ,yBAAAlJ,OAAmC2W,sCAQtC/D,GACP,OAAOA,EAAKiE,0CAGHjE,GACT,OAAOA,EAAKiE,0CAGHjE,GACT,OAAOA,EAAKiE,uCAONjE,GACN,IAAMjH,EAAS/E,KAAK8P,UAAU9D,EAAKa,MACnC,OAAOb,EAAKiE,KAAKlL,oCAGViH,GACP,IAAMjH,EAAS/E,KAAKkQ,cAAclE,EAAKxU,UACvC,YAAkBgF,IAAXuI,EACH,EACAA,mCAGGiH,GACP,IAAMyB,EAAOzN,KAAK8P,UAAU9D,EAAKsB,UAC3BtM,EAAQhB,KAAK8P,UAAU9D,EAAKuB,WAClC,OAAOvB,EAAKiE,KAAKxC,EAAMzM,qCAGfgL,GASR,IATc,IAAAmE,EACuBpS,EAAciO,EAAKQ,SAAShV,UADnD4Y,EAAAhZ,OAAA+G,EAAA,EAAA/G,CAAA+Y,EAAA,GACPE,EADOD,EAAA,GACOE,EADPF,EAAA,GAAAG,EAEyBxS,EAAciO,EAAKS,UAAUjV,UAFtDgZ,EAAApZ,OAAA+G,EAAA,EAAA/G,CAAAmZ,EAAA,GAEPE,EAFOD,EAAA,GAEQE,EAFRF,EAAA,GAGRG,EAAgBlV,KAAKF,IAAI8U,EAAcI,GACvCG,EAAcnV,KAAKD,IAAI6U,EAAcI,GACrCI,EAAgBpV,KAAKF,IAAI+U,EAAcI,GACvCI,EAAcrV,KAAKD,IAAI8U,EAAcI,GACrC9B,EAAO,GAEJmC,EAAOF,EAAeE,GAAQD,EAAaC,IAClD,IAAK,IAAIC,EAAOL,EAAeK,GAAQJ,EAAaI,IAAQ,CAC1D,IAAMxZ,EAAQ,GAAA4B,OAAMgE,EAAe4T,GAArB,KAAA5X,OAA8B2X,EAAO,GAC7ChM,EAAS/E,KAAKkQ,cAAc1Y,QAEnBgF,IAAXuI,GACF6J,EAAK5R,KAAK+H,GAKhB,OAAO6J,wCAGKqC,GACZ,IAAIlM,EAEJ,IAAK/E,KAAKkR,gBAAgBD,GACxB,MAAM,IAAI3O,MAAM,0BAGlB,YAAkC9F,IAA9BwD,KAAKmP,MAAM8B,GACNjR,KAAKmP,MAAM8B,IAGpBlM,EAASwK,GAAM4B,UAAUF,GACzBjR,KAAKmP,MAAM8B,GAAiBlM,EACrBA,kCAGFiH,GACL,IAAMoB,EAAgB,GADX/Q,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGX,QAAAC,EAAAC,EAAsBsP,EAAKkB,SAA3BvQ,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAqC,KAA5B+U,EAA4B3U,EAAAnB,MAC7ByJ,EAAS/E,KAAK8P,UAAUsB,GAEN,cAApBA,EAAUvF,MACZuB,EAAcpQ,KAAdmC,MAAAiO,EAAahW,OAAA+F,EAAA,EAAA/F,CAAS2N,IAEtBqI,EAAcpQ,KAAK+H,IATZ,MAAA9H,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAaX,OAAOyP,EAAKiE,KAAK7C,2CAGH5V,GAAU,IAAA6Z,EACKtT,EAAcvG,GADnB8Z,EAAAla,OAAA+G,EAAA,EAAA/G,CAAAia,EAAA,GACjBE,EADiBD,EAAA,GACPE,EADOF,EAAA,GAGxB,QAAI7V,KAAKF,IAAIgW,EAAUC,GAAY,OAC/BD,GAAYvR,KAAKlJ,MAAMF,YACvB4a,GAAYxR,KAAKlJ,MAAMH,+CAIb,IACG8a,EAAazR,KAAKkP,MAA3BwC,QAER,OAAID,EAAS5S,MAAM,qBApLM,UAsLd4S,EAAS5S,MAAM,uBArLC,QACX,mBCLd8S,GACJ,SAAAA,EAAY3M,GAAU5N,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAA2R,GACpB3R,KAAKgF,QAAUA,EACfhF,KAAKkP,MAAQ,KACblP,KAAK+E,OAAS,KACd/E,KAAK2N,IAAM,MAgIT4B,GAAQ,eA3HZ,SAAAqC,IAAexa,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAA4R,GACb5R,KAAK6R,IAAM,GACX7R,KAAK8R,QAAU,KACf9R,KAAK+R,QAAU,KACf/R,KAAK4E,MAAQ,IAAID,2DAGPnN,GACVwI,KAAKgS,kBACLhS,KAAKiS,IAAIza,GACTwI,KAAKkS,wDAGW,IAAApS,EAAAE,KAChBA,KAAK8R,QAAU,IAAIK,IAEnB/a,OAAOgO,KAAKpF,KAAK6R,KAAKjM,QAAQ,SAAA0J,GAC5BxP,EAAKgS,QAAQM,IAAI9C,iCAIjB9X,GACF,IADY,IAAA0U,EAAAlM,KACLA,KAAK8R,QAAQO,KAAO,GAAG,CACvB7a,IACHA,EAAWJ,OAAA+F,EAAA,EAAA/F,CAAI4I,KAAK8R,SAAS,IAG/B,IACE9R,KAAK+R,QAAU,IAAII,IAAI,CAAC3a,IACJ,IAAIyX,GAAYzX,GACxB8a,SAAS9a,GACrB,MAAO0X,IAETlP,KAAK+R,QAAQnM,QAAQ,SAAApO,GAAQ,OAAI0U,EAAK4F,QAAQS,OAAO/a,KACrDA,EAAW,KAGbwI,KAAK+R,QAAU,KACf/R,KAAK8R,QAAU,uCAGPta,GACR,GAAKwI,KAAKwS,UAAUhb,GAApB,CAIAwI,KAAKyS,cAAcjb,GACnBwI,KAAK8R,QAAQS,OAAO/a,GACpBwI,KAAK+R,QAAQK,IAAI5a,GACjB,IACMuN,EADc,IAAIkK,GAAYzX,GACT8a,SAAS9a,GAEpC,OADAwI,KAAK+R,QAAQQ,OAAO/a,GACbuN,yCAGKvN,GACZ,OAAIA,KAAYwI,KAAK6R,IACZtC,GAAMsC,IAAIra,GAAUuN,OAEpB,yCAIGvN,GACZ,GAAIwI,KAAK+R,QAAQW,IAAIlb,GACnB,MAAM,IAAI8K,MAAM,4DAOlB,IAFA,IAAMqQ,EAAe,IAAIR,IAAInS,KAAK4E,MAAMgO,WAExC3W,EAAA,EAAA4W,EAA+Bzb,OAAO0b,QAAQ9S,KAAK6R,KAAnD5V,EAAA4W,EAAA1W,OAAAF,IAAyD,KAAA8W,EAAAF,EAAA5W,GAAA/E,EAAAE,OAAA+G,EAAA,EAAA/G,CAAA2b,EAAA,GAA/Cvb,EAA+CN,EAAA,GAArCoY,EAAqCpY,EAAA,GAC/C8N,EAAoBsK,EAApBtK,QAASD,EAAWuK,EAAXvK,OAEjB4N,EAAaJ,OAAO/a,GAEhBuN,IAAW/E,KAAK4E,MAAMsL,cAAc1Y,IACtCwI,KAAK4E,MAAMM,gBAAgB1N,EAAUwN,EAASD,GATtC,IAAA1I,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAaZ,QAAAC,EAAAC,EAAqBiW,EAArBhW,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAmC,KAA1B7E,EAA0BiF,EAAAnB,MACjC0E,KAAK4E,MAAMoO,UAAUxb,IAdX,MAAAyF,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,sCAkBJ/E,EAAUwN,GAClB,IAAMsK,EAAS,IAAIqC,GAAO3M,GAE1B,OADAhF,KAAK6R,IAAIra,GAAY8X,EACdA,oCAGC9X,GACR,OAAOA,KAAYwI,KAAK6R,sCAGhBra,GAER,OADAwI,KAAKiT,oBAAoBzb,GAClBwI,KAAK6R,IAAIra,qCAGRA,GACJA,KAAYwI,KAAK6R,aACZ7R,KAAK6R,IAAIra,GAChBwI,KAAK2P,kDAKP3P,KAAK6R,IAAM,GACX7R,KAAK8R,QAAU,KACf9R,KAAK+R,QAAU,KACf/R,KAAK4E,MAAQ,IAAID,+CAGCnN,GAClB,IAAKwI,KAAKwS,UAAUhb,GAClB,MAAM,IAAI8K,MAAM,8BAQPiN,MTtHR,SAASpK,GAAc3N,GAC5B,OAAO,SAACyN,EAAUH,GAChB,IAAMxJ,EAAQwJ,IAAWrM,UAAUjB,GAInC,OAFA+X,GAAM2D,UAAU1b,QAEFgF,IAAVlB,EACK6X,QAAQC,UAIVD,QAAQC,QAAQnO,EAAS,CAC9B1C,KAAM,mBACNvL,QAASQ,MUAR,IAAM6b,GAAoBC,YAAa,uBC5BxC5Y,GAAItD,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,aAAAxD,CAAA,CAAAyD,KAAA,UAAAC,OAAA,uJA0DKyY,OA5Cf,SAAAxc,GAAyF,IAAxEyc,EAAwEzc,EAAxEyc,OAAQhc,EAAgET,EAAhES,SAAUuN,EAAsDhO,EAAtDgO,OAAQ0O,EAA8C1c,EAA9C0c,QAASC,EAAqC3c,EAArC2c,UAAWC,EAA0B5c,EAA1B4c,cAAeC,EAAW7c,EAAX6c,QAe5E,OACExc,OAAAmK,EAAA,EAAAnK,CAACyc,GAAD,CACEvP,IAAKkP,EACLM,YAAU,SACVC,gBAAevc,EACfiD,IAnBa,WACf,IAAIsJ,EAAQ,GAUZ,MARsB,kBAAXgB,IACThB,EAAQ,CACNiQ,WAAY,SACZC,aAAc,OACdC,SAAU,WAIPnQ,EAQAoQ,GACLvS,SAAS,IACT6R,QAASA,EACTC,UAAWA,EACXC,cAAeA,EACfC,QAASA,GAEV7O,ICvCQqP,GAAb,SAAAC,GAgBE,SAAAD,EAAYzU,GAAO,IAAAG,EAAA,OAAA1I,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAoU,IACjBtU,EAAA1I,OAAA6I,EAAA,EAAA7I,CAAA4I,KAAA5I,OAAA8I,EAAA,EAAA9I,CAAAgd,GAAAjU,KAAAH,QACKsU,cAAgBxU,EAAKwU,cAAc1T,KAAnBxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IACrBA,EAAKyU,oBAAsBzU,EAAKyU,oBAAoB3T,KAAzBxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IAC3BA,EAAK0U,cAAgB1U,EAAK0U,cAAc5T,KAAnBxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IACrBA,EAAK2U,gBAAkB3U,EAAK2U,gBAAgB7T,KAArBxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IACvBA,EAAK4U,SAAW/U,EAAM6T,OANL1T,EAhBrB,OAAA1I,OAAAud,EAAA,EAAAvd,CAAAgd,EAAAC,GAAAjd,OAAAwd,EAAA,EAAAxd,CAAAgd,EAAA,EAAA9Q,IAAA,mBAAAhI,MAAA,SAyBmBuZ,GACf,IAAMC,EAAY9U,KAAK0U,SAASvQ,QAAQC,wBAClC2Q,EAAWC,KAAKtF,MAAMsF,KAAKC,UAAUH,IAC3C9U,KAAKL,MAAMuV,iBAAiBH,EAAUF,KA5B1C,CAAAvR,IAAA,gBAAAhI,MAAA,WAgCI0E,KAAKL,MAAMwV,cAAcnV,KAAKL,MAAMnI,YAhCxC,CAAA8L,IAAA,gBAAAhI,MAAA,SAmCgBkF,GACZA,EAAM4U,oBApCV,CAAA9R,IAAA,sBAAAhI,MAAA,SAuCsBkF,GAClBA,EAAM4U,kBACNpV,KAAKkV,kBAAiB,KAzC1B,CAAA5R,IAAA,kBAAAhI,MAAA,SAAAvE,GA4C2B,IAAPuM,EAAOvM,EAAPuM,IACZ,CAAC,SAAU,aAAa0K,SAAS1K,IAClB,GAAKtD,KAAKL,MAAMoF,QAEpB5I,OAAS,GACpB6D,KAAKL,MAAMwF,cAAcnF,KAAKL,MAAMnI,UAId,IAAf8L,EAAInH,QACb6D,KAAKkV,kBAAiB,KAtD5B,CAAA5R,IAAA,SAAAhI,MAAA,WA2DI,OACEN,EAAAC,EAAAC,cAACma,GAAD,CACE7B,OAAQxT,KAAK0U,SACbld,SAAUwI,KAAKL,MAAMnI,SACrBuN,OAAQ/E,KAAKL,MAAMoF,OACnB0O,QAASzT,KAAKsU,cACdX,cAAe3T,KAAKuU,oBACpBX,QAAS5T,KAAKwU,cACdd,UAAW1T,KAAKyU,sBAnExBL,EAAA,CAA4BlS,IAAMC,eA+ElC,IAAME,GAAqB,CAAE8C,iBAAe+P,iBFtErC,SAA0BH,EAAUF,GACzC,OAAO,SAAC5P,EAAUH,GAChB,IAAIwQ,EAAaT,EACb,GACA/P,IAAWvM,OAAO9B,WAAWuO,QAEjC,OAAOmO,QAAQC,QAAQnO,EAAS,CAC9B1C,KAAM,qBACNvL,QAAS,CACPM,oBAAoB,EACpBge,aACAP,iBE2DsDI,cFrFvD,SAAuB3d,GAC5B,OAAO,SAACyN,EAAUH,GAChB,IACME,GADWF,IAAWrM,UAAUjB,IACT,IAAIwN,SAAW,GAE5C,OAAOmO,QAAQC,QAAQnO,EAAS,CAC9B1C,KAAM,kBACNvL,QAAS,CACPQ,WACAwN,iBE8EOxC,eARf,SAAyB1L,EAAO2L,GAC9B,IAAM9I,EAAO7C,EAAM2B,UAAUgK,EAASjL,UAEtC,MAAO,CAAEuN,OADMpL,EAAOA,EAAKoL,OAAS,KAME1C,GAAzBG,CAA6C4R,aChFtD1Z,GAAItD,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,aAAAxD,CAAA,qEAIkB,SAAAuI,GAAK,OAAIA,EAAMnG,MAAMC,OAAOE,KAAKC,QAJnD,4BAKmB,SAAA+F,GAAK,OAAIA,EAAMnG,MAAMC,OAAOE,KAAKC,QALpD,kBASH,SAAS2b,GAATxe,GAA2E,IAAnDgB,EAAmDhB,EAAnDgB,MAAOI,EAA4CpB,EAA5CoB,OAAQsb,EAAoC1c,EAApC0c,QAASE,EAA2B5c,EAA3B4c,cAAe6B,EAAYze,EAAZye,SACpE,OACEpe,OAAAmK,EAAA,EAAAnK,CAACqe,GAAD,CACE3B,YAAU,SACVL,QAASA,EACTE,cAAeA,EACflZ,IAAGrD,OAAAse,GAAA,EAAAte,CAAE,CACHW,QACAI,OAAQA,GAAUA,KAGnBqd,GAaPD,GAAanT,aAAe,CAC1BrK,MnB5C+B,KmBsDlByK,mBAPf,SAAyB1L,EAAO2L,GAAU,IAAAkT,EACXlT,EAASjL,SAASyG,MAAM,KADb2X,EAAAxe,OAAA+G,EAAA,EAAA/G,CAAAue,EAAA,GACjC7d,EADiC8d,EAAA,GACvB1d,EADuB0d,EAAA,GAIxC,MAAO,CAAE7d,MAFKjB,EAAM6B,UAAUhB,UAAUG,GAExBK,OADDrB,EAAM6B,UAAUf,WAAWM,KAI7BsK,CAAyB+S,ICJzBM,eApCb,SAAAA,IAAc,IAAA/V,EAAA,OAAA1I,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAA6V,IACZ/V,EAAA1I,OAAA6I,EAAA,EAAA7I,CAAA4I,KAAA5I,OAAA8I,EAAA,EAAA9I,CAAAye,GAAA1V,KAAAH,QAHF0U,SAAWxS,IAAM0B,YAIf9D,EAAKwU,cAAgBxU,EAAKwU,cAAc1T,KAAnBxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IACrBA,EAAKyU,oBAAsBzU,EAAKyU,oBAAoB3T,KAAzBxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IAHfA,4EAMD,IAAAoM,EAAAlM,KACXX,WAAW,kBAAM6M,EAAKwI,SAASvQ,QAAQ2R,SAAS,2CAIhD9V,KAAK+V,2DAIL/V,KAAK+V,8CAGE,IACCve,EAAawI,KAAKL,MAAlBnI,SAER,OACEwD,EAAAC,EAAAC,cAAC8a,GAAD,CACEvC,QAASzT,KAAKsU,cACdX,cAAe3T,KAAKuU,oBACpB/c,SAAUA,GAEVwD,EAAAC,EAAAC,cAAC+a,GAAD,CACEze,SAAUA,EACVgc,OAAQxT,KAAK0U,mBArCExS,IAAMC,eCEzBO,GAAGtL,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,YAAAxD,CAAA,CAAAyD,KAAA,UAAAC,OAAA,oCAmCMob,OA9Bf,SAAAnf,GAA2C,IAAxBof,EAAwBpf,EAAxBof,UAAWtT,EAAa9L,EAAb8L,UAa5B,OACE7H,EAAAC,EAAAC,cAACkb,GAAD,CACEtT,WAAUqT,GAEVnb,EAAAC,EAAAC,cAACmb,GAAD,CACE/Y,MAAO6Y,IAhBX,IAAInT,MAAMH,EAAU1G,QAAQ8G,KAAK,GAAGC,IAAI,SAACC,EAAGC,GAC1C,IAAM5L,EAAQ,GAAA4B,OAAMyJ,EAAUO,GAAhB,KAAAhK,OAAsB+c,GACpC,OACEnb,EAAAC,EAAAC,cAACob,GAAD,CACEhT,IAAKF,EACL5L,SAAUA,QCuBpB,IAAMV,GAAQ,CACZyf,GAAI,cACJC,QAAS,OACTC,QAAS,CACP7f,QAAS,KACTD,KAAM,KACN2M,IAAK,KACLiO,SAAU,KACVC,SAAU,KACVkF,YAAa,KACbC,YAAY,GAEdC,OAAQ,CACNC,KAAM,CACJC,GAAI,CACFC,WAAc,CACZC,QAAS,CAAC,gBAAiB,sBAC3Bpc,OAAQ,iBAIdqc,YAAa,CACXC,OAAQ,CACNC,IApCR,SAAyBC,GACvB,OAAKA,EAAIV,YAEF,IAAIvD,QAAQ,SAAAC,GACjB/T,WAAW,WACT,IAAMkX,EAAE,mBAAAnd,OAAsBge,EAAIV,YAA1B,MACF/c,EAAOuH,SAASmW,cAAcd,GAChC5c,GAAQA,EAAKmc,QACjB1C,GAAQ,IACP,KAR0BD,QAAQC,SAAQ,IAoCzCkE,OAAQ,CACNN,QAASO,YAAO,CAAEZ,WAAY,SAACS,EAAK5W,GAAN,OAAgBA,EAAM/I,QACpDmD,OAAQ,YAOZoc,GAAU,CACdA,QAAS,CACPQ,cAAeD,YAAO,SAACH,EAADlgB,GAA4B,IAApBoM,EAAoBpM,EAApBoM,IAAoB6M,EACnBpS,EADmB7G,EAAfM,UAAe4Y,EAAAhZ,OAAA+G,EAAA,EAAA/G,CAAA+Y,EAAA,GAEhD,MAAO,CAAEoB,SAFuCnB,EAAA,GAE7BoB,SAF6BpB,EAAA,GAEnB9M,SAE/BmU,mBAAoBF,YAAO,CACzBb,YAAa,SAACU,GACZ,OA/ER,SAAArgB,GAAuE,IAA1CJ,EAA0CI,EAA1CJ,KAAMC,EAAoCG,EAApCH,QAAS4a,EAA2Bza,EAA3Bya,SAAUD,EAAiBxa,EAAjBwa,SACpD,OADqExa,EAAPuM,KAE5D,IAAK,UACHkO,EAAW/V,KAAKD,IAAI,EAAGgW,EAAW,GAClC,MACF,IAAK,aACHD,EAAW9V,KAAKF,IAAI3E,EAAU,EAAG2a,EAAW,GAC5C,MACF,IAAK,YACL,IAAK,QACHC,EAAW/V,KAAKF,IAAI5E,EAAO,EAAG6a,EAAW,GACzC,MACF,IAAK,YACHD,EAAW9V,KAAKD,IAAI,EAAG+V,EAAW,GAClC,MACF,QACE,OAAO,KAGX,IAAMzZ,EAAWsF,EAAemU,GAC1BrZ,EAAW,IAAMsZ,EAAW,GAElC,SAAApY,OAAUtB,EAAV,KAAAsB,OAAsBlB,GAyDTwf,CAAkBN,QAuBlBO,OAjBf,SAA+BhhB,EAAMC,GACnC,IAAMghB,EAAUxgB,OAAAC,EAAA,EAAAD,CAAA,GACXN,GAAM2f,QADK,CAEd7f,UACAD,SAGF,OAAOkhB,YAAQ/gB,GAAOkgB,GAASY,ICrF3BE,GAAI1gB,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,aAAAxD,CAAA,6FAKgB,SAAAuI,GAAK,OAAIA,EAAMnG,MAAMC,OAAOE,KAAKE,YALjD,0BAMiB,SAAA8F,GAAK,OAAIA,EAAMnG,MAAMC,OAAOE,KAAKE,YANlD,2BAOkB,SAAA8F,GAAK,OAAIA,EAAMnG,MAAMC,OAAOE,KAAKE,YAPnD,4BAQmB,SAAA8F,GAAK,OAAIA,EAAMnG,MAAMC,OAAOE,KAAKE,YARpD,8BAeGke,GAAb,SAAA1D,GAME,SAAA0D,EAAYpY,GAAO,IAAAG,EAAA,OAAA1I,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAA+X,IACjBjY,EAAA1I,OAAA6I,EAAA,EAAA7I,CAAA4I,KAAA5I,OAAA8I,EAAA,EAAA9I,CAAA2gB,GAAA5X,KAAAH,KAAML,KAMRqY,mBAAqBL,GAAsB7X,EAAKH,MAAMhJ,KAAMmJ,EAAKH,MAAM/I,SAPpDkJ,EAQnBmY,aAAeC,YAAUpY,EAAKkY,oBAN5BlY,EAAKqY,mBAAqBrY,EAAKqY,mBAAmBvX,KAAxBxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IAC1BA,EAAKsY,qBAAuBtY,EAAKsY,qBAAqBxX,KAA1BxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IAC5BA,EAAK+C,UAAYnH,EAAeiE,EAAM/I,SAJrBkJ,EANrB,OAAA1I,OAAAud,EAAA,EAAAvd,CAAA2gB,EAAA1D,GAAAjd,OAAAwd,EAAA,EAAAxd,CAAA2gB,EAAA,EAAAzU,IAAA,oBAAAhI,MAAA,WAiBI0E,KAAKiY,aAAaI,UAjBtB,CAAA/U,IAAA,uBAAAhI,MAAA,WAqBI0E,KAAKiY,aAAaK,SArBtB,CAAAhV,IAAA,qBAAAhI,MAAA,SAwBqBkF,GACjBA,EAAM4U,oBAzBV,CAAA9R,IAAA,uBAAAhI,MAAA,SA4BuBkF,GACnBA,EAAM4U,kBACe5U,EAAM5F,OAAO2d,QAA1B/gB,UAGNwI,KAAKwY,UAAUhY,EAAM8C,IAAK9C,EAAM5F,OAAO2d,QAAQ/gB,YAjCrD,CAAA8L,IAAA,YAAAhI,MAAA,SAqCYgI,EAAK9L,GACbwI,KAAKiY,aAAaQ,KAAK,CAAElW,KAAM,aAAce,MAAK9L,eAtCtD,CAAA8L,IAAA,qBAAAhI,MAAA,SAyCqB8H,GACjB,OACEpI,EAAAC,EAAAC,cAACwd,GAAD,CACEpV,IAAKF,EACLzM,KAAMqJ,KAAKL,MAAMhJ,KACjBkM,UAAW7C,KAAK6C,cA9CxB,CAAAS,IAAA,iBAAAhI,MAAA,SAmDiB6a,GACb,OACEnb,EAAAC,EAAAC,cAACyd,GAAD,CACErV,IAAK6S,EACLA,UAAWA,EACXtT,UAAW7C,KAAK6C,cAxDxB,CAAAS,IAAA,aAAAhI,MAAA,WA6De,IAAA4Q,EAAAlM,KACX,OAAO,IAAIgD,MAAMhD,KAAKL,MAAMhJ,KAAO,GAAGsM,KAAK,GAAGC,IAAI,SAACC,EAAGC,GACpD,OAAU,IAANA,EACK8I,EAAK0M,mBAAmBxV,GAExB8I,EAAK2M,eAAezV,OAlEnC,CAAAE,IAAA,SAAAhI,MAAA,WAwEI,OACEN,EAAAC,EAAAC,cAAC4c,GAAD,CACEgB,aAAW,MACXrF,QAASzT,KAAKmY,mBACdzE,UAAW1T,KAAKoY,sBAEfpY,KAAK+Y,kBA9EdhB,EAAA,CAA2B7V,IAAMC,eAyFlBK,eALS,SAAC1L,GAAU,IAAAkiB,EACPliB,EAAMyB,OAChC,MAAO,CAAE5B,KAFwBqiB,EACzBriB,KACOC,QAFkBoiB,EACnBpiB,UAID4L,CAAyBuV,ICjH3BkB,GAAe/W,IAAMgX,gBCO5Bxe,GAAItD,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,YAAAxD,CAAA,cACM,SAAAuI,GAAK,OAAIA,EAAMnG,MAAMC,OAAOM,SAASC,QAD3C,sCAGc,SAAA2F,GAAK,OAAIA,EAAMnG,MAAMC,OAAOc,QAH1C,qBAIY,SAAAoF,GAAK,OAAIA,EAAMnG,MAAMC,OAAOM,SAASE,QAJjD,iCASJkf,GAAG/hB,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,YAAAxD,CAAA,CAAAyD,KAAA,SAAAC,OAAA,uDAMHse,GAAQhiB,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,YAAAxD,CAAA,CAAAyD,KAAA,UAAAC,OAAA,qCAKRue,GAACjiB,OAAAuD,EAAA,EAAAvD,CAAA,KAAAwD,OAAA,YAAAxD,CAAA,CAAAyD,KAAA,SAAAC,OAAA,oCAKDwe,GAAEliB,OAAAuD,EAAA,EAAAvD,CAAA,MAAAwD,OAAA,YAAAxD,CAAA,iCAEkB,SAAAuI,GAAK,OAAIA,EAAMnG,MAAMC,OAAOM,SAASE,QAFvD,sDAKFsf,wLASS,IAEPC,EAFOlY,EACqBtB,KAAKL,MAA7B8Z,EADGnY,EACHmY,SAAUC,EADPpY,EACOoY,UADPrd,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIX,QAAAC,EAAAC,EAAkB+c,EAAlB9c,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA4B,KAAnBsd,EAAmBld,EAAAnB,MAC1B,KAAIoe,GAAaC,EAAMC,WAAa,GAGlC,MAFAJ,EAAYG,GANL,MAAA1c,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAYX,OAAIid,GAAoC,OAAvBA,EAAUK,SAA4BL,EACnDA,GAAaE,EAAY,EAAIF,EAAUK,SAAmBL,EACvD,uCAGCG,GACR,IAAMrW,EAAMqW,EAAM3Q,OAAOD,cACzB,OAAOG,GAAa5F,oCAIpB,IAAMqW,EAAQ3Z,KAAK8Z,aACXC,EAAc/Z,KAAKyW,QAAnBsD,UACR,IAAKA,EAAa,OAAO,KAHlB,IAKH9Q,EADY+Q,EAAcD,EAAtB9V,OAAawJ,EAASsM,EAATtM,KAGrB,OAAKkM,GACL1Q,EAASjJ,KAAKia,UAAUN,GAGtBviB,OAAAmK,EAAA,EAAAnK,CAAC8iB,GAAD,CACEzf,IAAGrD,OAAAse,GAAA,EAAAte,CAAE,CAAE4iB,MAAKvM,UAEZrW,OAAAmK,EAAA,EAAAnK,CAAC+hB,GAAD,CACE1e,IAAG0f,IAIFlR,EAAO5C,YAEVjP,OAAAmK,EAAA,EAAAnK,CAACkiB,GAAD,MACAliB,OAAAmK,EAAA,EAAAnK,CAACgiB,GAAD,gBACAhiB,OAAAmK,EAAA,EAAAnK,CAAC+hB,GAAD,KAAMlQ,EAAO3C,SACblP,OAAAmK,EAAA,EAAAnK,CAACgiB,GAAD,gBACAhiB,OAAAmK,EAAA,EAAAnK,CAACiiB,GAAD,KAAIpQ,EAAO1C,WAlBM,YAtCKrE,IAAMC,eAA9BoX,GAEGa,YAAcnB,GAiERM,8BClGTc,GAAEjjB,OAAAuD,EAAA,EAAAvD,CAAA,MAAAwD,OAAA,YAAAxD,CAAA,CAAAyD,KAAA,UAAAC,OAAA,kBAIR,SAASwf,GAATvjB,GAA+D,IAAvCwjB,EAAuCxjB,EAAvCwjB,KAAM/U,EAAiCzO,EAAjCyO,MAAOgV,EAA0BzjB,EAA1ByjB,SAAUC,EAAgB1jB,EAAhB0jB,aAC7C,OACErjB,OAAAmK,EAAA,EAAAnK,CAACijB,GAAD,CACEzY,SAAU,EACV6Y,aAAc,kBAAMA,EAAajV,KAEhCgV,GAAYD,EAAKtgB,OAASsgB,EAAKtgB,OAASsgB,EAAKnT,MAepDkT,GAAalY,aAAe,CAC1BqY,aA5BW,cA+BEH,UC9BTI,GAAEtjB,OAAAuD,EAAA,EAAAvD,CAAA,MAAAwD,OAAA,YAAAxD,CAAA,CAAAyD,KAAA,UAAAC,OAAA,uDAOF6f,6LAac,IAAA7a,EAAAE,KAChB,OAAOA,KAAKL,MAAMib,MACf1X,IAAI,SAACqX,EAAM/U,GAAP,OACHxK,EAAAC,EAAAC,cAAC2f,GAAD,CACEvX,IAAKkC,EACLA,MAAOA,EACP+U,KAAMA,EAAKA,KACXxW,MAAK3M,OAAAC,EAAA,EAAAD,CAAA,GAAM0I,EAAKH,MAAM7E,OAAOggB,IAC7BN,SAAUD,EAAKC,SACfC,aAAc3a,EAAKH,MAAM8a,kDAKxB,IAAAnZ,EAC8BtB,KAAKL,MAAlCib,EADDtZ,EACCsZ,MAAOZ,EADR1Y,EACQ0Y,IAAKvM,EADbnM,EACamM,KAAM3S,EADnBwG,EACmBxG,OAE1B,OAAqB,IAAjB8f,EAAMze,OAAuB,KAG/BnB,EAAAC,EAAAC,cAACwf,GAAD,CACE9Y,UAAW,EACXmC,MAAK3M,OAAAC,EAAA,EAAAD,CAAA,CAAI4iB,MAAKvM,QAAS3S,EAAOigB,KAE7B/a,KAAKgb,0BArCgB9Y,IAAMC,eAA9BwY,GAEGM,WAAa,CAClBR,aAAcS,KAAU9M,KACxBwM,MAAOM,KAAUC,MAAMC,WACvBpB,IAAKkB,KAAU9S,OAAOgT,WACtB3N,KAAMyN,KAAU9S,OAAOgT,WACvBtgB,OAAQogB,KAAUG,MAAM,CACtBN,GAAIG,KAAUI,OACdR,GAAII,KAAUI,UAkCLX,UC7CTY,GAAMnkB,OAAAuD,EAAA,EAAAvD,CAAA,UAAAwD,OAAA,aAAAxD,CAAA,CAAAyD,KAAA,UAAAC,OAAA,cAIN0gB,GAAa,CAAA3gB,KAAA,SAAAC,OAAA,oBAIb2gB,GAAYrkB,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,aAAAxD,CACdokB,GADc,eAEF,SAAA7b,GAAK,OAAIA,EAAMnG,MAAMC,OAAOM,SAASC,QAFnC,KAKZ0hB,GAActkB,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,aAAAxD,CAChBokB,GADgB,eAEJ,SAAA7b,GAAK,OAAIA,EAAMnG,MAAMC,OAAOM,SAASE,QAFjC,KAKdkf,GAAG/hB,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,aAAAxD,CAAA,CAAAyD,KAAA,SAAAC,OAAA,uDAMHse,GAAQhiB,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,aAAAxD,CAAA,CAAAyD,KAAA,UAAAC,OAAA,oBAIR6gB,eAiBJ,SAAAA,IAAc,IAAA7b,EAAA,OAAA1I,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAA2b,IACZ7b,EAAA1I,OAAA6I,EAAA,EAAA7I,CAAA4I,KAAA5I,OAAA8I,EAAA,EAAA9I,CAAAukB,GAAAxb,KAAAH,QARFlJ,MAAQ,CACN8kB,UAAW,GACXC,UAAW,EACXC,SAAU,KACVC,WAAW,GAKXjc,EAAKwU,cAAgBxU,EAAKwU,cAAc1T,KAAnBxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IACrBA,EAAKqL,SAAWrL,EAAKqL,SAASvK,KAAdxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IAHJA,mFAMM,IAAAoM,EAAAlM,KAClBA,KAAKU,SAAS,CAAEmb,UAAW,GAAK,WAC9B3P,EAAK8P,+DAIaC,EAAWC,GAC/B,OAAOlc,KAAKlJ,MAAM8kB,YAAcM,EAAUN,qDAGzBO,EAAWC,GAC5Bpc,KAAKqc,kBAAkBD,GACvBpc,KAAKsc,gBAAgBH,GACrBnc,KAAKuc,4DAILvc,KAAKyW,QAAQ+F,0BAAyB,2CAGxBL,GAAW,IAAA/P,EAAApM,KACrBmc,EAAUlU,QAAUjI,KAAKL,MAAMsI,OAEnCjI,KAAKU,SAAS,CAAEmb,UAAW,GAAK,WAC9BzP,EAAK4P,2DAISI,GAAW,IACnBN,EAAa9b,KAAKyW,QAAlBqF,SAEJM,EAAUN,WAAaA,IACzB9b,KAAKU,SAAS,CAAEob,aAChB9b,KAAKyc,iBAAiBX,yCAIb,IACHA,EAAa9b,KAAKyW,QAAlBqF,SACJ9b,KAAKlJ,MAAMglB,WAAaA,GACxB,CAAC,QAAS,OAAO9N,SAAS8N,EAASxY,MAAQtD,KAAKlJ,MAAMilB,WACxD/b,KAAK0c,8DAKP,IAAMC,EAAiB3c,KAAKyW,QAAQmG,WAC5B3U,EAAUjI,KAAKL,MAAfsI,MACAe,EAAWhJ,KAAKlJ,MAAM8kB,UAAU5b,KAAKlJ,MAAM+kB,WAA3C7S,OACF6T,EAAkB5U,EAAMzC,MAAQyC,EAAMvO,KAAKyC,OAC3C2gB,EAAYH,EAAe7T,MAAM,EAAGb,EAAMzC,OAC1CuX,EAAaJ,EAAe7T,MAAM+T,GAClCG,EAAa,GAAA5jB,OAAM0jB,GAAN1jB,OAAkB4P,EAAlB,KAAA5P,OAA4B2jB,GACzCrD,EAAYoD,EAAU3gB,OAAS6M,EAAO7M,OAAS,EACrD6D,KAAKyW,QAAQwG,cAAcD,EAAetD,0CAG7B,IAgBTmC,EAhBSvP,EAAAtM,KAEPtG,EADYsG,KAAKL,MAAfsI,MACWvO,KAAKqP,cAClB6S,EAAYxkB,OACfgO,KAAK8D,IACLgU,OAAO,SAAAlU,GAAM,OAAIA,EAAOmU,WAAWzjB,KACnC0jB,OACAla,IAAI,SAAA8F,GAAM,MAAK,CACduR,KAAM,CACJnT,KAAMkF,EAAK+Q,SAASrU,GACpB/O,OAAQqS,EAAKgR,WAAWtU,IAE1BwR,UAAU,EACVxR,YAEA+S,GAAY,EAGhBF,EAAYpgB,KAAKD,IAAIC,KAAKF,IAAIqgB,EAAUzf,OAAS,EAAG6D,KAAKlJ,MAAM+kB,WAAY,GAEvED,EAAUzf,OAAS,IACrByf,EAAUC,GAAWrB,SAAWuB,GAAY,GAG9C/b,KAAKyW,QAAQ+F,yBAAyBT,GACtC/b,KAAKU,SAAS,CAAEkb,YAAWC,YAAWE,uDAGvBD,GAAU,IAAApP,EAAA1M,KACrB6b,EAAY7b,KAAKlJ,MAAM+kB,UAE3B,OAAQC,EAASxY,KACf,IAAK,UACDuY,EAAY7b,KAAKlJ,MAAM+kB,UAAY,EACrC,MACF,IAAK,YACDA,EAAY7b,KAAKlJ,MAAM+kB,UAAY,EAIzC7b,KAAKU,SAAS,CAAEmb,aAAa,WAC3BnP,EAAKsP,kDAIAH,GAAW,IAAA/O,EAAA9M,KAClBA,KAAKU,SAAS,CAAEmb,aAAa,WAC3B/O,EAAKkP,kDAIAhT,GACP,OACE5R,OAAAmK,EAAA,EAAAnK,CAACqkB,GAAD,KACErkB,OAAAmK,EAAA,EAAAnK,CAACmmB,GAAD,KACGvU,uCAMEA,GACT,OACE5R,OAAAmK,EAAA,EAAAnK,CAACskB,GAAD,KACEtkB,OAAAmK,EAAA,EAAAnK,CAACmmB,GAAD,KACGvU,GAEH5R,OAAAmK,EAAA,EAAAnK,CAAComB,GAAD,KACGtU,GAAaF,GAAQzC,kDAMd,IACN/M,EAAUwG,KAAKL,MAAfnG,MAER,MAAO,CACLuhB,GAAI,CACF0C,UAAW,EACXC,UAAS,WAAAtkB,OAAaI,EAAMC,OAAOc,QACnCX,OAAM,aAAAR,OAAeI,EAAMC,OAAOM,SAASE,QAC3ClC,MAAO,8CAMXiI,KAAK0c,oDAGE,IAAAiB,EAC0B3d,KAAKlJ,MAA9B8kB,EADD+B,EACC/B,UAAWG,EADZ4B,EACY5B,UACXhC,EAAc/Z,KAAKyW,QAAnBsD,UAER,OACE3iB,OAAAmK,EAAA,EAAAnK,CAACmkB,GAAD,CACEqC,KAAM7B,EACNtI,QAASzT,KAAKsU,eAEdld,OAAAmK,EAAA,EAAAnK,CAACymB,GAAD,CACEjD,MAAOgB,EACP5B,IAAKve,KAAKqiB,MAAM/D,EAAU9V,QAC1BwJ,KAAMhS,KAAKqiB,MAAM/D,EAAUtM,MAC3B3S,OAAQkF,KAAK+d,gBACbtD,aAAcza,KAAKmL,mBAzLFjJ,IAAM8b,WAA3BrC,GAEGvB,YAAcnB,GA8LRgF,mBAAUtC,ICjOnBuC,8MAWJpnB,MAAQ,CACN2iB,SAAU,uFAIVzZ,KAAKme,yDAGYhC,GACbA,EAAUnU,SAAWhI,KAAKL,MAAMqI,QAClChI,KAAKme,oDAKP,IAAMC,EAAQ,GACR3E,EAAW,GAFLpd,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIZ,QAAAC,EAAAC,EAAkBsD,KAAKL,MAAMqI,OAA7BrL,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAqC,KAA5B4L,EAA4BxL,EAAAnB,MACnC,GAAI2M,EAAM1F,OAAS2F,GAAEI,SAAU,CAC7B,IAAMqR,EAAQ,CAAE3Q,OAAQf,EAAMvO,KAAMkgB,WAAY3R,EAAMzC,MAAOqU,SAAU,MACvEuE,EAAMphB,KAAK2c,GACXF,EAASzc,KAAK2c,QACT,GAAI1R,EAAM1F,OAAS2F,GAAE4B,OAC1BsU,EAAMphB,KAAK,UACN,GAAIiL,EAAM1F,OAAS2F,GAAE6B,OAAQ,CAElC,GADAqU,EAAMC,MACFD,EAAMjiB,OAAS,GAAiC,MAA5BiiB,EAAMA,EAAMjiB,OAAS,GAC7BiiB,EAAMC,MACdxE,SAAW5R,EAAMzC,MAAQ,IAfzB,MAAAvI,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAoBZkd,EAAS2D,KAAK,SAACniB,EAAGqjB,GAAJ,OAAUrjB,EAAE2e,WAAa0E,EAAE1E,aACzC5Z,KAAKU,SAAS,CAAE+Y,uDAGAzR,EAAQ0R,GACxB,IAAIlU,EAEJ,IAAKA,EAAQ,EAAGA,EAAQwC,EAAO7L,OAAQqJ,IAAS,CAC9C,IAAMyC,EAAQD,EAAOxC,GACfqU,EAAW5R,EAAMzC,MAAQyC,EAAMvO,KAAKyC,OAE1C,GAAIud,EAAYzR,EAAMzC,OAASkU,GAAaG,EAC1C,MAIJ,OAAOrU,6CAGU,IAAAlE,EACatB,KAAKL,MAA3BqI,EADS1G,EACT0G,OAAQ0R,EADCpY,EACDoY,UACVlU,EAAQxF,KAAKue,kBAAkBvW,EAAQ0R,GAI7C,MAAO,CAHalU,EAAQ,GAAKwC,EAAOxC,EAAQ,GAC9BwC,EAAOxC,GACNA,EAAQwC,EAAO7L,OAAS,GAAK6L,EAAOxC,EAAQ,8CAI/C,IAAAgZ,EAC+Bxe,KAAKye,mBADpCC,EAAAtnB,OAAA+G,EAAA,EAAA/G,CAAAonB,EAAA,GACRG,EADQD,EAAA,GACKE,EADLF,EAAA,GACgBG,EADhBH,EAAA,GAGhB,GAAI1e,KAAKL,MAAMqI,OAAO7L,OAAS,EAAK,OAAO,KAE3C,IAAM2iB,EACJH,GACGC,GACAC,GACyB,aAAzBF,EAAYpZ,UACZ,CAAC2C,GAAES,QAAST,GAAEI,UAAU0F,SAAS4Q,EAAUrc,OAC3Csc,EAAWtc,OAAS2F,GAAE6B,OAGrBgV,EACJJ,GACGC,IACCC,GACD,CAAC3W,GAAES,QAAST,GAAEI,UAAU0F,SAAS4Q,EAAUrc,MAGhD,OAAIuc,GAAWC,EAEX/jB,EAAAC,EAAAC,cAAC8jB,GAAD,CACI/W,MAAO2W,SAHf,mCAUA,IAAMK,EAAuBjf,KAAKkf,kBAElC,OAAID,GAIAjkB,EAAAC,EAAAC,cAACikB,GAAD,CACEzF,UAAW1Z,KAAKL,MAAM+Z,UACtBD,SAAUzZ,KAAKlJ,MAAM2iB,kBAhHLvX,IAAMC,eAA1B+b,GAOG9b,aAAe,CACpBsX,UAAW,GA+GAwE,UC5HFkB,GAAKhoB,OAAAuD,EAAA,EAAAvD,CAAA,SAAAwD,OAAA,YAAAxD,CAAA,wFAIM,SAAAuI,GAAK,OAAIA,EAAMnG,MAAMC,OAAOc,QAJlC,uGCQZ6kB,GAAQhoB,OAAAuD,EAAA,EAAAvD,CAAOioB,GAAP,CAAAzkB,OAAA,YAAAxD,CAAH,CAAAyD,KAAA,UAAAC,OAAA,2DAiDIwkB,8MAnCbC,SAAWrd,IAAM0B,+FAGf5D,KAAKwf,2DAGYrD,EAAWC,GAC5Bpc,KAAKwf,wDAGS,IACNC,EAAczf,KAAKL,MAAnB8f,UACFC,EAAU1f,KAAKuf,SAASpb,QACxBwb,EAAYD,EAAQE,YAEpB7nB,EAAQ4nB,EADKD,EAAQtb,wBACUrM,MACjC0D,KAAKD,IAAIikB,EAAWE,EAhCA,IAiCpBF,EAEJzf,KAAKL,MAAM6f,cAAcznB,oCAIzB,OACEX,OAAAmK,EAAA,EAAAnK,CAACyoB,GAAD,CACEvb,IAAKtE,KAAKuf,SACVO,aAAc9f,KAAKL,MAAMrE,MACzBb,IAAGrD,OAAAse,GAAA,EAAAte,CAAE,CACHW,MAAOiI,KAAKL,MAAM8f,UA5CA,cAQFvd,IAAMC,eCV1BzH,GAAItD,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,aAAAxD,CAAA,CAAAyD,KAAA,UAAAC,OAAA,oBAqBKilB,OAjBf,SAAAhpB,GAAyD,IAAtCijB,EAAsCjjB,EAAtCijB,IAAKvM,EAAiC1W,EAAjC0W,KAAM1V,EAA2BhB,EAA3BgB,MAAOI,EAAoBpB,EAApBoB,OAAQqd,EAAYze,EAAZye,SAC3C,OACEpe,OAAAmK,EAAA,EAAAnK,CAAC4oB,GAAD,CACEvlB,IAAGrD,OAAAse,GAAA,EAAAte,CAAE,CAAE4iB,MAAKvM,OAAM1V,QAAOI,YAExBqd,IC0BQyK,cAzCb,SAAAA,EAAYC,GAAY9oB,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAigB,GACtBjgB,KAAKmgB,EAAID,oDAGL,IACI5c,EAAQtD,KAAKmgB,EAAErpB,MAAMglB,SAArBxY,IAEJtD,KAAKmgB,EAAErpB,MAAMspB,sBACfpgB,KAAKqgB,aAAa/c,GAElBtD,KAAKsgB,QAAQhd,wCAIJA,GACX,OAAQA,GACN,IAAK,SACHtD,KAAKmgB,EAAExgB,MAAM0T,oBACb,MACF,IAAK,YACL,IAAK,aACHrT,KAAKmgB,EAAEzf,SAAS,CAAEgZ,UAAW1Z,KAAKuf,SAASpb,QAAQoc,gDAIjDjd,GACN,OAAQA,GACN,IAAK,SACHtD,KAAKmgB,EAAExgB,MAAM0T,oBACb,MACF,IAAK,QACHrT,KAAKmgB,EAAEK,eACPxgB,KAAKmgB,EAAExgB,MAAM0T,oBACb,MACF,IAAK,YACL,IAAK,aACHrT,KAAKmgB,EAAEzf,SAAS,CAAEgZ,UAAW1Z,KAAKmgB,EAAEZ,SAASpb,QAAQoc,yBCyB9CE,cA1Db,SAAAA,EAAYP,GAAY9oB,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAygB,GACtBzgB,KAAKmgB,EAAID,oDAGL,IAGAQ,EAFIpd,EAAQtD,KAAKmgB,EAAErpB,MAAMglB,SAArBxY,IACA9L,EAAawI,KAAKmgB,EAAExgB,MAApBnI,SAINkpB,EADE1gB,KAAKmgB,EAAErpB,MAAMspB,sBACHpgB,KAAK2gB,iBAAiBrd,EAAK9L,GAE3BwI,KAAK4gB,YAAYtd,EAAK9L,GAGpCwI,KAAK6gB,aAAaH,4CAGHpd,EAAK9L,GACpB,GAAY,WAAR8L,EACF,6CAAAlK,OAA8C5B,EAA9C,0CAIQ8L,EAAK9L,GACf,OAAQ8L,GACN,IAAK,MACH,6CAAAlK,OAA8C5B,EAA9C,MACF,IAAK,QACH,OAAOwI,KAAK8gB,aAAatpB,GAC3B,IAAK,SACH,6CAAA4B,OAA8C5B,EAA9C,4CAMOA,GAAU,IAAA2Y,EACQpS,EAAcvG,GADtB4Y,EAAAhZ,OAAA+G,EAAA,EAAA/G,CAAA+Y,EAAA,GACdoB,EADcnB,EAAA,GACJoB,EADIpB,EAAA,GAEf2Q,EAAetlB,KAAKF,IAAIyE,KAAKmgB,EAAExgB,MAAMhJ,KAAO,EAAG6a,EAAW,GAC1D1Z,EAAWsF,EAAemU,GAC1BrZ,EAAW,IAAM6oB,EAAe,GAChCrK,EAAW,GAAAtd,OAAMtB,EAAN,KAAAsB,OAAkBlB,GAEnC,6CAAAkB,OAA8Csd,EAA9C,2CAGWH,GACX,GAAKA,EAAL,CAEA,IAAMyK,EAAK9f,SAASmW,cAAcd,GAE9BrV,SAAS+f,gBAAkBD,GAC7BA,EAAGlL,kBCHMoL,cAlDb,SAAAA,EAAYhB,GAAY9oB,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAkhB,GACtBlhB,KAAKmgB,EAAID,oDAGL,IAGAiB,EAFI3pB,EAAawI,KAAKmgB,EAAExgB,MAApBnI,SACAolB,EAAe5c,KAAKmgB,EAAErpB,MAAtB8lB,WAGJ5c,KAAK0L,aAAakR,GACpB5c,KAAKmgB,EAAExgB,MAAMwF,cAAc3N,IAK3B2pB,EADEnhB,KAAK6K,UAAU+R,GACL5c,KAAKohB,cAAcxE,GAEnBA,EAGd5c,KAAKmgB,EAAExgB,MAAM0hB,YAAY7pB,EAAU2pB,sCAG3BznB,GACR,OAAOA,EAAKyC,OAAS,GAAiB,MAAZzC,EAAK,wCAGpBA,GACX,OAAuB,IAAhBA,EAAKyC,QAAgByC,QAAQlF,EAAKmF,MAAM,gDAGnCvD,GAIZ,OAHc,IAAIgP,GAAMhP,GACHmU,YAGlBvM,IAAI,SAAA+E,GACH,OAAQA,EAAM1F,MACZ,KAAK2F,GAAEI,SACL,OAAOL,EAAMvO,KAAKqP,cACpB,KAAKb,GAAEC,OACL,OAAOF,EAAM3M,MACf,QACE,OAAO2M,EAAMvO,QAGlBoE,KAAK,aCjCCwjB,GAAb,SAAAjN,GAgBE,SAAAiN,IAAc,IAAAxhB,EAAA,OAAA1I,OAAA2I,EAAA,EAAA3I,CAAA4I,KAAAshB,IACZxhB,EAAA1I,OAAA6I,EAAA,EAAA7I,CAAA4I,KAAA5I,OAAA8I,EAAA,EAAA9I,CAAAkqB,GAAAnhB,KAAAH,QAYFlJ,MAAQ,CACNkR,OAAQ,GACRoY,uBAAuB,EACvBxD,WAAY,GACZd,SAAU,CAAExY,IAAK,IACjBoW,UAAW,EACX3hB,MAAO,MAnBK+H,EAsBdyf,SAAWrd,IAAM0B,YApBf9D,EAAK2U,gBAAkB3U,EAAK2U,gBAAgB7T,KAArBxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IACvBA,EAAKyhB,aAAezhB,EAAKyhB,aAAa3gB,KAAlBxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IACpBA,EAAK0hB,eAAiB1hB,EAAK0hB,eAAe5gB,KAApBxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IACtBA,EAAK0c,yBAA2B1c,EAAK0c,yBAAyB5b,KAA9BxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IAChCA,EAAKmd,cAAgBnd,EAAKmd,cAAcrc,KAAnBxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IACrBA,EAAK0f,cAAgB1f,EAAK0f,cAAc5e,KAAnBxJ,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IACrBA,EAAK2hB,gBAAkB,IAAIxB,GAAJ7oB,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IACvBA,EAAK4hB,gBAAkB,IAAIjB,GAAJrpB,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IACvBA,EAAK6hB,gBAAkB,IAAIT,GAAJ9pB,OAAAyJ,EAAA,EAAAzJ,CAAA0I,IAVXA,EAhBhB,OAAA1I,OAAAud,EAAA,EAAAvd,CAAAkqB,EAAAjN,GAAAjd,OAAAwd,EAAA,EAAAxd,CAAAkqB,EAAA,EAAAhe,IAAA,oBAAAhI,MAAA,WAyCI0E,KAAK4hB,gBACL5hB,KAAKid,cAAcjd,KAAKL,MAAM2V,cA1ClC,CAAAhS,IAAA,qBAAAhI,MAAA,SA6CqB6gB,EAAWC,GACxBA,EAAUN,WAAa9b,KAAKlJ,MAAMglB,WACpC9b,KAAK0hB,gBAAgBG,MACrB7hB,KAAKyhB,gBAAgBI,OAGnBzF,EAAUQ,aAAe5c,KAAKlJ,MAAM8lB,YACtC5c,KAAK8hB,uBApDX,CAAAxe,IAAA,gBAAAhI,MAAA,SAwDgBvD,GACRiI,KAAKlJ,MAAMiB,QAAUA,GACvBiI,KAAKU,SAAS,CAAE3I,YA1DtB,CAAAuL,IAAA,qBAAAhI,MAAA,WA8DuB,IACXshB,EAAe5c,KAAKlJ,MAApB8lB,WAEF5U,EADQ,IAAIsC,GAAMsS,GACHnN,YACrBzP,KAAKU,SAAS,CAAEsH,aAlEpB,CAAA1E,IAAA,gBAAAhI,MAAA,WAsEI,IAAMokB,EAAU1f,KAAKuf,SAASpb,QAE9B9E,WAAW,WACTqgB,EAAQ5J,QACR4J,EAAQqC,eAAiBrC,EAAQpkB,MAAMa,QACtC,KA3EP,CAAAmH,IAAA,2BAAAhI,MAAA,SA8E2B8kB,GACvBpgB,KAAKU,SAAS,CAAE0f,4BA/EpB,CAAA9c,IAAA,gBAAAhI,MAAA,SAkFgBshB,EAAYlD,GACxB,IAAMgG,EAAU1f,KAAKuf,SAASpb,QAE9BnE,KAAKU,SAAS,CAAEkc,aAAYlD,UAAWkD,EAAWzgB,QAAU,WAC1DujB,EAAQ5J,QACR4J,EAAQqC,eAAiBrI,EACzBgG,EAAQa,aAAe7G,MAxF7B,CAAApW,IAAA,iBAAAhI,MAAA,SA4FiBkF,GAAO,IACFlF,EAAYkF,EAAtB5F,OAAUU,MACZoe,EAAYlZ,EAAM5F,OAAOmnB,eAC/B/hB,KAAKU,SAAS,CAAEkc,WAAYthB,EAAOoe,gBA/FvC,CAAApW,IAAA,kBAAAhI,MAAA,SAkGkBkF,GAAO,IACb8C,EAA2B9C,EAA3B8C,IAAehI,EAAYkF,EAAtB5F,OAAUU,MAEnB0E,KAAKlJ,MAAMspB,uBAAiC,QAAR9c,GACtC9C,EAAMY,iBAGRpB,KAAKU,SAAS,CAAEob,SAAU,CAAExY,OAAOsZ,WAAYthB,MAzGnD,CAAAgI,IAAA,eAAAhI,MAAA,SA4GekF,GAAO,IAAA0L,EAAAlM,KACdA,KAAKlJ,MAAMspB,uBAEfpgB,KAAKU,SAAS,CAAEkc,WAAYpc,EAAM5F,OAAOU,OAAS,WAChD0mB,QAAQrW,MAAM,kBACdO,EAAKyV,gBAAgBE,MACrB3V,EAAKvM,MAAM0T,wBAlHjB,CAAA/P,IAAA,SAAAhI,MAAA,WAuHI,IAAMokB,EAAU1f,KAAKuf,SAASpb,QACxB4V,EAAY2F,GAAWA,EAAQtb,wBAF9B6d,EAGyCjiB,KAAKL,MAAMoV,SAAnDiF,EAHDiI,EAGCjI,IAAKvM,EAHNwU,EAGMxU,KAAMtV,EAHZ8pB,EAGY9pB,OAAesnB,EAH3BwC,EAGoBlqB,MACrBA,EAAQiI,KAAKlJ,MAAMiB,OAAS0nB,EAElC,OACEzkB,EAAAC,EAAAC,cAAC+d,GAAaiJ,SAAd,CACE5mB,MAAO,CACLye,YACAyC,yBAA0Bxc,KAAKwc,yBAC/BS,cAAejd,KAAKid,cACpBnB,SAAU9b,KAAKlJ,MAAMglB,SACrBc,WAAY5c,KAAKlJ,MAAM8lB,aAGzB5hB,EAAAC,EAAAC,cAACinB,GAAD,CACEpqB,MAAOA,EACPI,OAAQA,EACR6hB,IAAKA,EACLvM,KAAMA,GAENzS,EAAAC,EAAAC,cAACknB,GAAD,CACE9mB,MAAO0E,KAAKlJ,MAAM8lB,WAClB6C,UAAW1nB,EACXynB,cAAexf,KAAKwf,gBAEtBxkB,EAAAC,EAAAC,cAACkkB,GAAD,CACE9a,IAAKtE,KAAKuf,SACVzL,YAAU,QACVC,gBAAe/T,KAAKL,MAAMnI,SAC1B8D,MAAO0E,KAAKlJ,MAAM8lB,WAClByF,SAAUriB,KAAKwhB,eACf9N,UAAW1T,KAAKyU,gBAChB6N,OAAQtiB,KAAKuhB,eAEfvmB,EAAAC,EAAAC,cAACqnB,GAAD,CACEva,OAAQhI,KAAKlJ,MAAMkR,OACnB0R,UAAW1Z,KAAKlJ,MAAM4iB,kBA5JlC4H,EAAA,CAAkCpf,IAAMC,eAwLxC,IAAME,GAAqB,CAAEgf,Y9BrMtB,SAAqB7pB,EAAUwN,GAKpC,MAAO,CACLzC,KAAM,gBACNvL,QAAS,CAAEQ,WAAUC,KAAM,CAAEuN,UAASD,OANpB,IAAIkK,GAAYzX,GACT0gB,UAAUlT,O8BmMGG,iBAAekO,sBAE1C7Q,eAtBf,SAAyB1L,GAAO,IAAAkiB,EAe1BliB,EAbFyB,OAF4BiqB,EAAAxJ,EAG1BtiB,aACEY,EAJwBkrB,EAIxBlrB,mBACAge,EALwBkN,EAKxBlN,WACAP,EANwByN,EAMxBzN,SANwB0N,EAAAzJ,EAQ1BviB,WASJ,MAAO,CAAEe,SAjBqBirB,EASxBjrB,SAQawN,QAjBWyd,EAUxBzd,QAOsBsQ,aAAYhe,qBAAoByd,WAAUpe,KAjBxCqiB,EAY1BriB,KAKwEC,QAjB9CoiB,EAa1BpiB,UASkCyL,GAAzBG,CAA6C8e,ICjMtDoB,GAAStrB,OAAAuD,EAAA,EAAAvD,CAAA,OAAAwD,OAAA,YAAAxD,CAAA,CAAAyD,KAAA,SAAAC,OAAA,2FAOT6nB,GAAIvrB,OAAAuD,EAAA,EAAAvD,CAAA,QAAAwD,OAAA,YAAAxD,CAAA,CAAAyD,KAAA,SAAAC,OAAA,oBAsBV,IAKe0H,eALS,SAAC1L,GAEvB,MAAO,CAAEQ,mBADsBR,EAAMyB,OAAO7B,aAApCY,qBAIKkL,CAvBf,SAAAzL,GAAqC,IAAtBO,EAAsBP,EAAtBO,mBACb,OACE0D,EAAAC,EAAAC,cAACwnB,GAAD,KACE1nB,EAAAC,EAAAC,cAACynB,GAAD,KACGrrB,GAAuB0D,EAAAC,EAAAC,cAAC0nB,GAAD,MACxB5nB,EAAAC,EAAAC,cAAA,OAAK2nB,yBAAA,EAAsBjhB,SAAS,MACpC5G,EAAAC,EAAAC,cAAC4nB,EAAD,MACA9nB,EAAAC,EAAAC,cAAC6nB,GAAD,UCFOroB,OAbf,WACE,OACEM,EAAAC,EAAAC,cAAC8nB,EAAA,EAAD,CAAUpe,MAAOxM,GACf4C,EAAAC,EAAAC,cAAC+nB,EAAA,EAAD,KACEjoB,EAAAC,EAAAC,cAACgoB,EAAA,EAAD,CAAe1pB,MAAOA,GACpBwB,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAQzG,OAAQN,IAChBQ,EAAAC,EAAAC,cAACioB,GAAD,UCPUvkB,QACW,cAA7BwkB,OAAO5rB,SAAS6rB,UAEe,UAA7BD,OAAO5rB,SAAS6rB,UAEhBD,OAAO5rB,SAAS6rB,SAASxkB,MACvB,2DCbNykB,IAASC,OAAOvoB,EAAAC,EAAAC,cAACsoB,GAAD,MAAUtiB,SAASuiB,eAAe,SD4H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1498281c.chunk.js","sourcesContent":["import { createReducer } from 'redux-starter-kit'\n\nexport const INITIAL_STATE = {\n  activeCell: {},\n  cellInputter: {},\n  rows: 14,\n  columns: 6,\n}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_ACTIVE_CELL': (state, { payload }) => {\n    state.activeCell = payload\n  },\n  'OPEN_CELL_INPUTTER': (state, { payload }) => {\n    state.cellInputter = payload\n  },\n\n  'CLOSE_CELL_INPUTTER': (state) => {\n    state.cellInputter = { ...state.cellInputter, isCellInputterOpen: false }\n  },\n})\n","import { createReducer } from 'redux-starter-kit'\n\n\nconst INITIAL_STATE = {}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_CELL_DATA': (state, { payload }) => {\n    const { location, data } = payload\n    state[location] = data\n  },\n\n  'DELETE_CELL_DATA': (state, { payload }) => {\n    delete state[payload]\n  }\n})\n","import { createReducer } from 'redux-starter-kit'\n\nconst INITIAL_STATE = {\n  colWidths: {},\n  rowHeights: {},\n}\n\nexport default createReducer(INITIAL_STATE, {\n\n  'SET_COL_WIDTH': (state, { payload }) => {\n    const { colLabel, width } = payload\n    const { colWidths } = state\n    state.colWidths = { ...colWidths, [colLabel]: width }\n  },\n\n  'SET_ROW_HEIGHT': (state, { payload }) => {\n    const { rowLabel, height } = payload\n    const { rowHeights } = state\n    state.rowHeights = { ...rowHeights, [rowLabel]: height }\n  },\n\n})\n","import { configureStore } from 'redux-starter-kit'\n\nimport globalReducer from './globalReducer'\nimport tableDataReducer from './tableDataReducer'\nimport tableMetaReducer from './tableMetaReducer'\n\n\nconst appStoreGen = () => (\n  configureStore({\n    reducer: {\n      global: globalReducer,\n      tableData: tableDataReducer,\n      tableMeta: tableMetaReducer,\n    }\n  })\n)\n\nconst appStore = appStoreGen()\n\n\nexport default appStore\nexport { appStoreGen }\n","const colors = {\n  text: '#3D3D3D',\n  cell: {\n    border: '#dfdfdf',\n    borderDark: '#CCC',\n    labelBkg: '#F5F5F5'\n  },\n  dropdown: {\n    normal: '#fafafa',\n    active: '#ebebeb',\n  },\n  primary: {\n    strong: '#E10D75',\n    light: 'salmon',\n  },\n  field: {\n    background: '#F0F0F0',\n  },\n  shadow: '#939393',\n}\n\nconst breaks = {\n  xs: 0,\n  sm: 420,\n  md: 900,\n  lg: 1200,\n}\n\nconst breakBump = {\n  xs: 'sm',\n  sm: 'md',\n  md: 'lg',\n}\n\nconst queries = {\n  xs: `@media (max-width: ${breaks.sm - 1}px)`,\n  sm: `@media (min-width: ${breaks.sm}px) and (max-width: ${breaks.md - 1}px)`,\n  md: `@media (min-width: ${breaks.md}px) and (max-width: ${breaks.lg - 1}px)`,\n  lg: `@media (min-width: ${breaks.lg}px)`,\n  from: (breakPoint) => (`@media (min-width: ${breaks[breakPoint]}px)`),\n  upTo: (breakPoint) => (`@media (max-width: ${breaks[ breakBump[breakPoint] ] - 1}px)`),\n}\n\nconst theme = {\n  colors,\n  breaks,\n  queries,\n}\n\nexport default theme\n","/* @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nimport theme from './theme'\n\n\nconst globalStyles = css`\n  body {\n    color: ${theme.colors.text};\n    line-height: 1.3em;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  table, th, td {\n    border: 0;\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n\n  td {\n    padding: 0;\n    line-height: 1.2em;\n  }\n\n  pre, p, h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n`\n\nexport default globalStyles\n","import React from 'react'\nimport styled from '@emotion/styled'\n\n\nconst Root = styled.header`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0 30px;\n`\n\nfunction Header() {\n  return (\n    <Root>\n      <h3>Spreadsheet App</h3>\n    </Root>\n  )\n}\n\nexport default Header\n","const BASE_CODE_POINT = 'A'.codePointAt(0)\n\nexport function buildUrl(baseUrl, query={}) {\n  const urlQuery = Object.entries(query).map(([key, val]) => `${key}=${val}`).join('&')\n  return [baseUrl.trim(), urlQuery].join('?')\n}\n\nexport function clamp(value, min, max) {\n  return Math.min( Math.max(value, min), max )\n}\n\nexport function getRangeArray(min, max, isString=false) {\n  const range = []\n\n  for (let num = min; num <= max; num++) {\n    range.push( isString ? num.toString() : num )\n  }\n\n  return range\n}\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms))\n\nexport function getColumnNames(cols) {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let names = []\n  let prevNames = ['']\n  let remainCols = cols\n\n  while (remainCols > 0) {\n    const newNames = []\n\n    outerLoop:\n    for (let colName of prevNames) {  \n      for (let letter of alphabet) {\n        if (remainCols === 0)  { break outerLoop }\n        newNames.push(`${colName}${letter}`)\n        remainCols -= 1\n      }\n    }\n\n    prevNames = newNames\n    names = [...names, ...newNames]\n  }\n\n  return names\n}\n\nexport function getCellNames(rows, cols) {\n  const names = []\n  let colNames = getColumnNames(cols)\n\n  for (let row=1; row <= rows; row++) {\n    for (let col of colNames) {\n      names.push(`${col}-${row}`)\n    }\n  }\n\n  return names\n}\n\nexport function getColumnPosition(colLabel) {\n  const letters = colLabel.split('')\n  const oneBase = letters.reduce((prev, letter) => (\n    prev * 26 + letter.charCodeAt(0) - BASE_CODE_POINT + 1\n  ), 0)\n\n  return oneBase - 1\n}\n\nexport function getColumnLabel(num) {\n  const label = []\n  const basePoint = BASE_CODE_POINT\n  let curr = num + 1\n\n  do {\n    curr -= 1\n    const letterPosition = curr % 26\n    const codePoint = basePoint + letterPosition\n    const letter = String.fromCodePoint(codePoint)\n    label.push(letter)\n\n    curr = Math.floor(curr / 26)\n  } while (curr > 0)\n\n  return label.reverse().join('')\n}\n\nexport function parseLocation(location) {\n  let [col, row] = location.split('-')\n  const colIndex = getColumnPosition(col)\n  const rowIndex = +row - 1\n\n  return [colIndex, rowIndex]\n}\n\nexport function isNumber(numStr) {\n  const isPeriodsAndDigits = Boolean(numStr.match(/^[.\\d]+$/))\n  const periodCount = (numStr.match(/\\./g) || []).length\n\n  if (!isPeriodsAndDigits) { return false }\n  if (periodCount > 1) { return false }\n  if (numStr.length === 1 && numStr[0] === '.') { return false }\n  return true\n}\n\nexport function debounce(time, fn) {\n  let timeout\n\n  return (...args) => {\n    if (timeout) { return }\n\n    fn(...args)\n\n    timeout = setTimeout(() => {\n      clearTimeout(timeout)\n      timeout = null\n    }, time)\n  }\n}\n\n","export const DEFAULT_COL_WIDTH = 140\nexport const MIN_COL_WIDTH = 12\nexport const MAX_COL_WIDTH = 800\nexport const DEFAULT_ROW_HEIGHT = 28\nexport const MIN_ROW_HEIGHT = 12\nexport const MAX_ROW_HEIGHT = 600\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { setColWidth } from '~/actions/tableMetaActions'\nimport { DEFAULT_COL_WIDTH, MIN_COL_WIDTH, MAX_COL_WIDTH } from '~/library/constants'\nimport { debounce, clamp } from '~/library/utils'\n\n\nlet Root = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n  font-size: 12px;\n`\n\nconst BtnWidth = styled.button`\n  background: transparent;\n  cursor: col-resize;\n  outline: none;\n  position: absolute;\n  height: 100%;\n  margin: 0 -3px 0 0;\n  width: 6px;\n  border: 0;\n  padding: 0;\n  right: 0;\n  top: 0;\n  z-index: 1;\n\n  :hover {\n    background: ${props => props.theme.colors.primary.light};\n  }\n`\n\nclass ColHeader extends React.PureComponent {\n\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    setColWidth: PropTypes.func.isRequired,\n    width: PropTypes.number.isRequired,\n  }\n\n  static defaultProps = {\n    width: DEFAULT_COL_WIDTH,\n  }\n\n  constructor() {\n    super()\n    this.handleBtnWidthOnMouseDown = this.handleBtnWidthOnMouseDown.bind(this)\n    this.handleDocumentMouseMove = this.handleDocumentMouseMove.bind(this)\n    this.handleDocumentMouseUp = this.handleDocumentMouseUp.bind(this)\n    this.debSetColWidth = this.debSetColWidth.bind(this)\n  }\n\n  state = {\n    pageX: 0,\n    width: 0,\n    btnRight: 0,\n    isResizing: false,\n  }\n\n  getBtnWidthStyle() {\n    if (!this.state.isResizing) { return }\n\n    const newRight = this.state.btnRight\n    const minRight = MIN_COL_WIDTH - this.state.width\n    const maxRight = MAX_COL_WIDTH - this.state.width\n    const right = -(clamp(newRight, minRight, maxRight) - 4)\n\n    return (theme) => css`\n      width: 1.5px;\n      height: 90vh;\n      right: ${right}px;\n      background: ${theme.colors.primary.light};\n    `\n  }\n\n  debSetColWidth = debounce(40, (event) => {\n    const delta = event.pageX - this.state.pageX\n    this.setState({ btnRight: delta, })\n  })\n\n  handleDocumentMouseMove(event) {\n    this.debSetColWidth(event)\n  }\n\n  handleDocumentMouseUp(event) {\n    const delta = event.pageX - this.state.pageX\n    const width = this.state.width + delta\n\n    this.props.setColWidth(this.props.label, width)\n    this.setState({ btnRight: 0, isResizing: false })\n    document.removeEventListener('mousemove', this.handleDocumentMouseMove)\n    document.removeEventListener('mouseup', this.handleDocumentMouseUp)\n  }\n\n  handleBtnWidthOnMouseDown(event) {\n    event.preventDefault()\n\n    this.setState({\n      pageX: event.pageX,\n      width: this.props.width,\n      isResizing: true,\n    })\n\n    document.addEventListener('mousemove', this.handleDocumentMouseMove)\n    document.addEventListener('mouseup', this.handleDocumentMouseUp)\n  }\n  \n  // handleBtnWidthOnMouseMove(event) {\n  //   if (!this.state.isSettingWidth) { return }\n  //   document.addEventListener('mousemove', (event) => {\n\n  //   })\n  //   const { pageX, pageY } = event\n  //   console.log('handle', pageX, pageY)\n  // }\n\n  render() {\n    const { label, width } = this.props\n\n    return (\n      <Root\n        data-col={label}\n        className='col-label-height'\n        css={css`\n          width: ${width}px;\n          height: 26px;\n        `}\n      >\n        {label}\n        <BtnWidth\n          css={this.getBtnWidthStyle()}\n          tabIndex='-1'\n          onMouseDown={this.handleBtnWidthOnMouseDown}\n          onMouseMove={this.handleBtnWidthOnMouseMove}\n          onMouseUp={this.handleBtnWidthOnMouseUp}\n        />\n      </Root>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const width = state.tableMeta.colWidths[ownProps.label]\n  return { width }\n}\n\nconst mapDispatchToProps = { setColWidth }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColHeader)\n","import { clamp } from '~/library/utils'\nimport {\n  MIN_COL_WIDTH,\n  MAX_COL_WIDTH,\n  MIN_ROW_HEIGHT,\n  MAX_ROW_HEIGHT,\n} from '~/library/constants'\n\n\nexport function setColWidth(colLabel, width) {\n  if (typeof width !== 'number') {\n    throw new Error('width is not a number')\n  }\n\n  return {\n    type: 'SET_COL_WIDTH',\n    payload: { colLabel, width: clamp(width, MIN_COL_WIDTH, MAX_COL_WIDTH) }\n  }\n}\n\nexport function setRowHeight(rowLabel, height) {\n  if (typeof height !== 'number') {\n    throw new Error('height is not a number')\n  }\n\n  return {\n    type: 'SET_ROW_HEIGHT',\n    payload: { rowLabel, height: clamp(height, MIN_ROW_HEIGHT, MAX_ROW_HEIGHT) }\n  }\n}\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport ColHeader from '../cell/ColHeader'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction ColHeaderRow({ colLabels }) {\n  const renderCornerCell = () => (\n    <InnerBorder\n      css={css`\n        width: 34px;\n        height: 26px;\n      `}\n    />\n  )\n\n  const renderLabelCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => (\n      <ColHeader\n        key={i}\n        label={colLabels[i]}\n      />\n    )\n  ))\n\n  return (\n    <Row\n      data-row='header'\n    >\n      {renderCornerCell()}\n      {renderLabelCells()}\n    </Row>\n  )\n}\n\nColHeaderRow.propTypes = {\n  colLabels: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default ColHeaderRow\n\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\nimport { connect } from 'react-redux'\n\nimport { setRowHeight } from '~/actions/tableMetaActions'\nimport { DEFAULT_ROW_HEIGHT, MIN_ROW_HEIGHT, MAX_ROW_HEIGHT } from '~/library/constants'\nimport { debounce, clamp } from '~/library/utils'\n\n\nconst Root = styled.div`\n  position: relative;\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nconst BtnHeight = styled.button`\n  background: transparent;\n  cursor: row-resize;\n  outline: none;\n  position: absolute;\n  width: 100%;\n  height: 6px;\n  margin: 0 0 -3px 0;\n  border: 0;\n  padding: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1;\n\n  :hover {\n    background: ${props => props.theme.colors.primary.light};\n  }\n`\n\nclass RowHeader extends React.PureComponent {\n\n  static propTypes = {\n    label: PropTypes.number.isRequired,\n    setRowHeight: PropTypes.func.isRequired,\n    height: PropTypes.number,\n  }\n\n  constructor() {\n    super()\n    this.handleBtnHeightOnMouseDown = this.handleBtnHeightOnMouseDown.bind(this)\n    this.handleDocumentMouseMove = this.handleDocumentMouseMove.bind(this)\n    this.handleDocumentMouseUp = this.handleDocumentMouseUp.bind(this)\n    this.debSetRowHeight = this.debSetRowHeight.bind(this)\n  }\n\n  state = {\n    pageY: 0,\n    height: 0,\n    btnBottom: 0,\n    isResizing: false,\n  }\n\n  refRoot = React.createRef()\n\n  getRootStyle() {\n    const { height } = this.props\n    const style = {\n      width: 34\n    }\n\n    if (height) {\n      style.height = height\n    } else {\n      style.minHeight = DEFAULT_ROW_HEIGHT\n      style.height = 'auto'\n    }\n\n    return style\n  }\n\n  getBtnHeightStyle() {\n    if (!this.state.isResizing) { return }\n\n    const newBottom = this.state.btnBottom\n    const minBottom = MIN_ROW_HEIGHT - this.state.height\n    const maxBottom = MAX_ROW_HEIGHT - this.state.height\n    const bottom = -(clamp(newBottom, minBottom, maxBottom) - 4)\n\n    return (theme) => css`\n      height: 1.5px;\n      width: 95vw;\n      bottom: ${bottom}px;\n      background: ${theme.colors.primary.light};\n    `\n  }\n\n  debSetRowHeight = debounce(40, (event) => {\n    const delta = event.pageY - this.state.pageY\n    this.setState({ btnBottom: delta, })\n  })\n\n  handleDocumentMouseMove(event) {\n    this.debSetRowHeight(event)\n  }\n\n  handleDocumentMouseUp(event) {\n    const delta = event.pageY - this.state.pageY\n    const height = this.state.height + delta\n\n    this.props.setRowHeight(this.props.label, height)\n    this.setState({ btnBottom: 0, isResizing: false })\n    document.removeEventListener('mousemove', this.handleDocumentMouseMove)\n    document.removeEventListener('mouseup', this.handleDocumentMouseUp)\n  }\n\n  handleBtnHeightOnMouseDown(event) {\n    event.preventDefault()\n\n    this.setState({\n      pageY: event.pageY,\n      height: this.props.height || this.refRoot.current.getBoundingClientRect().height,\n      isResizing: true,\n    })\n\n    document.addEventListener('mousemove', this.handleDocumentMouseMove)\n    document.addEventListener('mouseup', this.handleDocumentMouseUp)\n  }\n\n  render() {\n    const { label } = this.props\n\n    return (\n      <Root\n        ref={this.refRoot}\n        data-row={label}\n        className='row-header-width'\n        css={this.getRootStyle()}\n      >\n        {label}\n        <BtnHeight\n          css={this.getBtnHeightStyle()}\n          tabIndex='-1'\n          onMouseDown={this.handleBtnHeightOnMouseDown}\n          onMouseMove={this.handleBtnHeightOnMouseMove}\n          onMouseUp={this.handleBtnHeightOnMouseUp}\n        />\n      </Root>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const height = state.tableMeta.rowHeights[ownProps.label]\n  return { height }\n}\n\nconst mapDispatchToProps = { setRowHeight }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RowHeader)\n","import appStore from '~/reducers/'\nimport { clearCellData, replaceCellData } from '~/actions/tableDataActions'\n\n\nclass ReduxConnect {\n  constructor(store=appStore) {\n    const { global: globalState } = store.getState()\n    this.store = store\n    this.rows = globalState.rows\n    this.columns = globalState.columns\n  }\n\n  get tableData() {\n    return this.store.getState().tableData\n  }\n\n  get locations() {\n    return Object.keys(this.tableData)\n  }\n\n  getCellResult(location) {\n    const data = this.tableData[location]\n    return data && data.result\n  }\n\n  replaceCellData(location, entered, result) {\n    this.store.dispatch(replaceCellData(location, entered, result))\n  }\n\n  clearCell(location) {\n    this.store.dispatch(clearCellData(location))\n  }\n}\n\nexport default ReduxConnect\nexport { appStore }\n","import graph from '~/formulas/graph'\nimport Interpreter from '../formulas/Interpreter'\n\n\nexport function setCellData(location, entered) {\n  const interpreter = new Interpreter(location)\n  const result = interpreter.interpret(entered)\n\n\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function replaceCellData(location, entered, result) {\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function clearCellData(location) {\n  return (dispatch, getState) => {\n    const value = getState().tableData[location]\n\n    graph.delVertex(location)\n\n    if (value === undefined) {\n      return Promise.resolve()\n    }\n\n\n    return Promise.resolve(dispatch({\n      type: 'DELETE_CELL_DATA',\n      payload: location,\n    }))\n  }\n}\n","class Token {\n  constructor(type, text, whitespace, category, index) {\n    this.type = type\n    this.category = category\n    this.text = text\n    this.whitespace = whitespace\n    this.index = index\n    this.value = null\n    this.html = null\n  }\n}\n\nexport default Token\n","function testArgsAllNumbers(args) {\n  args.forEach(arg => {\n    if (typeof arg !== 'number') {\n      throw new TypeError(`Function argument not a number: ${arg}`)\n    }\n  })\n}\n\nconst Fn = {\n  AVERAGE: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      return Fn.SUM.fn(...args) / Fn.COUNT.fn(...args)\n    },\n    definition: 'AVERAGE(value1, value2, ...)',\n    example: 'AVERAGE(A1:B3, 3)',\n    summary: 'Returns the average from a series of numbers.',\n  },\n\n  CONCAT: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      return args.reduce((prev, curr) => (prev + curr), '')\n    },\n    definition: 'CONCAT(\"text1\", \"text2\", ...)',\n    example: 'CONCAT(\"one\", \"two\")',\n    summary: 'Returns a single concatenated string from a series of strings.',\n  },\n\n  COUNT: {\n    fn: (...args) => args.length,\n    definition: 'COUNT(element1, element2, ...)',\n    example: 'COUNT(A1:B3, 2, C4)',\n    summary: 'Returns the number of non-empty elements in a set.',\n  },\n\n  MAX: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      testArgsAllNumbers(args)\n      return Math.max(...args)\n    },\n    definition: 'MAX(value1, value2, ...)',\n    example: 'MAX(A1:B3, 4, C3)',\n    summary: 'Returns the maximum value from a series of numbers',\n  },\n\n  MIN: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      testArgsAllNumbers(args)\n      return Math.min(...args)\n    },\n    definition: 'MIN(value1, value2, ...)',\n    example: 'MIN(A1:B3, 4, C3)',\n    summary: 'Returns the minimum value from a series of numbers.',\n  },\n\n  POWER: {\n    fn: (...args) => {\n      if (args.length !== 2) {\n        throw new Error('Formula takes only two elements')\n      }\n\n      testArgsAllNumbers(args)\n      const [base, exp] = args\n      return Math.pow(base, exp)\n    },\n    definition: 'POWER(base, exponent)',\n    example: 'POWER(A3,2)',\n    summary: 'Returns a number raised to an exponent.'\n  },\n\n  SQRT: {\n    fn: (...args) => {\n      if (args.length !== 1) {\n        throw new Error(`Formula takes only one element`)\n      }\n\n      testArgsAllNumbers(args)\n      return Math.sqrt(args[0])\n    },\n    definition: 'SQRT(value)',\n    example: 'SQRT(9) or SQRT(A3)',\n    summary: 'Returns the square root of a number.'\n  },\n\n  SUM: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      testArgsAllNumbers(args)\n      return args.reduce((prev, curr) => (curr + prev), 0)\n    },\n    definition: 'SUM(value1, value2, ...)',\n    example: 'SUM(A1:B3, 3, C5)',\n    summary: 'Retuns the sum from a series of numbers.',\n  }\n}\n\n// aliases\nFn.AVG = {\n  ...Fn.AVERAGE,\n  definition: 'AVG(value1, value2, ...)',\n  example: 'AVG(A1:B3, 3)',\n}\n\nFn.POW = {\n  ...Fn.POWER,\n  definition: 'POW(base, exponent)',\n  example: 'POW(A3,2)',\n}\n\nexport default Fn\n","import { TOKENS as t } from './Lexer'\nimport formulaFuncs from './formulaFunctions'\nimport { isNumber } from '~/library/utils'\n\n\nclass TokenSanitizer {\n  constructor(tokens) {\n    this.tokens = tokens\n  }\n\n  sanitize() {\n    return this.tokens.map(token => {\n      switch(token.type) {\n        case t.NUMBER:\n          return this.number(token)\n        case t.CELL:\n          return this.cell(token)\n        case t.FUNCTION:\n          return this.function(token)\n        case t.STRING:\n          return this.string(token)\n        default:\n          return token\n      }\n    })\n  }\n\n  number(token) {\n    if (!isNumber(token.text)) {\n      token.type = t.UNKNOWN\n      return token\n    }\n\n    token.value = parseFloat(token.text)\n    return token\n  }\n\n  cell(token) {\n    token.value = this.getCellLabel(token)\n    return token\n  }\n\n  function(token) {\n    const fn = this.getFunction(token)\n    \n    if (fn) {\n      token.value = fn\n    } else {\n      token.type = t.UNKNOWN\n    }\n\n    return token\n  }\n\n  string(token) {\n    token.value = token.text.slice(1, -1)\n    return token\n  }\n\n  getCellLabel(token) {\n    const { text } = token\n    const { index } = text.match(/\\d+/)\n    const col = text.slice(0, index).toUpperCase()\n    const row = text.slice(index)\n    return `${col}-${row}`\n  }\n\n  getFunction(token) {\n    const fnName = token.text.toUpperCase()\n    const fnNode = formulaFuncs[fnName]\n    return fnNode && fnNode.fn\n  }\n}\n\nexport default TokenSanitizer\n","class LexerRule {\n  constructor(regex, groupIndex, token, category) {\n    this.regex = regex\n    this.groupIndex = groupIndex\n    this.token = token\n    this.category = category\n  }\n\n  setIndex(index) {\n    this.regex.lastIndex = index\n  }\n\n  test(input) {\n    return this.regex.exec(input)\n  }\n}\n\nexport default LexerRule\n","import Token from './Token'\nimport TokenSanitizer from './TokenSanitizer'\nimport LexerRule from './LexerRule'\nimport { isNumber } from '~/library/utils'\n\n\nconst TOKENS = {\n  // internal\n  EOF: 'EOF',\n  // structure\n  EQUALS: 'EQUALS',\n  COMMA: 'COMMA',\n  COLON: 'COLON',\n  LPAREN: 'LPAREN',\n  RPAREN: 'RPAREN',\n  // operators\n  PLUS: 'PLUS',\n  MINUS: 'MINUS',\n  MULT: 'MULT',\n  DIV: 'DIV',\n  // entities\n  TEXT: 'TEXT',\n  CELL: 'CELL',\n  STRING: 'STRING',\n  NUMBER: 'NUMBER',\n  FUNCTION: 'FUNCTION',\n  UNKNOWN: 'UNKNOWN',\n}\n\nconst t = TOKENS\n\nconst GRAMMAR = [\n  // structure\n  new LexerRule(/=/g, 0, t.EQUALS, 'structure'),\n  new LexerRule(/,/g, 0, t.COMMA, 'structure'),\n  new LexerRule(/:/g, 0, t.COLON, 'structure'),\n  new LexerRule(/\\(/g, 0, t.LPAREN, 'structure'),\n  new LexerRule(/\\)/g, 0, t.RPAREN, 'structure'),\n  // operators\n  new LexerRule(/\\+/g, 0, t.PLUS, 'operator'),\n  new LexerRule(/\\-/g, 0, t.MINUS, 'operator'), // eslint-disable-line\n  new LexerRule(/\\*/g, 0, t.MULT, 'operator'),\n  new LexerRule(/\\//g, 0, t.DIV, 'operator'),\n  // multi-character\n  new LexerRule(/(\"[^\"]+\")/g, 1, t.STRING, 'entity'), // eslint-disable-line\n  new LexerRule(/[\\d\\.]+/g, 0, t.NUMBER, 'entity'), // eslint-disable-line\n  new LexerRule(/[a-z]+[\\d]+/gi, 0, t.CELL, 'entity'),\n  new LexerRule(/([a-z]+)\\(/gi, 1, t.FUNCTION, 'entity'),\n]\n\n\nclass Lexer {\n  constructor(input) {\n    this.input = input\n    this.index = 0\n    this.char = this.initChar(input)\n    this.markers = []\n    this.tokens = []\n  }\n\n  getTokens() {\n    while (this.char !== t.EOF) {\n      const token = this.nextToken()\n      this.tokens.push(token)\n    }\n\n    const sanitizer = new TokenSanitizer(this.tokens)\n    this.tokens = sanitizer.sanitize()\n    return this.tokens\n  }\n\n  nextToken() {\n    if (this.char === t.EOF) {\n      return new Token(t.EOF, t.EOF, 0, 'eof', this.index)\n    }\n\n    if (!this.isFormula()) {\n      return this.tokenTEXTorNUMBER()\n    }\n\n    const whitespaceLen = this.getWhitespaceLen()\n    let token\n\n    for (let rule of GRAMMAR) {\n      rule.setIndex(this.index)\n      const match = rule.test(this.input)\n\n      if (match && match.index === this.index) {\n        const text = match[rule.groupIndex]\n        token = new Token(rule.token, text, whitespaceLen, rule.category, this.index)\n        this.index += text.length - 1\n        this.consume()\n        break\n      }\n    }\n\n    if (!token) {\n      token = this.tokenUNKNOWN(whitespaceLen)\n    }\n\n    return token\n  }\n\n  initChar(input) {\n    if (this.input.length === 0) {\n      this.input = '0'\n      this.index = -1\n    }\n\n    return input[this.index]\n  }\n\n  tokenUNKNOWN(whitespace) {\n    const chars = []\n\n    while (!(this.isEOF() || this.isSeparator() || this.isWhitespace())) {\n      chars.push(this.char)\n      this.consume()\n    }\n\n    const text = chars.join('')\n    return new Token(t.UNKNOWN, text, whitespace, 'entity', this.index - text.length)\n  }\n\n  tokenTEXTorNUMBER() {\n    let token\n\n    if (isNumber(this.input)) {\n      token = new Token(t.NUMBER, this.input, 0, 'entity', this.index)\n    } else {\n      token = new Token(t.TEXT, this.input, 0, 'entity', this.index)\n    }\n\n    this.index = this.input.length - 1\n    this.consume()\n    return token\n  }\n\n  consume() {\n    this.index++\n\n    if (this.index < this.input.length) {\n      this.char = this.input[this.index]\n    } else {\n      this.char = t.EOF\n    }\n  }\n\n  isFormula() {\n    return this.input[0] === '='\n  }\n\n  isEOF() {\n    return this.char === t.EOF\n  }\n\n  isWhitespace() {\n    return !this.isEOF() && Boolean(this.char.match(/\\s/))\n  }\n\n  isSeparator() {\n    return Boolean(this.char.match(/[\\(\\)\\+\\-\\/\\*]/)) // eslint-disable-line\n  }\n\n  getWhitespaceLen() {\n    let count = 0\n\n    while (this.isWhitespace()) {\n      count++\n      this.consume()\n    }\n\n    return count\n  }\n}\n\nexport default Lexer\nexport { GRAMMAR, TOKENS, Lexer }\n","import { TOKENS as t } from './Lexer'\n\n\nclass AST {\n  constructor(name) {\n    this._name = name\n  }\n\n  eval() {\n    throw new Error('Implement method.')\n  }\n}\n\nclass TextNode extends AST {\n  constructor(textNode) {\n    super('TextNode')\n    this.node = textNode\n  }\n\n  eval() {\n    return this.node.text\n  }\n}\n\nclass StringNode extends AST {\n  constructor(node) {\n    super('StringNode')\n    this.node = node\n  }\n\n  eval() {\n    return this.node.value\n  }\n}\n\nclass NumberNode extends AST {\n  constructor(node) {\n    super('NumberNode')\n    this.node = node\n  }\n\n  eval() {\n    return this.node.value\n  }\n}\n\nclass CellNode extends AST {\n  constructor(token) {\n    super('CellNode')\n    this.cell = token\n  }\n\n  get location() {\n    return this.cell.value\n  }\n}\n\nclass CellRange extends AST {\n  constructor(leftCell, rightCell) {\n    super('CellRange')\n    this.leftCell = leftCell\n    this.rightCell = rightCell\n  }\n}\n\nclass UnaryOp extends AST {\n  constructor(opNode, expr) {\n    super('UnaryOp')\n    this.opNode = opNode\n    this.expr = expr\n  }\n\n  eval(evaluatedExpr) {\n    if (this.opNode.type === t.PLUS) {\n      return evaluatedExpr\n    } else if (this.opNode.type === t.MINUS) {\n      return -evaluatedExpr\n    }\n  }\n}\n\nclass FuncOp extends AST {\n  constructor(funcNode, argNodes) {\n    super('FuncOp')\n    this.funcNode = funcNode\n    this.argNodes = argNodes\n  }\n\n  eval(evaluatedArgs) {\n    const fn = this.funcNode.value\n    return fn(...evaluatedArgs)\n  }\n}\n\nclass BinaryOp extends AST {\n  constructor(leftNode, opNode, rightNode) {\n    super('BinaryOp')\n    this.leftNode = leftNode\n    this.opNode = opNode\n    this.rightNode = rightNode\n  }\n\n  eval(left, right) {\n    switch(this.opNode.type) {\n      case t.PLUS:\n        return left + right\n      case t.MINUS:\n        return left - right\n      case t.DIV:\n        if (right === 0) {\n          throw new Error(`Division by zero: ${left}/${right}`)\n        } else {\n          return left / right\n        }\n      case t.MULT:\n        return left * right\n      default:\n        throw new Error(`Unsupported operator \"${this.token.text}\"`)\n    }\n  }\n}\n\nexport {\n  TextNode,\n  StringNode,\n  NumberNode,\n  CellNode,\n  CellRange,\n  BinaryOp,\n  UnaryOp,\n  FuncOp,\n}\n","import { TOKENS as t } from './Lexer'\nimport {\n  TextNode,\n  StringNode,\n  NumberNode,\n  CellNode,\n  CellRange,\n  BinaryOp,\n  UnaryOp,\n  FuncOp\n} from './ast'\n\n\nclass Parser {\n  constructor(tokens) {\n    this.index = 0\n    this.tokens = tokens\n    this.curr = this.tokens[0]\n    this.ast = null\n  }\n\n  parse() {\n    switch (this.peekType()) {\n      case t.TEXT:\n        this.ast = this.text()\n        break\n      case t.NUMBER:\n        this.ast = this.number()\n        break\n      default:\n        this.equals()\n        this.ast = this.expr()\n        break\n    }\n\n    if (this.curr !== null) {\n      throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n    }\n\n    return this.ast\n  }\n\n  expr() {\n    // expr : term ( ( PLUS | MINUS ) term ) *\n    let node, operator, right\n\n    node = this.term()\n\n    while ( [t.PLUS, t.MINUS].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.term()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  term() {\n    // term : factor ( ( MULT | DIV ) factor ) *\n    let node, operator, right\n\n    node = this.factor()\n\n    while ( [t.MULT, t.DIV].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.factor()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  factor() {\n    // factor : ( PLUS | MINUS ) ( NUMBER | CELL )\n    //          | LPAREN expr RPAREN\n    //          | FUNCTION LPAREN list RPAREN\n    switch (this.peekType()) {\n      case t.LPAREN:\n        return this.enclosedExpr()\n      case t.PLUS:\n      case t.MINUS:\n        return this.unaryOp()\n      case t.NUMBER:\n        return this.number()\n      case t.CELL:\n        return this.cell()\n      case t.FUNCTION:\n        return this.func()\n      case t.RPAREN:\n        throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n      default:\n        throw new Error('Missing factor')\n    }\n  }\n\n  enclosedExpr() {\n    this.lparen()\n    const node = this.expr()\n    this.rparen()\n    return node\n  }\n\n  cell() {\n    if (this.peekType() !== t.CELL) {\n      throw new Error('Missing cell node')\n    }\n\n    const node = new CellNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  cellRange() {\n    let left, right\n\n    if (!this.isCellRange()) {\n      throw new Error('Missing cell range')\n    }\n\n    left = new CellNode(this.curr)\n    this.consume() // skip colon\n    this.consume()\n    right = new CellNode(this.curr)\n    this.consume()\n\n    if (right.location < left.location) {\n      [left, right] = this.invertCellRange(left, right)\n    }\n\n    return new CellRange(left, right)\n  }\n\n  invertCellRange(left, right) {\n    this.tokens[this.index - 2] = right.cell\n    this.tokens[this.index] = left.cell\n    let temp = left\n    left = right\n    right = temp\n    return [left, right]\n  }\n\n  func() {\n    if (this.peekType() !== t.FUNCTION) {\n      throw new Error('Missing function')\n    }\n\n    const func = this.curr\n    this.consume()\n    this.lparen()\n    const args = this.list()\n    this.rparen()\n    return new FuncOp(func, args)\n  }\n\n  list() {\n    const list = []\n    let node\n\n    node = this.listNode()\n    list.push(node)\n\n    while (this.peekType() === t.COMMA) {\n      this.consume() // skip comma token\n      node = this.listNode()\n      list.push(node)\n    }\n\n    return list\n  }\n\n  listNode() {\n    if (this.isCellRange()) {\n      return this.cellRange()\n    } else if (this.peekType() === t.STRING) {\n      return this.string()\n    } else {\n      return this.expr()\n    }\n  }\n\n  text() {\n    let node\n\n    if (this.peekType() !== t.TEXT) {\n      throw new Error('Missing string')\n    }\n\n    node = new TextNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  string() {\n    const node = new StringNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  number() {\n    if (this.peekType() === t.NUMBER) {\n      const node = new NumberNode(this.curr)\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing number')\n    }\n  }\n\n  operator() {\n    if ([t.PLUS, t.MINUS, t.MULT, t.DIV].includes(this.peekType())) {\n      const node = this.curr\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing operator')\n    }\n  }\n\n  equals() {\n    if (this.peekType() !== t.EQUALS) {\n      throw new Error('Missing equals sign')\n    }\n\n    this.consume()\n  }\n\n  lparen() {\n    if (this.peekType() !== t.LPAREN) {\n      throw new Error('Missing left parenthesis')\n    }\n\n    this.consume()\n  }\n\n  rparen() {\n    if (this.peekType() !== t.RPAREN) {\n      throw new Error('Missing right parenthesis')\n    }\n\n    this.consume()\n  }\n\n  unaryOp() {\n    if (![t.PLUS, t.MINUS].includes(this.peekType())) {\n      throw new Error('Missing unary operator')\n    }\n\n    const curr = this.curr\n    this.consume()\n    const node = new UnaryOp(curr, this.factor())\n    return node\n  }\n\n  consume() {\n    if (this.index < this.tokens.length - 1) {\n      this.index++\n      this.curr = this.tokens[this.index]\n    } else {\n      this.curr = null\n    }\n  }\n\n  isCellRange() {\n    return (\n      this.peekType(0) === t.CELL\n      && this.peekType(1) === t.COLON\n      && this.peekType(2) === t.CELL\n    )\n  }\n\n  isString() {\n    return (\n      this.peekType(0) === t.DQUOTE\n      && this.peekType(1) === t.TEXT\n      && this.peekType(2) === t.DQUOTE\n    )\n  }\n\n  peekType(stepsAhead) {\n    if (stepsAhead) {\n      if (stepsAhead < 0) {\n        throw new Error('peak ahead index must be positive')\n      }\n\n      const index = this.index + stepsAhead\n\n      if (index < this.tokens.length) {\n        return this.tokens[index].type\n      }\n    } else {\n      return this.curr && this.curr.type\n    }\n  }\n}\n\nexport default Parser\n","import { Lexer } from './Lexer'\nimport { parseLocation, getColumnLabel } from '~/library/utils'\nimport graph from '~/formulas/graph'\nimport Parser from './Parser'\nimport ReduxConnect from './ReduxConnect'\n\n\nconst ERR_DIVISION_BY_ZERO = '#DIV/0!'\nconst ERR_CIRCULAR_REFERENCE = '#REF!'\nconst ERR_GENERIC = '#ERROR!'\n\nclass Interpreter {\n  constructor(location) {\n    this.location = location\n    this.error = null\n    this.cache = {}\n    this.result = null\n    this.state = new ReduxConnect()\n  }\n\n  interpret(input) {\n    const vertex = graph.addVertex(this.location, input)\n    let lexer, parser\n\n    try {\n      lexer = new Lexer(input)\n      parser = new Parser( lexer.getTokens() )\n      vertex.ast = parser.parse()\n      graph.recalculate(this.location)\n      this.result = vertex.result\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      return this.result\n    }\n\n    this.error = vertex.error\n    return this.result\n  }\n\n  visitAST(location) {\n    const vertex = graph.getVertex(location)\n\n    if (!vertex.ast) {\n      return vertex.result\n    }\n\n    try {\n      this.result = vertex.result = this.visitNode(vertex.ast)\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      throw error\n    }\n\n    return this.result\n  }\n\n  visitNode(node) {\n    switch (node._name) {\n      case 'NumberNode':\n        return this.NumberNode(node)\n      case 'CellNode':\n        return this.CellNode(node)\n      case 'TextNode':\n        return this.TextNode(node)\n      case 'StringNode':\n        return this.StringNode(node)\n      case 'CellRange':\n        return this.CellRange(node)\n      case 'FuncOp':\n        return this.FuncOp(node)\n      case 'BinaryOp':\n        return this.BinaryOp(node)\n      case 'UnaryOp':\n        return this.UnaryOp(node)\n      default:\n        const nodeName = node._name || (node.constructor || {}).name\n        throw new Error(`Unrecognized AST node ${nodeName}`)\n    }\n  }\n  \n  /* ***************************************\n   * Nodes that don't require processing\n   ****************************************/\n\n  TextNode(node) {\n    return node.eval()\n  }\n\n  StringNode(node) {\n    return node.eval()\n  }\n\n  NumberNode(node) {\n    return node.eval()\n  }\n\n  /* ***************************************\n   * Nodes requiring processing\n   ****************************************/\n\n  UnaryOp(node) {\n    const result = this.visitNode(node.expr)\n    return node.eval(result)\n  }\n\n  CellNode(node) {\n    const result = this.getCellResult(node.location)\n    return result === undefined\n      ? 0\n      : result\n  }\n\n  BinaryOp(node) {\n    const left = this.visitNode(node.leftNode)\n    const right = this.visitNode(node.rightNode)\n    return node.eval(left, right)\n  }\n\n  CellRange(node) {\n    const [leftColIndex, leftRowIndex] = parseLocation(node.leftCell.location)\n    const [rightColIndex, rightRowIndex] = parseLocation(node.rightCell.location)\n    const colIndexStart = Math.min(leftColIndex, rightColIndex)\n    const colIndexEnd = Math.max(leftColIndex, rightColIndex)\n    const rowIndexStart = Math.min(leftRowIndex, rightRowIndex)\n    const rowIndexEnd = Math.max(leftRowIndex, rightRowIndex)\n    const list = []\n\n    for (let rowI = rowIndexStart; rowI <= rowIndexEnd; rowI++) {\n      for (let colI = colIndexStart; colI <= colIndexEnd; colI++) {\n        const location = `${getColumnLabel(colI)}-${rowI + 1}`\n        const result = this.getCellResult(location)\n\n        if (result !== undefined) {\n          list.push(result)\n        }\n      }\n    }\n\n    return list\n  }\n\n  getCellResult(otherLocation) {\n    let result\n\n    if (!this.isLocationValid(otherLocation)) {\n      throw new Error('Location out of bounds')\n    }\n\n    if (this.cache[otherLocation] !== undefined) {\n      return this.cache[otherLocation]\n    }\n\n    result = graph.visitCell(otherLocation)\n    this.cache[otherLocation] = result\n    return result\n  }\n\n  FuncOp(node) {\n    const evaluatedArgs = []\n\n    for (let childNode of node.argNodes) {\n      const result = this.visitNode(childNode)\n\n      if (childNode._name === 'CellRange') {\n        evaluatedArgs.push(...result)\n      } else {\n        evaluatedArgs.push(result)\n      }\n    }\n\n    return node.eval(evaluatedArgs)\n  }\n\n  isLocationValid(location) {\n    const [colIndex, rowIndex] = parseLocation(location)\n\n    if (Math.min(colIndex, rowIndex) < 0) { return false }\n    if (colIndex >= this.state.columns) { return false }\n    if (rowIndex >= this.state.rows) { return false }\n    return true\n  }\n\n  errorResponse() {\n    const { message: errorMsg } = this.error\n\n    if (errorMsg.match(/division by zero/i)) {\n      return ERR_DIVISION_BY_ZERO\n    } else if (errorMsg.match(/circular reference/i)) {\n      return ERR_CIRCULAR_REFERENCE\n    } else {\n      return ERR_GENERIC\n    }\n  }\n}\n\nexport default Interpreter\nexport {\n  ERR_DIVISION_BY_ZERO,\n  ERR_CIRCULAR_REFERENCE,\n  ERR_GENERIC,\n}\n","import ReduxConnect from './ReduxConnect'\nimport Interpreter from './Interpreter'\n\n\nclass Vertex {\n  constructor(entered) {\n    this.entered = entered\n    this.error = null\n    this.result = null\n    this.ast = null\n  }\n}\n\nclass Graph {\n  constructor() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  recalculate(location) {\n    this.setPendingNodes()\n    this.dfs(location)\n    this.updateStore()\n  }\n\n  setPendingNodes() {\n    this.pending = new Set()\n\n    Object.keys(this.adj).forEach(vertex => {\n      this.pending.add(vertex)\n    })\n  }\n\n  dfs(location) {\n    while (this.pending.size > 0) {\n      if (!location) {\n        location = [...this.pending][0]\n      }\n\n      try {\n        this.visited = new Set([location])\n        const interpreter = new Interpreter(location)\n        interpreter.visitAST(location)\n      } catch (error) {}\n\n      this.visited.forEach(location => this.pending.delete(location))\n      location = null\n    }\n\n    this.visited = null\n    this.pending = null\n  }\n\n  visitCell(location) {\n    if (!this.hasVertex(location)) {\n      return\n    }\n\n    this.testPathCycle(location)\n    this.pending.delete(location)\n    this.visited.add(location)\n    const interpreter = new Interpreter(location)\n    const result = interpreter.visitAST(location)\n    this.visited.delete(location)\n    return result\n  }\n\n  getCellResult(location) {\n    if (location in this.adj) {\n      return graph.adj[location].result\n    } else {\n      return ''\n    }\n  }\n\n  testPathCycle(location) {\n    if (this.visited.has(location)) {\n      throw new Error('Circular reference')\n    }\n  }\n\n  updateStore() {\n    const locationKeys = new Set(this.store.locations)\n\n    for (let [location, vertex] of Object.entries(this.adj)) {\n      const { entered, result } = vertex\n\n      locationKeys.delete(location)\n\n      if (result !== this.store.getCellResult(location)) {\n        this.store.replaceCellData(location, entered, result)\n      }\n    }\n\n    for (let location of locationKeys) {\n      this.store.clearCell(location)\n    }\n  }\n\n  addVertex(location, entered) {\n    const vertex = new Vertex(entered)\n    this.adj[location] = vertex\n    return vertex\n  }\n\n  hasVertex(location) {\n    return location in this.adj\n  }\n\n  getVertex(location) {\n    this.testMissingLocation(location)\n    return this.adj[location]\n  }\n\n  delVertex(location) {\n    if (location in this.adj) {\n      delete this.adj[location]\n      this.recalculate()\n    }\n  }\n\n  resetAll() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  testMissingLocation(location) {\n    if (!this.hasVertex(location)) {\n      throw new Error('Missing location')\n    }\n  }\n}\n\nconst graph = new Graph()\n\n\nexport default graph\nexport {\n  Vertex,\n  Graph,\n}\n","import { createAction } from 'redux-starter-kit'\n\n\nexport function setActiveCell(location) {\n  return (dispatch, getState) => {\n    const cellData = getState().tableData[location]\n    const entered = (cellData || {}).entered || ''\n\n    return Promise.resolve(dispatch({\n      type: 'SET_ACTIVE_CELL',\n      payload: {\n        location,\n        entered,\n      }\n    }))\n  }\n}\n\nexport function openCellInputter(cellRect, willReplaceValue) {\n  return (dispatch, getState) => {\n    let newEntered = willReplaceValue\n      ? ''\n      : getState().global.activeCell.entered\n\n    return Promise.resolve(dispatch({\n      type: 'OPEN_CELL_INPUTTER',\n      payload: {\n        isCellInputterOpen: true,\n        newEntered,\n        cellRect,\n      }\n    }))\n  }\n}\n\nexport const closeCellInputter = createAction('CLOSE_CELL_INPUTTER')\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\n\n\nconst Root = styled.div`\n  display: flex;\n  align-items: center;\n  border: 2px solid transparent;\n  line-height: 1.1em;\n  height: 100%;\n  width: 100%;\n  padding: 2px;\n\n  :focus {\n    border: 2px solid salmon;\n  }\n`\n\nfunction Datum({ fwdRef, location, result, onClick, onKeyDown, onDoubleClick, onFocus }) {\n  const getStyle = () => {\n    let style = {}\n\n    if (typeof result === 'number') {\n      style = {\n        whiteSpace: 'nowrap',\n        textOverflow: 'clip',\n        overflow: 'hidden',\n      }\n    }\n\n    return style\n  }\n\n  return (\n    <Root\n      ref={fwdRef}\n      data-cell='result'\n      data-location={location}\n      css={getStyle()}\n      tabIndex='0'\n      onClick={onClick}\n      onKeyDown={onKeyDown}\n      onDoubleClick={onDoubleClick}\n      onFocus={onFocus}\n    >\n    {result}\n  </Root>\n  )\n}\n\nDatum.propTypes = {\n  fwdRef: PropTypes.object.isRequired,\n  result: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  onClick: PropTypes.func.isRequired,\n  onKeyDown: PropTypes.func.isRequired,\n  onDoubleClick: PropTypes.func.isRequired,\n  onFocus: PropTypes.func.isRequired,\n}\n\nexport default Datum\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { clearCellData } from '~/actions/tableDataActions'\nimport { openCellInputter, setActiveCell } from '~/actions/globalActions'\nimport Datum from './Datum'\n\n\nexport class Result extends React.PureComponent {\n\n  static propTypes = {\n    // props\n    location: PropTypes.string.isRequired,\n    fwdRef: PropTypes.object.isRequired,\n    // redux\n    openCellInputter: PropTypes.func.isRequired,\n    clearCellData: PropTypes.func.isRequired,\n    setActiveCell: PropTypes.func.isRequired,\n    result: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n  }\n\n  constructor(props) {\n    super()\n    this.handleOnClick = this.handleOnClick.bind(this)\n    this.handleOnDoubleClick = this.handleOnDoubleClick.bind(this)\n    this.handleOnFocus = this.handleOnFocus.bind(this)\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.refDatum = props.fwdRef\n  }\n\n  openCellInputter(willReplaceValue) {\n    const datumRect = this.refDatum.current.getBoundingClientRect()\n    const cellRect = JSON.parse(JSON.stringify(datumRect))\n    this.props.openCellInputter(cellRect, willReplaceValue)\n  }\n\n  handleOnFocus() {\n    this.props.setActiveCell(this.props.location)\n  }\n\n  handleOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleOnDoubleClick(event) {\n    event.stopPropagation()\n    this.openCellInputter(false)\n  }\n\n  handleOnKeyDown({ key }) {\n    if (['Delete', 'Backspace'].includes(key)) {\n      const valueStr = '' + this.props.result\n\n      if (valueStr.length > 0) {\n        this.props.clearCellData(this.props.location)\n      }\n      // key pressed is a printable symbol, ex: 'a', '1', ','\n      // can be further refined, but for now it's fine\n    } else if (key.length === 1) {\n      this.openCellInputter(true)\n    }\n  }\n\n  render() {\n    return (\n      <Datum\n        fwdRef={this.refDatum}\n        location={this.props.location}\n        result={this.props.result}\n        onClick={this.handleOnClick}\n        onDoubleClick={this.handleOnDoubleClick}\n        onFocus={this.handleOnFocus}\n        onKeyDown={this.handleOnKeyDown}\n      />\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.tableData[ownProps.location]\n  const result = cell ? cell.result : ''\n  return { result }\n}\n\nconst mapDispatchToProps = { clearCellData, openCellInputter, setActiveCell }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Result)\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { DEFAULT_COL_WIDTH } from '~/library/constants'\n\n\nconst Root = styled.div`\n  cursor: cell;\n  overflow: hidden;\n  font-size: 13px;\n  border-right: 1px solid ${props => props.theme.colors.cell.border};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.border};\n  outline: none;\n`\n\nexport function OutterBorder({ width, height, onClick, onDoubleClick, children }) {\n  return (\n    <Root\n      data-cell='border'\n      onClick={onClick}\n      onDoubleClick={onDoubleClick}\n      css={{\n        width,\n        height: height && height\n      }}\n    >\n      {children}\n    </Root>\n  )\n}\n\nOutterBorder.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onDoubleClick: PropTypes.func.isRequired,\n  location: PropTypes.string.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n}\n\nOutterBorder.defaultProps = {\n  width: DEFAULT_COL_WIDTH,\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const [colLabel, rowLabel] = ownProps.location.split('-')\n  const width = state.tableMeta.colWidths[colLabel]\n  const height = state.tableMeta.rowHeights[rowLabel]\n  return { width, height }\n}\n\nexport default connect(mapStateToProps)(OutterBorder)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Result from './Result'\nimport OutterBorder from './OutterBorder'\n\n\nclass ResultCell extends React.PureComponent {\n\n  static propTypes = {\n    location: PropTypes.string.isRequired,\n  }\n\n  refDatum = React.createRef()\n\n  constructor() {\n    super()\n    this.handleOnClick = this.handleOnClick.bind(this)\n    this.handleOnDoubleClick = this.handleOnDoubleClick.bind(this)\n  }\n\n  focusDatum() {\n    setTimeout(() => this.refDatum.current.focus(), 0)\n  }\n\n  handleOnClick() {\n    this.focusDatum()\n  }\n\n  handleOnDoubleClick() {\n    this.focusDatum()\n  }\n\n  render() {\n    const { location } = this.props\n\n    return (\n      <OutterBorder\n        onClick={this.handleOnClick}\n        onDoubleClick={this.handleOnDoubleClick}\n        location={location}\n      >\n        <Result\n          location={location}\n          fwdRef={this.refDatum}\n        />\n      </OutterBorder>\n    )\n  }\n}\n\nexport default ResultCell\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport RowHeader from '../cell/RowHeader'\nimport ResultCell from '../ResultCell/ResultCell'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nfunction DataRow({ rowNumber, colLabels }) {\n  const dataCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => {\n      const location = `${colLabels[i]}-${rowNumber}`\n      return (\n        <ResultCell\n          key={i}\n          location={location}\n        />\n      )\n    })\n  )\n\n  return (\n    <Row\n      data-row={rowNumber}\n    >\n      <RowHeader\n        label={rowNumber}\n      />\n      {dataCells()}\n    </Row>\n  )\n}\n\nDataRow.propTypes = {\n  rowNumber: PropTypes.number,\n  colLabels: PropTypes.arrayOf(PropTypes.string),\n}\n\nexport default DataRow\n\n","import { Machine, assign } from 'xstate'\n\nimport { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nfunction getTargetLocation({ rows, columns, rowIndex, colIndex, key }) {\n  switch (key) {\n    case 'ArrowUp':\n      rowIndex = Math.max(0, rowIndex - 1)\n      break\n    case 'ArrowRight':\n      colIndex = Math.min(columns - 1, colIndex + 1)\n      break\n    case 'ArrowDown':\n    case 'Enter':\n      rowIndex = Math.min(rows - 1, rowIndex + 1)\n      break\n    case 'ArrowLeft':\n      colIndex = Math.max(0, colIndex - 1)\n      break\n    default:\n      return null\n  }\n\n  const colLabel = getColumnLabel(colIndex)\n  const rowLabel = '' + (rowIndex + 1)\n\n  return `${colLabel}-${rowLabel}`\n}\n\nfunction focusTargetCell(ctx) {\n  if (!ctx.endLocation) { return Promise.resolve(false) }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const id = `[data-location=\"${ctx.endLocation}\"]`\n      const cell = document.querySelector(id)\n      if (cell) { cell.focus() }\n      resolve(true)\n    }, 0)\n  })\n}\n\nconst state = {\n  id: 'keyboardNav',\n  initial: 'idle',\n  context: {\n    columns: null,\n    rows: null,\n    key: null,\n    colIndex: null,\n    rowIndex: null,\n    endLocation: null,\n    wasFocused: false,\n  },\n  states: {\n    idle: {\n      on: {\n        'MOVE_FOCUS': {\n          actions: ['setNewContext', 'calcTargetLocation'],\n          target: 'focusTarget',\n        }\n      }\n    },\n    focusTarget: {\n      invoke: {\n        src: focusTargetCell,\n        onDone: {\n          actions: assign({ wasFocused: (ctx, event) => event.data }),\n          target: 'idle',\n        },\n      },\n    },\n  },\n}\n\nconst actions = {\n  actions: {\n    setNewContext: assign((ctx, { key, location }) => {\n      const [colIndex, rowIndex] = parseLocation(location)\n      return { colIndex, rowIndex, key }\n    }),\n    calcTargetLocation: assign({\n      endLocation: (ctx) => {\n        return getTargetLocation(ctx)\n      }\n    }),\n  },\n}\n\nfunction getKeyboardNavMachine(rows, columns) {\n  const newContext = {\n    ...state.context,\n    columns,\n    rows,\n  }\n\n  return Machine(state, actions, newContext)\n}\n\nexport {\n  state,\n  actions,\n  getTargetLocation,\n  focusTargetCell,\n}\n\nexport default getKeyboardNavMachine\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport { interpret } from 'xstate'\n\nimport ColHeaderRow from './ColHeaderRow'\nimport DataRow from './DataRow'\nimport { getColumnNames } from '~/library/utils'\nimport getKeyboardNavMachine from './keyboardNavMachine'\n\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n  overflow: hidden;\n  border-top: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-left: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n\n  * {\n    box-sizing: border-box;\n  }\n`\n\nexport class Table extends React.PureComponent {\n  static propTypes = {\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleTableOnClick = this.handleTableOnClick.bind(this)\n    this.handleTableOnKeyDown = this.handleTableOnKeyDown.bind(this)\n    this.colLabels = getColumnNames(props.columns)\n  }\n\n  keyboardNavMachine = getKeyboardNavMachine(this.props.rows, this.props.columns)\n  focusService = interpret(this.keyboardNavMachine)\n\n  componentDidMount() {\n    this.focusService.start()\n  }\n\n  componentWillUnmount() {\n    this.focusService.stop()\n  }\n\n  handleTableOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleTableOnKeyDown(event) {\n    event.stopPropagation()\n    const { location } = event.target.dataset\n\n    if (location) {\n      this.moveFocus(event.key, event.target.dataset.location)\n    }\n  }\n\n  moveFocus(key, location) {\n    this.focusService.send({ type: 'MOVE_FOCUS', key, location })\n  }\n\n  renderColHeaderRow(i) {\n    return (\n      <ColHeaderRow\n        key={i}\n        rows={this.props.rows}\n        colLabels={this.colLabels}\n      />\n    )\n  }\n\n  renderDataRows(rowNumber) {\n    return (\n      <DataRow\n        key={rowNumber}\n        rowNumber={rowNumber}\n        colLabels={this.colLabels}\n      />\n    )\n  }\n\n  renderRows() {\n    return new Array(this.props.rows + 1).fill(0).map((_, i) => {\n      if (i === 0) {\n        return this.renderColHeaderRow(i)\n      } else {\n        return this.renderDataRows(i)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Grid\n        data-table='app'\n        onClick={this.handleTableOnClick}\n        onKeyDown={this.handleTableOnKeyDown}\n      >\n        {this.renderRows()}\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { rows, columns } = state.global\n  return { rows, columns }\n}\n\nexport default connect(mapStateToProps)(Table)\n","import React from 'react'\n\n\nexport const InputContext = React.createContext()\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport { InputContext } from './InputContext'\n\n\nconst Root = styled.div`\n  background: ${props => props.theme.colors.dropdown.normal};\n  margin-top: 1px;\n  box-shadow: 0 0 5px ${props => props.theme.colors.shadow};\n  border: 1px solid ${props => props.theme.colors.dropdown.active};\n  width: 300px;\n  padding: 6px 8px;\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  padding-top: 12px;\n  font-size: 12px;\n`\n\nconst P = styled.p`\n  line-height: 1em;\n  font-size: 13px;\n`\n\nconst Hr = styled.hr`\n  border: 0;\n  border-top: 1px solid ${props => props.theme.colors.dropdown.active};\n`\n\nclass FuncDescription extends React.PureComponent {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    cursorPos: PropTypes.number,\n    fnScopes: PropTypes.array,\n  }\n\n  getFnScope() {\n    const { fnScopes, cursorPos } = this.props\n    let currScope\n\n    for (let scope of fnScopes) {\n      if (cursorPos >= scope.startIndex + 1) {\n        currScope = scope\n      } else {\n        break\n      }\n    }\n\n    if (currScope && currScope.endIndex === null) { return currScope}\n    if (currScope && cursorPos - 1 < currScope.endIndex) { return currScope }\n    return null\n  }\n\n  getFnNode(scope) {\n    const key = scope.fnName.toUpperCase()\n    return formulaFuncs[key]\n  }\n\n  render() {\n    const scope = this.getFnScope()\n    const { inputRect } = this.context\n    if (!inputRect) { return null }\n    const { bottom: top, left } = inputRect\n    let fnNode\n\n    if (!scope) { return null }\n    fnNode = this.getFnNode(scope)\n\n    return (\n      <Root\n        css={{ top, left }}\n      >\n        <Pre\n          css={css`\n            padding-bottom: 6px;\n          `}\n        >\n          {fnNode.definition}\n        </Pre>\n        <Hr />\n        <Subtitle>Example</Subtitle>\n        <Pre>{fnNode.example}</Pre>\n        <Subtitle>Summary</Subtitle>\n        <P>{fnNode.summary}</P>\n      </Root>\n    )\n  }\n}\n\nFuncDescription.propTypes = {\n  cursorPos: PropTypes.number,\n  fnScopes: PropTypes.array,\n}\n\nexport default FuncDescription\n\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport styled from '@emotion/styled'\n\n\nconst NoOp = () => {}\n\nconst Li = styled.li`\n  outline: none;\n`\n\nfunction DropdownItem({ item, index, isActive, onMouseEnter }) {\n  return (\n    <Li\n      tabIndex={0}\n      onMouseEnter={() => onMouseEnter(index)}\n    >\n      {isActive && item.active ? item.active : item.base}\n    </Li>\n  )\n}\n\nDropdownItem.propTypes = {\n  item: PropTypes.shape({\n    base: PropTypes.node.isRequired,\n    active: PropTypes.node,\n  }),\n  index: PropTypes.number.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  onMouseEnter: PropTypes.func,\n}\n\nDropdownItem.defaultProps = {\n  onMouseEnter: NoOp,\n}\n\nexport default DropdownItem\n","\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport InteractiveListItem from './InteractiveListItem'\n\n\nconst Ul = styled.ul`\n  position: fixed;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`\n\nclass InteractiveList extends React.PureComponent {\n\n  static propsTypes = {\n    onMouseEnter: PropTypes.func,\n    items: PropTypes.array.isRequired,\n    top: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    styles: PropTypes.shape({\n      ul: PropTypes.object,\n      li: PropTypes.object,\n    }),\n  }\n\n  renderListItems() {\n    return this.props.items\n      .map((item, index) => (\n        <InteractiveListItem\n          key={index}\n          index={index}\n          item={item.item}\n          style={{...this.props.styles.li}}\n          isActive={item.isActive}\n          onMouseEnter={this.props.onMouseEnter}\n        />\n      ))\n  }\n\n  render() {\n    const { items, top, left, styles } = this.props\n\n    if (items.length === 0) { return null }\n\n    return (\n      <Ul\n        tabIndex={-1}\n        style={{ top, left, ...styles.ul }}\n      >\n        {this.renderListItems()}\n      </Ul>\n    )\n  }\n}\n\nexport default InteractiveList\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport InteractiveList from '~/library/InteractiveList'\nimport Token from '~/formulas/Token'\nimport { InputContext } from './InputContext'\nimport { withTheme } from 'emotion-theming'\n\n\nconst Dialog = styled.dialog`\n  border: 0;\n`\n\nconst baseItemStyle = css`\n  padding: 6px 8px;\n`\n\nconst ItemBaseRoot = styled.div`\n  ${baseItemStyle}\n  background: ${props => props.theme.colors.dropdown.normal};\n`\n\nconst ItemActiveRoot = styled.div`\n  ${baseItemStyle}\n  background: ${props => props.theme.colors.dropdown.active};\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  font-size: 12px;\n`\n\nclass FuncSelector extends React.Component {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    token: PropTypes.instanceOf(Token),\n    colors: PropTypes.object,\n    theme: PropTypes.object,\n  }\n\n  state = {\n    listItems: [],\n    itemIndex: 0,\n    keyEvent: null,\n    isVisible: false,\n  }\n\n  constructor() {\n    super()\n    this.handleOnClick = this.handleOnClick.bind(this)\n    this.setIndex = this.setIndex.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.state.listItems !== nextState.listItems\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.updateContextData(prevState)\n    this.updateListItems(prevProps)\n    this.keyActions()\n  }\n\n  componentWillUnmount() {\n    this.context.setIsFuncSelectorVisible(false)\n  }\n\n  updateListItems(prevProps) {\n    if (prevProps.token === this.props.token) { return }\n\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  updateContextData(prevState) {\n    const { keyEvent } = this.context\n\n    if (prevState.keyEvent !== keyEvent) {\n      this.setState({ keyEvent })\n      this.keyEventSetIndex(keyEvent)\n    }\n  }\n\n  keyActions() {\n    const { keyEvent } = this.context\n    if (this.state.keyEvent === keyEvent) { return }\n    if (['Enter', 'Tab'].includes(keyEvent.key) && this.state.isVisible) {\n      this.updateInputValue()\n    }\n  }\n\n  updateInputValue() {\n    const currInputValue = this.context.inputValue\n    const { token } = this.props\n    const { fnName } = this.state.listItems[this.state.itemIndex]\n    const rightChunkIndex = token.index + token.text.length\n    const leftChunk = currInputValue.slice(0, token.index)\n    const rightChunk = currInputValue.slice(rightChunkIndex)\n    const newInputValue = `${leftChunk}${fnName}(${rightChunk}`\n    const cursorPos = leftChunk.length + fnName.length + 1\n    this.context.setInputValue(newInputValue, cursorPos)\n  }\n\n  setListItems() {\n    const { token } = this.props\n    const text = token.text.toUpperCase()\n    const listItems = Object\n      .keys(formulaFuncs)\n      .filter(fnName => fnName.startsWith(text))\n      .sort()\n      .map(fnName => ({\n        item: {\n          base: this.itemBase(fnName),\n          active: this.itemActive(fnName),\n        },\n        isActive: false,\n        fnName,\n      }))\n    let isVisible = false\n    let itemIndex\n\n    itemIndex = Math.max(Math.min(listItems.length - 1, this.state.itemIndex), 0)\n\n    if (listItems.length > 0) {\n      listItems[itemIndex].isActive = isVisible = true\n    }\n\n    this.context.setIsFuncSelectorVisible(isVisible)\n    this.setState({ listItems, itemIndex, isVisible })\n  }\n\n  keyEventSetIndex(keyEvent) {\n    let itemIndex = this.state.itemIndex\n\n    switch (keyEvent.key) { // eslint-disable-line default-case\n      case 'ArrowUp':\n          itemIndex = this.state.itemIndex - 1\n        break\n      case 'ArrowDown':\n          itemIndex = this.state.itemIndex + 1\n        break\n    }\n\n    this.setState({ itemIndex }, () => {\n      this.setListItems()\n    })\n  }\n\n  setIndex(itemIndex) {\n    this.setState({ itemIndex }, () => {\n      this.setListItems()\n    })\n  }\n\n  itemBase(fnName) {\n    return (\n      <ItemBaseRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n      </ItemBaseRoot>\n    )\n  }\n\n  itemActive(fnName) {\n    return (\n      <ItemActiveRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n        <Subtitle>\n          {formulaFuncs[fnName].summary}\n        </Subtitle>\n      </ItemActiveRoot>\n    )\n  }\n\n  getListStyles() {\n    const { theme } = this.props\n\n    return {\n      ul: {\n        marginTop: 1,\n        boxShadow: `0 0 5px ${theme.colors.shadow}`,\n        border: `1px solid ${theme.colors.dropdown.active}`,\n        width: 300,\n      }\n    }\n  }\n\n  handleOnClick() {\n    this.updateInputValue()\n  }\n\n  render() {\n    const { listItems, isVisible } = this.state\n    const { inputRect } = this.context\n\n    return (\n      <Dialog\n        open={isVisible}\n        onClick={this.handleOnClick}\n      >\n        <InteractiveList\n          items={listItems}\n          top={Math.round(inputRect.bottom)}\n          left={Math.round(inputRect.left)}\n          styles={this.getListStyles()}\n          onMouseEnter={this.setIndex}\n        />\n      </Dialog>\n    )\n  }\n}\n\nexport default withTheme(FuncSelector)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { TOKENS as t } from '~/formulas/Lexer'\nimport FuncDescription from './FuncDescription'\nimport FuncSelector from './FuncSelector'\n\n\nclass Suggestions extends React.PureComponent {\n\n  static propTypes = {\n    tokens: PropTypes.array.isRequired,\n    cursorPos: PropTypes.number,\n  }\n\n  static defaultProps = {\n    cursorPos: 0,\n  }\n\n  state = {\n    fnScopes: [],\n  }\n\n  componentDidMount() {\n    this.setFnScopes()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.tokens !== this.props.tokens) {\n      this.setFnScopes()\n    }\n  }\n\n  setFnScopes() {\n    const stack = []\n    const fnScopes = []\n\n    for (let token of this.props.tokens) {\n      if (token.type === t.FUNCTION) {\n        const scope = { fnName: token.text, startIndex: token.index, endIndex: null }\n        stack.push(scope)\n        fnScopes.push(scope)\n      } else if (token.type === t.LPAREN) {\n        stack.push('(')\n      } else if (token.type === t.RPAREN) {\n        stack.pop()\n        if (stack.length > 0 && stack[stack.length - 1] !== '(') {\n          const scope = stack.pop()\n          scope.endIndex = token.index - 1\n        }\n      }\n    }\n\n    fnScopes.sort((a, b) => a.startIndex - b.startIndex)\n    this.setState({ fnScopes })\n  }\n\n  getCurrTokenIndex(tokens, cursorPos) {\n    let index\n\n    for (index = 0; index < tokens.length; index++) {\n      const token = tokens[index]\n      const endIndex = token.index + token.text.length\n\n      if (cursorPos > token.index && cursorPos <= endIndex) {\n        break\n      }\n    }\n\n    return index\n  }\n\n  getCompareTokens() {\n    const { tokens, cursorPos } = this.props\n    const index = this.getCurrTokenIndex(tokens, cursorPos)\n    const tokenBefore = index > 0 && tokens[index - 1]\n    const tokenCurr = tokens[index]\n    const tokenAfter = index < tokens.length - 2 && tokens[index + 1]\n    return [ tokenBefore, tokenCurr, tokenAfter ]\n  }\n\n  getFuncSelector() {\n    const [ tokenBefore, tokenCurr, tokenAfter ] = this.getCompareTokens()\n\n    if (this.props.tokens.length < 2) { return null }\n\n    const option1 = (\n      tokenBefore\n      && tokenCurr\n      && tokenAfter\n      && tokenBefore.category === 'operator'\n      && [t.UNKNOWN, t.FUNCTION].includes(tokenCurr.type)\n      && tokenAfter.type !== t.RPAREN\n    )\n\n    const option2 = (\n      tokenBefore\n      && tokenCurr\n      && !tokenAfter\n      && [t.UNKNOWN, t.FUNCTION].includes(tokenCurr.type)\n    )\n\n    if (option1 || option2) {\n      return (\n        <FuncSelector\n            token={tokenCurr}\n        />\n      )\n    }\n  }\n\n  render() {\n    const renderedFuncSelector = this.getFuncSelector()\n\n    if (renderedFuncSelector) {\n      return renderedFuncSelector\n    } else {\n      return (\n        <FuncDescription\n          cursorPos={this.props.cursorPos}\n          fnScopes={this.state.fnScopes}\n        />\n      )\n    }\n  }\n}\n\nexport default Suggestions\n","import styled from '@emotion/styled'\n\n\nexport const Input = styled.input`\n  align-items: center;\n  background-color: white;\n  border: 2px solid salmon;\n  box-shadow: 0 0 5px ${props => props.theme.colors.shadow};\n  box-sizing: border-box;\n  display: flex;\n  font-size: 13px;\n  height: 100%;\n  outline: none;\n  padding: 2px;\n  width: 100%;\n`\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { css, jsx } from '@emotion/core' // eslint-disable-line\n\nimport { Input as BaseInput } from './Inputter'\n\n\nconst INPUT_PADDING_RIGHT = 15\n\nconst Input = styled(BaseInput)`\n  position: absolute;\n  margin-top: -200vh;\n  visibility: hidden;\n`\n\nclass HiddenInput extends React.PureComponent {\n\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    cellWidth: PropTypes.number.isRequired,\n    setInputWidth: PropTypes.func.isRequired,\n  }\n\n  refInput = React.createRef()\n\n  componentDidMount() {\n    this.setInputWidth()\n  }\n\n  componentDidUpdate(prevProps, prevState) { // eslint-disable-line\n    this.setInputWidth()\n  }\n\n  setInputWidth() {\n    const { cellWidth } = this.props\n    const inputEl = this.refInput.current\n    const textWidth = inputEl.scrollWidth\n    const clientRect = inputEl.getBoundingClientRect()\n    const width = textWidth > clientRect.width\n      ? Math.max(cellWidth, textWidth + INPUT_PADDING_RIGHT)\n      : cellWidth\n\n    this.props.setInputWidth(width)\n  }\n\n  render() {\n    return (\n      <Input\n        ref={this.refInput}\n        defaultValue={this.props.value}\n        css={{\n          width: this.props.cellWidth - INPUT_PADDING_RIGHT,\n        }}\n      />\n    )\n  }\n}\n\nexport default HiddenInput\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\n\n\nconst Root = styled.div`\n  position: fixed;\n`\n\nfunction Wrapper({ top, left, width, height, children }) {\n  return (\n    <Root\n      css={{ top, left, width, height }}\n    >\n      {children}\n    </Root>\n  )\n}\n\nWrapper.propTypes = {\n  top: PropTypes.number.isRequired,\n  left: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n}\n\nexport default Wrapper\n","class KeyboardActions {\n  constructor(component) {\n    this.c = component\n  }\n\n  run() {\n    const { key } = this.c.state.keyEvent\n\n    if (this.c.state.isFuncSelectorVisible) {\n      this.funcSelector(key)\n    } else {\n      this.default(key)\n    }\n  }\n\n  funcSelector(key) {\n    switch (key) { // eslint-disable-line\n      case 'Escape':\n        this.c.props.closeCellInputter()\n        break\n      case 'ArrowLeft':\n      case 'ArrowRight':\n        this.c.setState({ cursorPos: this.refInput.current.selectionEnd })\n    }\n  }\n\n  default(key) {\n    switch (key) { // eslint-disable-line\n      case 'Escape':\n        this.c.props.closeCellInputter()\n        break\n      case 'Enter':\n        this.c.setCellValue()\n        this.c.props.closeCellInputter()\n        break\n      case 'ArrowLeft':\n      case 'ArrowRight':\n        this.c.setState({ cursorPos: this.c.refInput.current.selectionEnd })\n    }\n  }\n}\n\nexport default KeyboardActions\n","import { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nclass KeyboardFocuser {\n  constructor(component) {\n    this.c = component\n  }\n\n  run() {\n    const { key } = this.c.state.keyEvent\n    const { location } = this.c.props\n    let elementId\n\n    if (this.c.state.isFuncSelectorVisible) {\n      elementId = this.funcSelectorElId(key, location)\n    } else {\n      elementId = this.defaultElId(key, location)\n    }\n\n    this.focusElement(elementId)\n  }\n\n  funcSelectorElId(key, location) {\n    if (key === 'Escape') {\n      return `[data-cell=\"result\"][data-location=\"${location}\"]`\n    }\n  }\n\n  defaultElId(key, location) {\n    switch (key) {\n      case 'Tab':\n        return `[data-cell=\"result\"][data-location=\"${location}\"]`\n      case 'Enter':\n        return this.defaultEnter(location)\n      case 'Escape':\n        return `[data-cell=\"result\"][data-location=\"${location}\"]`\n      default:\n        // this.c.refInput.current.focus()\n    }\n  }\n\n  defaultEnter(location) {\n    const [colIndex, rowIndex] = parseLocation(location)\n    const nextRowIndex = Math.min(this.c.props.rows - 1, rowIndex + 1)\n    const colLabel = getColumnLabel(colIndex)\n    const rowLabel = '' + (nextRowIndex + 1)\n    const endLocation = `${colLabel}-${rowLabel}`\n\n    return `[data-cell=\"result\"][data-location=\"${endLocation}\"]`\n  }\n\n  focusElement(id) {\n    if (!id) { return }\n\n    const el = document.querySelector(id)\n\n    if (document.activeElement !== el) {\n      el.focus()\n    }\n  }\n}\n\nexport default KeyboardFocuser\n","import Lexer, { TOKENS as t } from '~/formulas/Lexer'\n\n\nclass CellValueSetter {\n  constructor(component) {\n    this.c = component\n  }\n\n  run() {\n    const { location } = this.c.props\n    const { inputValue } = this.c.state\n    let cellValue\n\n    if (this.isWhitespace(inputValue)) {\n      this.c.props.clearCellData(location)\n      return\n    }\n\n    if (this.isFormula(inputValue)) {\n      cellValue = this.sanitizeValue(inputValue)\n    } else {\n      cellValue = inputValue\n    }\n\n    this.c.props.setCellData(location, cellValue)\n  }\n\n  isFormula(text) {\n    return text.length > 0 && text[0] === '='\n  }\n\n  isWhitespace(text) {\n    return text.length === 0 || Boolean(text.match(/^\\s+$/))\n  }\n\n  sanitizeValue(value) {\n    const lexer = new Lexer(value)\n    const tokens = lexer.getTokens()\n\n    return tokens\n      .map(token => {\n        switch (token.type) {\n          case t.FUNCTION:\n            return token.text.toUpperCase()\n          case t.NUMBER:\n            return token.value\n          default:\n            return token.text\n        }\n      })\n      .join('')\n  }\n}\n\nexport default CellValueSetter\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { setCellData, clearCellData } from '~/actions/tableDataActions'\nimport Lexer from '~/formulas/Lexer'\nimport Suggestions from './Suggestions'\nimport { InputContext } from './InputContext'\nimport { closeCellInputter } from '~/actions/globalActions'\nimport HiddenInput from './HiddenInput'\nimport { Input } from './Inputter'\nimport Wrapper from './Wrapper'\nimport KeyboardActions from './KeyboardActions'\nimport KeyboardFocuser from './KeyboardFocuser'\nimport CellValueSetter from './CellValueSetter'\n\n\nexport class CellInputter extends React.PureComponent {\n\n  static propTypes = {\n    // redux\n    cellRect: PropTypes.object.isRequired,\n    clearCellData: PropTypes.func.isRequired,\n    closeCellInputter: PropTypes.func.isRequired,\n    columns: PropTypes.number.isRequired,\n    entered: PropTypes.string.isRequired,\n    newEntered: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    rows: PropTypes.number.isRequired,\n    setCellData: PropTypes.func.isRequired,\n    isCellInputterOpen: PropTypes.bool,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.setIsFuncSelectorVisible = this.setIsFuncSelectorVisible.bind(this)\n    this.setInputValue = this.setInputValue.bind(this)\n    this.setInputWidth = this.setInputWidth.bind(this)\n    this.keyboardActions = new KeyboardActions(this)\n    this.keyboardFocuser = new KeyboardFocuser(this)\n    this.cellValueSetter = new CellValueSetter(this)\n  }\n\n  state = {\n    tokens: [],\n    isFuncSelectorVisible: false,\n    inputValue: '',\n    keyEvent: { key: '' },\n    cursorPos: 0,\n    width: null,\n  }\n\n  refInput = React.createRef()\n\n  componentDidMount() {\n    this.focusInputTag()\n    this.setInputValue(this.props.newEntered)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.keyEvent !== this.state.keyEvent) {\n      this.keyboardFocuser.run()\n      this.keyboardActions.run()\n    }\n\n    if (prevState.inputValue !== this.state.inputValue) {\n      this.tokenizeInputValue()\n    }\n  }\n\n  setInputWidth(width) {\n    if (this.state.width !== width) {\n      this.setState({ width })\n    }\n  }\n\n  tokenizeInputValue() {\n    const { inputValue } = this.state\n    const lexer = new Lexer(inputValue)\n    const tokens = lexer.getTokens()\n    this.setState({ tokens })\n  }\n\n  focusInputTag() {\n    const inputEl = this.refInput.current\n\n    setTimeout(() => {\n      inputEl.focus()\n      inputEl.selectionStart = inputEl.value.length\n    }, 0)\n  }\n\n  setIsFuncSelectorVisible(isFuncSelectorVisible) {\n    this.setState({ isFuncSelectorVisible })\n  }\n\n  setInputValue(inputValue, cursorPos) {\n    const inputEl = this.refInput.current\n\n    this.setState({ inputValue, cursorPos: inputValue.length }, () => {\n      inputEl.focus()\n      inputEl.selectionStart = cursorPos\n      inputEl.selectionEnd = cursorPos\n    })\n  }\n\n  handleOnChange(event) {\n    const { target: { value } } = event\n    const cursorPos = event.target.selectionStart\n    this.setState({ inputValue: value, cursorPos })\n  }\n\n  handleOnKeyDown(event) {\n    const { key, target: { value } } = event\n\n    if (this.state.isFuncSelectorVisible && key === 'Tab') {\n      event.preventDefault()\n    }\n\n    this.setState({ keyEvent: { key }, inputValue: value })\n  }\n\n  handleOnBlur(event) {\n    if (this.state.isFuncSelectorVisible) { return }\n\n    this.setState({ inputValue: event.target.value }, () => {\n      console.count('set cell value')\n      this.cellValueSetter.run()\n      this.props.closeCellInputter()\n    })\n  }\n\n  render() {\n    const inputEl = this.refInput.current\n    const inputRect = inputEl && inputEl.getBoundingClientRect()\n    const { top, left, height, width: cellWidth } = this.props.cellRect\n    const width = this.state.width || cellWidth\n\n    return (\n      <InputContext.Provider\n        value={{\n          inputRect,\n          setIsFuncSelectorVisible: this.setIsFuncSelectorVisible,\n          setInputValue: this.setInputValue,\n          keyEvent: this.state.keyEvent,\n          inputValue: this.state.inputValue,\n        }}\n      >\n        <Wrapper\n          width={width}\n          height={height}\n          top={top}\n          left={left}\n        >\n          <HiddenInput\n            value={this.state.inputValue}\n            cellWidth={width}\n            setInputWidth={this.setInputWidth}\n          />\n          <Input\n            ref={this.refInput}\n            data-cell='input'\n            data-location={this.props.location}\n            value={this.state.inputValue}\n            onChange={this.handleOnChange}\n            onKeyDown={this.handleOnKeyDown}\n            onBlur={this.handleOnBlur}\n          />\n          <Suggestions\n            tokens={this.state.tokens}\n            cursorPos={this.state.cursorPos}\n          />\n        </Wrapper>\n      </InputContext.Provider>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {\n    global: {\n      cellInputter: {\n        isCellInputterOpen,\n        newEntered,\n        cellRect,\n      },\n      activeCell: {\n        location,\n        entered,\n      },\n      rows,\n      columns,\n    }\n  } = state\n\n  return { location, entered, newEntered, isCellInputterOpen, cellRect, rows, columns }\n}\n\nconst mapDispatchToProps = { setCellData, clearCellData, closeCellInputter }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CellInputter)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\n\nimport Header from './components/header/Header'\nimport Table from './components/table/Table'\nimport CellInputter from './components/CellInputter/CellInputter'\n\n\nconst Container = styled.div`\n  display: grid;\n  grid:\n    \"left-blank main right-blank\" 100vh\n    / auto minmax(auto, 1000px) auto;\n`\n\nconst Main = styled.main`\n  grid-area: main;\n`\n\nfunction App({ isCellInputterOpen }) {\n  return (\n    <Container>\n      <Main>\n        {isCellInputterOpen &&  <CellInputter />}\n        <div data-dummy-focus-stop tabIndex=\"0\" />\n        <Header />\n        <Table />\n      </Main>\n    </Container>\n  )\n}\n\nApp.propTypes = {\n  isCellInputterOpen: PropTypes.bool,\n  setActiveCell: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => {\n  const { isCellInputterOpen } = state.global.cellInputter\n  return { isCellInputterOpen }\n}\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from 'emotion-theming'\nimport { Global } from '@emotion/core'\nimport 'sanitize.css'\n\nimport appStore from './reducers/'\nimport globalStyles from './styles/globalStyles'\nimport theme from './styles/theme'\nimport App from './App'\n\n\nfunction Root() {\n  return (\n    <Provider store={appStore}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Global styles={globalStyles} />\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default Root\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
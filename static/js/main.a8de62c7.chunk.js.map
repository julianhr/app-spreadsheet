{"version":3,"sources":["reducers/globalReducer.js","reducers/tableDataReducer.js","reducers/tableMetaReducer.js","reducers/index.js","styles/theme.js","styles/globalStyles.js","components/header/Header.jsx","actions/globalActions.js","library/utils.js","library/constants.js","components/cell/ColHeader.jsx","actions/tableMetaActions.js","components/cell/RowHeader.jsx","components/table/ColHeaderRow.jsx","formulas/ReduxConnect.js","actions/tableDataActions.js","formulas/Token.js","formulas/formulaFunctions.js","formulas/TokenSanitizer.js","formulas/LexerRule.js","formulas/Lexer.js","formulas/ast.js","formulas/Parser.js","formulas/Interpreter.js","formulas/graph.js","components/ResultCell/Datum.jsx","components/ResultCell/Result.jsx","components/ResultCell/OutterBorder.jsx","components/ResultCell/ResultCell.jsx","components/table/DataRow.jsx","components/table/keyboardNavMachine.js","components/table/Table.jsx","components/FloatingInputter/inputTagProps.js","components/Inputter/InputContext.js","components/Inputter/KeyboardActions.js","components/Inputter/KeyboardFocuser.js","components/Inputter/CellValueSetter.js","components/Inputter/InputTag.jsx","components/Inputter/FuncDescription.jsx","library/InteractiveListItem.jsx","library/InteractiveList.jsx","components/Inputter/FuncSelector.jsx","components/Inputter/Suggestions.jsx","components/Inputter/Inputter.jsx","components/FloatingInputter/InputSizer.jsx","components/FloatingInputter/KeyboardFocuser.js","components/FloatingInputter/FloatingInputter.jsx","components/FormulaBar/inputTagProps.js","components/FormulaBar/FormulaBar.jsx","App.jsx","Root.jsx","serviceWorker.js","index.js"],"names":["createReducer","activeCell","rows","columns","SET_TABLE_DIMENSIONS","state","_ref","payload","SET_ACTIVE_CELL","_ref2","OPEN_FLOATING_INPUTTER","_ref3","Object","objectSpread","CLOSE_FLOATING_INPUTTER","isFloatingInputterOpen","SET_INPUTTER_VALUE_EVENT","_ref4","valueEvent","RESET_INPUTTER","_ref5","SET_CELL_DATA","location","data","DELETE_CELL_DATA","colWidths","rowHeights","SET_COL_WIDTH","colLabel","width","defineProperty","SET_ROW_HEIGHT","rowLabel","height","appStore","configureStore","reducer","global","globalReducer","tableData","tableDataReducer","tableMeta","tableMetaReducer","breaks","xs","sm","md","lg","breakBump","queries","concat","from","breakPoint","upTo","theme","colors","text","table","border","borderDark","labelBkg","dropdown","normal","active","primary","strong","light","field","background","shadow","globalStyles","css","Root","styled_base_browser_esm","target","name","styles","Header","react_default","a","createElement","setActiveCell","dispatch","getState","entered","Promise","resolve","type","cellRect","value","cursorPos","length","closeFloatingInputter","createAction","setInputterValueEvent","BASE_CODE_POINT","codePointAt","clamp","min","max","Math","getColumnNames","cols","names","prevNames","remainCols","newNames","outerLoop","_i","_prevNames","colName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","letter","push","err","return","toConsumableArray","getColumnLabel","num","label","basePoint","curr","codePoint","String","fromCodePoint","floor","reverse","join","parseLocation","_location$split","split","_location$split2","slicedToArray","col","row","reduce","prev","charCodeAt","isNumber","numStr","isPeriodsAndDigits","Boolean","match","periodCount","debounce","time","fn","timeout","apply","arguments","setTimeout","clearTimeout","MIN_COL_WIDTH","MAX_COL_WIDTH","MIN_ROW_HEIGHT","MAX_ROW_HEIGHT","props","BtnWidth","ColHeader","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pageX","btnRight","isResizing","debSetColWidth","event","delta","setState","handleBtnWidthOnMouseDown","bind","assertThisInitialized","handleDocumentMouseMove","handleDocumentMouseUp","right","setColWidth","document","removeEventListener","preventDefault","addEventListener","_this$props","core_browser_esm","ColHeader_Root","data-col","className","getBtnWidthStyle","tabIndex","onMouseDown","onMouseMove","handleBtnWidthOnMouseMove","onMouseUp","handleBtnWidthOnMouseUp","React","PureComponent","defaultProps","mapDispatchToProps","Error","connect","ownProps","ROW_HEADER_WIDTH","BtnHeight","RowHeader","pageY","btnBottom","refRoot","createRef","debSetRowHeight","handleBtnHeightOnMouseDown","style","minHeight","bottom","setRowHeight","current","getBoundingClientRect","RowHeader_Root","ref","data-row","getRootStyle","getBtnHeightStyle","handleBtnHeightOnMouseMove","handleBtnHeightOnMouseUp","Row","InnerBorder","ColHeaderRow","colLabels","Array","fill","map","_","i","cell_ColHeader","key","ReduxConnect","store","globalState","result","replaceCellData","clearCellData","keys","Token","whitespace","category","index","html","testArgsAllNumbers","args","forEach","arg","TypeError","Fn","AVERAGE","_Fn$SUM","_Fn$COUNT","SUM","COUNT","definition","example","summary","CONCAT","_len","_key","_args","MAX","_len2","_key2","MIN","_len3","_key3","POWER","_len4","_key4","base","exp","pow","SQRT","_len5","_key5","sqrt","_len6","_key6","AVG","POW","TokenSanitizer","tokens","token","t","NUMBER","number","CELL","cell","FUNCTION","function","STRING","string","parseFloat","UNKNOWN","getCellLabel","getFunction","slice","toUpperCase","fnName","fnNode","formulaFuncs","LexerRule","regex","groupIndex","lastIndex","input","exec","TOKENS","EOF","EQUALS","COMMA","COLON","LPAREN","RPAREN","PLUS","MINUS","MULT","DIV","TEXT","GRAMMAR","Lexer","char","initChar","markers","nextToken","sanitizer","sanitize","isFormula","tokenTEXTorNUMBER","whitespaceLen","getWhitespaceLen","_GRAMMAR","rule","setIndex","test","consume","tokenUNKNOWN","chars","isEOF","isSeparator","isWhitespace","count","AST","_name","TextNode","textNode","node","StringNode","_this2","NumberNode","_this3","CellNode","_this4","CellRange","leftCell","rightCell","_this5","UnaryOp","opNode","expr","_this6","evaluatedExpr","FuncOp","funcNode","argNodes","_this7","evaluatedArgs","BinaryOp","leftNode","rightNode","_this8","left","Parser","ast","peekType","equals","operator","term","includes","factor","enclosedExpr","unaryOp","func","lparen","rparen","isCellRange","_this$invertCellRange","invertCellRange","_this$invertCellRange2","temp","list","listNode","cellRange","DQUOTE","stepsAhead","Interpreter","error","cache","lexer","parser","vertex","graph","addVertex","getTokens","parse","recalculate","errorResponse","getVertex","visitNode","nodeName","constructor","eval","getCellResult","_parseLocation","_parseLocation2","leftColIndex","leftRowIndex","_parseLocation3","_parseLocation4","rightColIndex","rightRowIndex","colIndexStart","colIndexEnd","rowIndexStart","rowIndexEnd","rowI","colI","otherLocation","isLocationValid","visitCell","childNode","_parseLocation5","_parseLocation6","colIndex","rowIndex","errorMsg","message","Vertex","Graph","adj","pending","visited","setPendingNodes","dfs","updateStore","Set","add","size","visitAST","delete","hasVertex","testPathCycle","has","locationKeys","locations","_Object$entries","entries","clearCell","testMissingLocation","delVertex","Datum","fwdRef","isActive","onClick","onDoubleClick","onFocus","onKeyDown","Datum_Root","data-cell","data-location","whiteSpace","textOverflow","overflow","getStyle","Result","_React$PureComponent","handleOnClick","handleOnDoubleClick","handleOnFocus","handleOnKeyDown","refDatum","inherits","createClass","willReplaceValue","datumRect","JSON","stringify","openFloatingInputter","stopPropagation","ResultCell_Datum","OutterBorder","children","OutterBorder_Root","css_browser_esm","_ownProps$location$sp","_ownProps$location$sp2","ResultCell","focus","focusDatum","ResultCell_OutterBorder","ResultCell_Result","DataRow","rowNumber","DataRow_Row","cell_RowHeader","components_ResultCell_ResultCell","id","initial","context","endLocation","wasFocused","states","idle","on","MOVE_FOCUS","actions","focusTarget","invoke","src","ctx","querySelector","onDone","assign","setNewContext","calcTargetLocation","getTargetLocation","getKeyboardNavMachine","newContext","Machine","Grid","Table","keyboardNavMachine","focusService","interpret","start","stop","dataset","moveFocus","send","table_ColHeaderRow","table_DataRow","renderColHeaderRow","renderDataRows","data-table","renderRows","mapDisptachToProps","_state$global","inputTagProps","data-inputter","InputContext","createContext","KeyboardActions","component","c","disabledKeys","keyEvent","resetActiveCell","isFuncSelectorVisible","cellValueSetter","run","setValueEvent","refInput","selectionEnd","KeyboardFocuser","elementId","funcSelectorElId","defaultElId","focusElement","defaultEnter","nextRowIndex","el","activeElement","CellValueSetter","cellValue","inputValue","sanitizeValue","setCellData","Input","InputTag","onChange","Pre","Subtitle","P","Hr","FuncDescription","currScope","fnScopes","scope","startIndex","endIndex","getFnScope","inputRect","getFnNode","FuncDescription_Root","FuncDescription_ref","contextType","Li","DropdownItem","item","onMouseEnter","Ul","InteractiveList","items","InteractiveListItem","li","ul","renderListItems","propsTypes","PropTypes","array","isRequired","shape","object","baseItemStyle","ItemBaseRoot","ItemActiveRoot","FuncSelector","listItems","itemIndex","isVisible","setListItems","nextProps","nextState","prevProps","prevState","updateContextData","updateListItems","keyActions","setIsFuncSelectorVisible","keyEventSetIndex","currInputValue","rightChunkIndex","leftChunk","rightChunk","filter","startsWith","sort","itemBase","itemActive","FuncSelector_Pre","FuncSelector_Subtitle","marginTop","boxShadow","nativeEvent","_this$state","FuncSelector_Root","open","library_InteractiveList","getListStyles","Component","withTheme","Suggestions","setFnScopes","stack","pop","b","getCurrTokenIndex","_this$getCompareToken","getCompareTokens","_this$getCompareToken2","tokenBefore","tokenCurr","tokenAfter","option1","option2","Inputter_FuncSelector","renderedFuncSelector","getFuncSelector","Inputter_FuncDescription","NoOp","Inputter","initValueEvent","handleOnChange","keyboardActions","keyboardFocuser","setInputWidth","onMount","focusInputTag","tokenizeInputValue","isInteractive","inputEl","selectionStart","Inputter_Suggestions","Provider","Inputter_InputTag","renderSuggestions","onUnmount","_state$global$activeC","BaseInput","InputSizer","textWidth","scrollWidth","ceil","InputSizer_Input","readOnly","INIT_KEY_EVENT","FloatingInputter","handleOnBlur","handleInputterOnMount","contains","relatedTarget","components_Inputter_Inputter","_this$props$cellRect","top","FloatingInputter_Root","onBlur","FloatingInputter_InputSizer","renderInputter","FormulaBar_inputTagProps","inputTagProps_ref","Fx","FormulaBar","FormulaBar_Root","Container","Main","App","components_FloatingInputter_FloatingInputter","data-dummy-focus-stop","header_Header","components_FormulaBar_FormulaBar","table_Table","es","react_router_dom","emotion_theming_browser_esm","src_App","window","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8de62c7.chunk.js","sourcesContent":["import { createReducer } from 'redux-starter-kit'\n\nexport const INITIAL_STATE = {\n  activeCell: {},\n  rows: 14,\n  columns: 6,\n}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_TABLE_DIMENSIONS': (state, { payload }) => {\n    state.rows = payload.rows\n    state.columns = payload.columns\n  },\n  \n  'SET_ACTIVE_CELL': (state, { payload }) => {\n    state.activeCell = payload\n  },\n\n  'OPEN_FLOATING_INPUTTER': (state, { payload }) => {\n    state.activeCell = { ...state.activeCell, ...payload }\n  },\n\n  'CLOSE_FLOATING_INPUTTER': (state) => {\n    state.activeCell.isFloatingInputterOpen = false\n  },\n\n  'SET_INPUTTER_VALUE_EVENT': (state, { payload }) => {\n    state.activeCell = { ...state.activeCell, valueEvent: payload }\n  },\n\n  'RESET_INPUTTER': (state, { payload }) => {\n    state.activeCell = { ...state.activeCell, ...payload }\n  },\n})\n\n","import { createReducer } from 'redux-starter-kit'\n\n\nconst INITIAL_STATE = {}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_CELL_DATA': (state, { payload }) => {\n    const { location, data } = payload\n    state[location] = data\n  },\n\n  'DELETE_CELL_DATA': (state, { payload }) => {\n    delete state[payload]\n  }\n})\n","import { createReducer } from 'redux-starter-kit'\n\nconst INITIAL_STATE = {\n  colWidths: {},\n  rowHeights: {},\n}\n\nexport default createReducer(INITIAL_STATE, {\n\n  'SET_COL_WIDTH': (state, { payload }) => {\n    const { colLabel, width } = payload\n    const { colWidths } = state\n    state.colWidths = { ...colWidths, [colLabel]: width }\n  },\n\n  'SET_ROW_HEIGHT': (state, { payload }) => {\n    const { rowLabel, height } = payload\n    const { rowHeights } = state\n    state.rowHeights = { ...rowHeights, [rowLabel]: height }\n  },\n\n})\n","import { configureStore } from 'redux-starter-kit'\n\nimport globalReducer from './globalReducer'\nimport tableDataReducer from './tableDataReducer'\nimport tableMetaReducer from './tableMetaReducer'\n\n\nconst appStoreGen = () => (\n  configureStore({\n    reducer: {\n      global: globalReducer,\n      tableData: tableDataReducer,\n      tableMeta: tableMetaReducer,\n    }\n  })\n)\n\nconst appStore = appStoreGen()\n\n\nexport default appStore\nexport { appStoreGen }\n","const colors = {\n  text: '#3D3D3D',\n  table: {\n    border: '#dfdfdf',\n    borderDark: '#CCC',\n    labelBkg: '#F5F5F5'\n  },\n  dropdown: {\n    normal: '#fafafa',\n    active: '#ebebeb',\n  },\n  primary: {\n    strong: '#E10D75',\n    light: 'salmon',\n  },\n  field: {\n    background: '#F0F0F0',\n  },\n  shadow: '#939393',\n}\n\nconst breaks = {\n  xs: 0,\n  sm: 420,\n  md: 900,\n  lg: 1200,\n}\n\nconst breakBump = {\n  xs: 'sm',\n  sm: 'md',\n  md: 'lg',\n}\n\nconst queries = {\n  xs: `@media (max-width: ${breaks.sm - 1}px)`,\n  sm: `@media (min-width: ${breaks.sm}px) and (max-width: ${breaks.md - 1}px)`,\n  md: `@media (min-width: ${breaks.md}px) and (max-width: ${breaks.lg - 1}px)`,\n  lg: `@media (min-width: ${breaks.lg}px)`,\n  from: (breakPoint) => (`@media (min-width: ${breaks[breakPoint]}px)`),\n  upTo: (breakPoint) => (`@media (max-width: ${breaks[ breakBump[breakPoint] ] - 1}px)`),\n}\n\nconst theme = {\n  colors,\n  breaks,\n  queries,\n}\n\nexport default theme\n","/* @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nimport theme from './theme'\n\n\nconst globalStyles = css`\n  body {\n    color: ${theme.colors.text};\n    line-height: 1.3em;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  table, th, td {\n    border: 0;\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n\n  td {\n    padding: 0;\n    line-height: 1.2em;\n  }\n\n  pre, p, h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n`\n\nexport default globalStyles\n","import React from 'react'\nimport styled from '@emotion/styled'\n\n\nconst Root = styled.header`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0 30px;\n`\n\nfunction Header() {\n  return (\n    <Root>\n      <h3>Spreadsheet App</h3>\n    </Root>\n  )\n}\n\nexport default Header\n","import { createAction } from 'redux-starter-kit'\n\n\nexport function setTableDimensions(rows, columns) {\n  return {\n    type: 'SET_TABLE_DIMENSIONS',\n    payload: {\n      rows,\n      columns,\n    }\n  }\n}\n\nexport function setActiveCell(location) {\n  return (dispatch, getState) => {\n    const cellData = getState().tableData[location]\n    const entered = (cellData || {}).entered || ''\n\n    return Promise.resolve(\n      dispatch({\n        type: 'SET_ACTIVE_CELL',\n        payload: {\n          cellRect: null,\n          entered,\n          isFloatingInputterOpen: false,\n          location,\n          valueEvent: { value: entered, cursorPos: entered.length },\n        }\n      })\n    )\n  }\n}\n\nexport function openFloatingInputter(cellRect, willReplaceValue) {\n  const payload = {\n    cellRect,\n    isFloatingInputterOpen: true,\n  }\n\n  if (willReplaceValue) {\n    payload.valueEvent = { value: '', cursorPos: 0 }\n  }\n\n  return {\n    type: 'OPEN_FLOATING_INPUTTER',\n    payload,\n  }\n}\n\nexport function resetActiveCell() {\n  return (dispatch, getState) => {\n    const location = getState().global.activeCell.location\n    const cellData = getState().tableData[location]\n    const entered = (cellData || {}).entered || ''\n    const payload = {\n      isFloatingInputterOpen: false,\n      valueEvent: { value: entered, cursorPos: entered.length },\n    }\n\n    return Promise.resolve(\n      dispatch({\n        type: 'RESET_INPUTTER',\n        payload\n      })\n    )\n  }\n}\n\nexport const closeFloatingInputter = createAction('CLOSE_FLOATING_INPUTTER')\nexport const setInputterValueEvent = createAction('SET_INPUTTER_VALUE_EVENT')\n","const BASE_CODE_POINT = 'A'.codePointAt(0)\n\nexport function buildUrl(baseUrl, query={}) {\n  const urlQuery = Object.entries(query).map(([key, val]) => `${key}=${val}`).join('&')\n  return [baseUrl.trim(), urlQuery].join('?')\n}\n\nexport function clamp(value, min, max) {\n  return Math.min( Math.max(value, min), max )\n}\n\nexport function getRangeArray(min, max, isString=false) {\n  const range = []\n\n  for (let num = min; num <= max; num++) {\n    range.push( isString ? num.toString() : num )\n  }\n\n  return range\n}\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms))\n\nexport function getColumnNames(cols) {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let names = []\n  let prevNames = ['']\n  let remainCols = cols\n\n  while (remainCols > 0) {\n    const newNames = []\n\n    outerLoop:\n    for (let colName of prevNames) {  \n      for (let letter of alphabet) {\n        if (remainCols === 0)  { break outerLoop }\n        newNames.push(`${colName}${letter}`)\n        remainCols -= 1\n      }\n    }\n\n    prevNames = newNames\n    names = [...names, ...newNames]\n  }\n\n  return names\n}\n\nexport function getCellNames(rows, cols) {\n  const names = []\n  let colNames = getColumnNames(cols)\n\n  for (let row=1; row <= rows; row++) {\n    for (let col of colNames) {\n      names.push(`${col}-${row}`)\n    }\n  }\n\n  return names\n}\n\nexport function getColumnPosition(colLabel) {\n  const letters = colLabel.split('')\n  const oneBase = letters.reduce((prev, letter) => (\n    prev * 26 + letter.charCodeAt(0) - BASE_CODE_POINT + 1\n  ), 0)\n\n  return oneBase - 1\n}\n\nexport function getColumnLabel(num) {\n  const label = []\n  const basePoint = BASE_CODE_POINT\n  let curr = num + 1\n\n  do {\n    curr -= 1\n    const letterPosition = curr % 26\n    const codePoint = basePoint + letterPosition\n    const letter = String.fromCodePoint(codePoint)\n    label.push(letter)\n\n    curr = Math.floor(curr / 26)\n  } while (curr > 0)\n\n  return label.reverse().join('')\n}\n\nexport function parseLocation(location) {\n  let [col, row] = location.split('-')\n  const colIndex = getColumnPosition(col)\n  const rowIndex = +row - 1\n\n  return [colIndex, rowIndex]\n}\n\nexport function isNumber(numStr) {\n  const isPeriodsAndDigits = Boolean(numStr.match(/^[.\\d]+$/))\n  const periodCount = (numStr.match(/\\./g) || []).length\n\n  if (!isPeriodsAndDigits) { return false }\n  if (periodCount > 1) { return false }\n  if (numStr.length === 1 && numStr[0] === '.') { return false }\n  return true\n}\n\nexport function debounce(time, fn) {\n  let timeout\n\n  return (...args) => {\n    if (timeout) { return }\n\n    fn(...args)\n\n    timeout = setTimeout(() => {\n      clearTimeout(timeout)\n      timeout = null\n    }, time)\n  }\n}\n\n","export const DEFAULT_COL_WIDTH = 140\nexport const MIN_COL_WIDTH = 12\nexport const MAX_COL_WIDTH = 800\nexport const DEFAULT_ROW_HEIGHT = 28\nexport const MIN_ROW_HEIGHT = 12\nexport const MAX_ROW_HEIGHT = 600\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { setColWidth } from '~/actions/tableMetaActions'\nimport { DEFAULT_COL_WIDTH, MIN_COL_WIDTH, MAX_COL_WIDTH } from '~/library/constants'\nimport { debounce, clamp } from '~/library/utils'\n\n\nlet Root = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.table.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.table.borderDark};\n  background: ${props => props.theme.colors.table.labelBkg};\n  font-size: 12px;\n`\n\nconst BtnWidth = styled.button`\n  background: transparent;\n  cursor: col-resize;\n  outline: none;\n  position: absolute;\n  height: 100%;\n  margin: 0 -3px 0 0;\n  width: 6px;\n  border: 0;\n  padding: 0;\n  right: 0;\n  top: 0;\n  z-index: 2;\n\n  :hover {\n    background: ${props => props.theme.colors.primary.light};\n  }\n`\n\nclass ColHeader extends React.PureComponent {\n\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    setColWidth: PropTypes.func.isRequired,\n    width: PropTypes.number.isRequired,\n  }\n\n  static defaultProps = {\n    width: DEFAULT_COL_WIDTH,\n  }\n\n  constructor() {\n    super()\n    this.handleBtnWidthOnMouseDown = this.handleBtnWidthOnMouseDown.bind(this)\n    this.handleDocumentMouseMove = this.handleDocumentMouseMove.bind(this)\n    this.handleDocumentMouseUp = this.handleDocumentMouseUp.bind(this)\n    this.debSetColWidth = this.debSetColWidth.bind(this)\n  }\n\n  state = {\n    pageX: 0,\n    width: 0,\n    btnRight: 0,\n    isResizing: false,\n  }\n\n  getBtnWidthStyle() {\n    if (!this.state.isResizing) { return }\n\n    const newRight = this.state.btnRight\n    const minRight = MIN_COL_WIDTH - this.state.width\n    const maxRight = MAX_COL_WIDTH - this.state.width\n    const right = -(clamp(newRight, minRight, maxRight) - 4)\n\n    return (theme) => css`\n      width: 1.5px;\n      height: 90vh;\n      right: ${right}px;\n      background: ${theme.colors.primary.light};\n    `\n  }\n\n  debSetColWidth = debounce(40, (event) => {\n    const delta = event.pageX - this.state.pageX\n    this.setState({ btnRight: delta, })\n  })\n\n  handleDocumentMouseMove(event) {\n    this.debSetColWidth(event)\n  }\n\n  handleDocumentMouseUp(event) {\n    const delta = event.pageX - this.state.pageX\n    const width = this.state.width + delta\n\n    this.props.setColWidth(this.props.label, width)\n    this.setState({ btnRight: 0, isResizing: false })\n    document.removeEventListener('mousemove', this.handleDocumentMouseMove)\n    document.removeEventListener('mouseup', this.handleDocumentMouseUp)\n  }\n\n  handleBtnWidthOnMouseDown(event) {\n    event.preventDefault()\n\n    this.setState({\n      pageX: event.pageX,\n      width: this.props.width,\n      isResizing: true,\n    })\n\n    document.addEventListener('mousemove', this.handleDocumentMouseMove)\n    document.addEventListener('mouseup', this.handleDocumentMouseUp)\n  }\n  \n  // handleBtnWidthOnMouseMove(event) {\n  //   if (!this.state.isSettingWidth) { return }\n  //   document.addEventListener('mousemove', (event) => {\n\n  //   })\n  //   const { pageX, pageY } = event\n  //   console.log('handle', pageX, pageY)\n  // }\n\n  render() {\n    const { label, width } = this.props\n\n    return (\n      <Root\n        data-col={label}\n        className='col-label-height'\n        css={css`\n          width: ${width}px;\n          height: 26px;\n        `}\n      >\n        {label}\n        <BtnWidth\n          css={this.getBtnWidthStyle()}\n          tabIndex='-1'\n          onMouseDown={this.handleBtnWidthOnMouseDown}\n          onMouseMove={this.handleBtnWidthOnMouseMove}\n          onMouseUp={this.handleBtnWidthOnMouseUp}\n        />\n      </Root>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const width = state.tableMeta.colWidths[ownProps.label]\n  return { width }\n}\n\nconst mapDispatchToProps = { setColWidth }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColHeader)\n","import { clamp } from '~/library/utils'\nimport {\n  MIN_COL_WIDTH,\n  MAX_COL_WIDTH,\n  MIN_ROW_HEIGHT,\n  MAX_ROW_HEIGHT,\n} from '~/library/constants'\n\n\nexport function setColWidth(colLabel, width) {\n  if (typeof width !== 'number') {\n    throw new Error('width is not a number')\n  }\n\n  return {\n    type: 'SET_COL_WIDTH',\n    payload: { colLabel, width: clamp(width, MIN_COL_WIDTH, MAX_COL_WIDTH) }\n  }\n}\n\nexport function setRowHeight(rowLabel, height) {\n  if (typeof height !== 'number') {\n    throw new Error('height is not a number')\n  }\n\n  return {\n    type: 'SET_ROW_HEIGHT',\n    payload: { rowLabel, height: clamp(height, MIN_ROW_HEIGHT, MAX_ROW_HEIGHT) }\n  }\n}\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\nimport { connect } from 'react-redux'\n\nimport { setRowHeight } from '~/actions/tableMetaActions'\nimport { DEFAULT_ROW_HEIGHT, MIN_ROW_HEIGHT, MAX_ROW_HEIGHT } from '~/library/constants'\nimport { debounce, clamp } from '~/library/utils'\n\n\nexport const ROW_HEADER_WIDTH = 50\n\nconst Root = styled.div`\n  position: relative;\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.table.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.table.borderDark};\n  background: ${props => props.theme.colors.table.labelBkg};\n`\n\nconst BtnHeight = styled.button`\n  background: transparent;\n  cursor: row-resize;\n  outline: none;\n  position: absolute;\n  width: 100%;\n  height: 6px;\n  margin: 0 0 -3px 0;\n  border: 0;\n  padding: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1;\n\n  :hover {\n    background: ${props => props.theme.colors.primary.light};\n  }\n`\n\nclass RowHeader extends React.PureComponent {\n\n  static propTypes = {\n    label: PropTypes.number.isRequired,\n    setRowHeight: PropTypes.func.isRequired,\n    height: PropTypes.number,\n  }\n\n  constructor() {\n    super()\n    this.handleBtnHeightOnMouseDown = this.handleBtnHeightOnMouseDown.bind(this)\n    this.handleDocumentMouseMove = this.handleDocumentMouseMove.bind(this)\n    this.handleDocumentMouseUp = this.handleDocumentMouseUp.bind(this)\n    this.debSetRowHeight = this.debSetRowHeight.bind(this)\n  }\n\n  state = {\n    pageY: 0,\n    height: 0,\n    btnBottom: 0,\n    isResizing: false,\n  }\n\n  refRoot = React.createRef()\n\n  getRootStyle() {\n    const { height } = this.props\n    const style = {\n      width: ROW_HEADER_WIDTH\n    }\n\n    if (height) {\n      style.height = height\n    } else {\n      style.minHeight = DEFAULT_ROW_HEIGHT\n      style.height = 'auto'\n    }\n\n    return style\n  }\n\n  getBtnHeightStyle() {\n    if (!this.state.isResizing) { return }\n\n    const newBottom = this.state.btnBottom\n    const minBottom = MIN_ROW_HEIGHT - this.state.height\n    const maxBottom = MAX_ROW_HEIGHT - this.state.height\n    const bottom = -(clamp(newBottom, minBottom, maxBottom) - 4)\n\n    return (theme) => css`\n      height: 1.5px;\n      width: 95vw;\n      bottom: ${bottom}px;\n      background: ${theme.colors.primary.light};\n    `\n  }\n\n  debSetRowHeight = debounce(40, (event) => {\n    const delta = event.pageY - this.state.pageY\n    this.setState({ btnBottom: delta, })\n  })\n\n  handleDocumentMouseMove(event) {\n    this.debSetRowHeight(event)\n  }\n\n  handleDocumentMouseUp(event) {\n    const delta = event.pageY - this.state.pageY\n    const height = this.state.height + delta\n\n    this.props.setRowHeight(this.props.label, height)\n    this.setState({ btnBottom: 0, isResizing: false })\n    document.removeEventListener('mousemove', this.handleDocumentMouseMove)\n    document.removeEventListener('mouseup', this.handleDocumentMouseUp)\n  }\n\n  handleBtnHeightOnMouseDown(event) {\n    event.preventDefault()\n\n    this.setState({\n      pageY: event.pageY,\n      height: this.props.height || this.refRoot.current.getBoundingClientRect().height,\n      isResizing: true,\n    })\n\n    document.addEventListener('mousemove', this.handleDocumentMouseMove)\n    document.addEventListener('mouseup', this.handleDocumentMouseUp)\n  }\n\n  render() {\n    const { label } = this.props\n\n    return (\n      <Root\n        ref={this.refRoot}\n        data-row={label}\n        className='row-header-width'\n        css={this.getRootStyle()}\n      >\n        {label}\n        <BtnHeight\n          css={this.getBtnHeightStyle()}\n          tabIndex='-1'\n          onMouseDown={this.handleBtnHeightOnMouseDown}\n          onMouseMove={this.handleBtnHeightOnMouseMove}\n          onMouseUp={this.handleBtnHeightOnMouseUp}\n        />\n      </Root>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const height = state.tableMeta.rowHeights[ownProps.label]\n  return { height }\n}\n\nconst mapDispatchToProps = { setRowHeight }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RowHeader)\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport ColHeader from '../cell/ColHeader'\nimport { ROW_HEADER_WIDTH } from '../cell/RowHeader'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.table.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.table.borderDark};\n  background: ${props => props.theme.colors.table.labelBkg};\n`\n\nfunction ColHeaderRow({ colLabels }) {\n  const renderCornerCell = () => (\n    <InnerBorder\n      css={css`\n        width: ${ROW_HEADER_WIDTH}px;\n        height: 26px;\n      `}\n    />\n  )\n\n  const renderLabelCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => (\n      <ColHeader\n        key={i}\n        label={colLabels[i]}\n      />\n    )\n  ))\n\n  return (\n    <Row\n      data-row='header'\n    >\n      {renderCornerCell()}\n      {renderLabelCells()}\n    </Row>\n  )\n}\n\nColHeaderRow.propTypes = {\n  colLabels: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default ColHeaderRow\n\n","import appStore from '~/reducers/'\nimport { clearCellData, replaceCellData } from '~/actions/tableDataActions'\n\n\nclass ReduxConnect {\n  constructor(store=appStore) {\n    const { global: globalState } = store.getState()\n    this.store = store\n    this.rows = globalState.rows\n    this.columns = globalState.columns\n  }\n\n  get tableData() {\n    return this.store.getState().tableData\n  }\n\n  get locations() {\n    return Object.keys(this.tableData)\n  }\n\n  getCellResult(location) {\n    const data = this.tableData[location]\n    return data && data.result\n  }\n\n  replaceCellData(location, entered, result) {\n    this.store.dispatch(replaceCellData(location, entered, result))\n  }\n\n  clearCell(location) {\n    this.store.dispatch(clearCellData(location))\n  }\n}\n\nexport default ReduxConnect\nexport { appStore }\n","import graph from '~/formulas/graph'\nimport Interpreter from '../formulas/Interpreter'\n\n\nexport function setCellData(location, entered) {\n  const interpreter = new Interpreter(location)\n  const result = interpreter.interpret(entered)\n\n\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function replaceCellData(location, entered, result) {\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function clearCellData(location) {\n  return (dispatch, getState) => {\n    const value = getState().tableData[location]\n\n    graph.delVertex(location)\n\n    if (value === undefined) {\n      return Promise.resolve()\n    }\n\n\n    return Promise.resolve(dispatch({\n      type: 'DELETE_CELL_DATA',\n      payload: location,\n    }))\n  }\n}\n","class Token {\n  constructor(type, text, whitespace, category, index) {\n    this.type = type\n    this.category = category\n    this.text = text\n    this.whitespace = whitespace\n    this.index = index\n    this.value = null\n    this.html = null\n  }\n}\n\nexport default Token\n","function testArgsAllNumbers(args) {\n  args.forEach(arg => {\n    if (typeof arg !== 'number') {\n      throw new TypeError(`Function argument not a number: ${arg}`)\n    }\n  })\n}\n\nconst Fn = {\n  AVERAGE: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      return Fn.SUM.fn(...args) / Fn.COUNT.fn(...args)\n    },\n    definition: 'AVERAGE(value1, value2, ...)',\n    example: 'AVERAGE(A1:B3, 3)',\n    summary: 'Returns the average from a series of numbers.',\n  },\n\n  CONCAT: {\n    fn: (...args) => {\n      let result = []\n\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      for (let arg of args) {\n        if (typeof arg !== 'string') {\n          throw new Error(`Element is not a string: ${arg}`)\n        }\n\n        result.push(arg)\n      }\n\n      return result.join('')\n    },\n    definition: 'CONCAT(\"text1\", \"text2\", ...)',\n    example: 'CONCAT(\"one\", \"two\")',\n    summary: 'Returns a single concatenated string from a series of strings.',\n  },\n\n  COUNT: {\n    fn: (...args) => args.length,\n    definition: 'COUNT(element1, element2, ...)',\n    example: 'COUNT(A1:B3, 2, C4)',\n    summary: 'Returns the number of non-empty elements in a set.',\n  },\n\n  MAX: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      testArgsAllNumbers(args)\n      return Math.max(...args)\n    },\n    definition: 'MAX(value1, value2, ...)',\n    example: 'MAX(A1:B3, 4, C3)',\n    summary: 'Returns the maximum value from a series of numbers',\n  },\n\n  MIN: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      testArgsAllNumbers(args)\n      return Math.min(...args)\n    },\n    definition: 'MIN(value1, value2, ...)',\n    example: 'MIN(A1:B3, 4, C3)',\n    summary: 'Returns the minimum value from a series of numbers.',\n  },\n\n  POWER: {\n    fn: (...args) => {\n      if (args.length !== 2) {\n        throw new Error('Formula takes only two elements')\n      }\n\n      testArgsAllNumbers(args)\n      const [base, exp] = args\n      return Math.pow(base, exp)\n    },\n    definition: 'POWER(base, exponent)',\n    example: 'POWER(A3,2)',\n    summary: 'Returns a number raised to an exponent.'\n  },\n\n  SQRT: {\n    fn: (...args) => {\n      if (args.length !== 1) {\n        throw new Error(`Formula takes only one element`)\n      }\n\n      testArgsAllNumbers(args)\n      return Math.sqrt(args[0])\n    },\n    definition: 'SQRT(value)',\n    example: 'SQRT(9) or SQRT(A3)',\n    summary: 'Returns the square root of a number.'\n  },\n\n  SUM: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      testArgsAllNumbers(args)\n      return args.reduce((prev, curr) => (curr + prev), 0)\n    },\n    definition: 'SUM(value1, value2, ...)',\n    example: 'SUM(A1:B3, 3, C5)',\n    summary: 'Retuns the sum from a series of numbers.',\n  }\n}\n\n// aliases\nFn.AVG = {\n  ...Fn.AVERAGE,\n  definition: 'AVG(value1, value2, ...)',\n  example: 'AVG(A1:B3, 3)',\n}\n\nFn.POW = {\n  ...Fn.POWER,\n  definition: 'POW(base, exponent)',\n  example: 'POW(A3,2)',\n}\n\nexport default Fn\n","import { TOKENS as t } from './Lexer'\nimport formulaFuncs from './formulaFunctions'\nimport { isNumber } from '~/library/utils'\n\n\nclass TokenSanitizer {\n  constructor(tokens) {\n    this.tokens = tokens\n  }\n\n  sanitize() {\n    return this.tokens.map(token => {\n      switch(token.type) {\n        case t.NUMBER:\n          return this.number(token)\n        case t.CELL:\n          return this.cell(token)\n        case t.FUNCTION:\n          return this.function(token)\n        case t.STRING:\n          return this.string(token)\n        default:\n          return token\n      }\n    })\n  }\n\n  number(token) {\n    if (!isNumber(token.text)) {\n      token.type = t.UNKNOWN\n      return token\n    }\n\n    token.value = parseFloat(token.text)\n    return token\n  }\n\n  cell(token) {\n    token.value = this.getCellLabel(token)\n    return token\n  }\n\n  function(token) {\n    const fn = this.getFunction(token)\n    \n    if (fn) {\n      token.value = fn\n    } else {\n      token.type = t.UNKNOWN\n    }\n\n    return token\n  }\n\n  string(token) {\n    token.value = token.text.slice(1, -1)\n    return token\n  }\n\n  getCellLabel(token) {\n    const { text } = token\n    const { index } = text.match(/\\d+/)\n    const col = text.slice(0, index).toUpperCase()\n    const row = text.slice(index)\n    return `${col}-${row}`\n  }\n\n  getFunction(token) {\n    const fnName = token.text.toUpperCase()\n    const fnNode = formulaFuncs[fnName]\n    return fnNode && fnNode.fn\n  }\n}\n\nexport default TokenSanitizer\n","class LexerRule {\n  constructor(regex, groupIndex, token, category) {\n    this.regex = regex\n    this.groupIndex = groupIndex\n    this.token = token\n    this.category = category\n  }\n\n  setIndex(index) {\n    this.regex.lastIndex = index\n  }\n\n  test(input) {\n    return this.regex.exec(input)\n  }\n}\n\nexport default LexerRule\n","import Token from './Token'\nimport TokenSanitizer from './TokenSanitizer'\nimport LexerRule from './LexerRule'\nimport { isNumber } from '~/library/utils'\n\n\nconst TOKENS = {\n  // internal\n  EOF: 'EOF',\n  // structure\n  EQUALS: 'EQUALS',\n  COMMA: 'COMMA',\n  COLON: 'COLON',\n  LPAREN: 'LPAREN',\n  RPAREN: 'RPAREN',\n  // operators\n  PLUS: 'PLUS',\n  MINUS: 'MINUS',\n  MULT: 'MULT',\n  DIV: 'DIV',\n  // entities\n  TEXT: 'TEXT',\n  CELL: 'CELL',\n  STRING: 'STRING',\n  NUMBER: 'NUMBER',\n  FUNCTION: 'FUNCTION',\n  UNKNOWN: 'UNKNOWN',\n}\n\nconst t = TOKENS\n\nconst GRAMMAR = [\n  // structure\n  new LexerRule(/=/g, 0, t.EQUALS, 'structure'),\n  new LexerRule(/,/g, 0, t.COMMA, 'structure'),\n  new LexerRule(/:/g, 0, t.COLON, 'structure'),\n  new LexerRule(/\\(/g, 0, t.LPAREN, 'structure'),\n  new LexerRule(/\\)/g, 0, t.RPAREN, 'structure'),\n  // operators\n  new LexerRule(/\\+/g, 0, t.PLUS, 'operator'),\n  new LexerRule(/\\-/g, 0, t.MINUS, 'operator'), // eslint-disable-line\n  new LexerRule(/\\*/g, 0, t.MULT, 'operator'),\n  new LexerRule(/\\//g, 0, t.DIV, 'operator'),\n  // multi-character\n  new LexerRule(/(\"[^\"]+\")/g, 1, t.STRING, 'entity'), // eslint-disable-line\n  new LexerRule(/[\\d\\.]+/g, 0, t.NUMBER, 'entity'), // eslint-disable-line\n  new LexerRule(/[a-z]+[\\d]+/gi, 0, t.CELL, 'entity'),\n  new LexerRule(/([a-z]+)\\(/gi, 1, t.FUNCTION, 'entity'),\n]\n\n\nclass Lexer {\n  constructor(input) {\n    this.input = input\n    this.index = 0\n    this.char = this.initChar(input)\n    this.markers = []\n    this.tokens = []\n  }\n\n  getTokens() {\n    while (this.char !== t.EOF) {\n      const token = this.nextToken()\n      this.tokens.push(token)\n    }\n\n    const sanitizer = new TokenSanitizer(this.tokens)\n    this.tokens = sanitizer.sanitize()\n    return this.tokens\n  }\n\n  nextToken() {\n    if (this.char === t.EOF) {\n      return new Token(t.EOF, t.EOF, 0, 'eof', this.index)\n    }\n\n    if (!this.isFormula()) {\n      return this.tokenTEXTorNUMBER()\n    }\n\n    const whitespaceLen = this.getWhitespaceLen()\n    let token\n\n    for (let rule of GRAMMAR) {\n      rule.setIndex(this.index)\n      const match = rule.test(this.input)\n\n      if (match && match.index === this.index) {\n        const text = match[rule.groupIndex]\n        token = new Token(rule.token, text, whitespaceLen, rule.category, this.index)\n        this.index += text.length - 1\n        this.consume()\n        break\n      }\n    }\n\n    if (!token) {\n      token = this.tokenUNKNOWN(whitespaceLen)\n    }\n\n    return token\n  }\n\n  initChar(input) {\n    if (this.input.length === 0) {\n      this.input = '0'\n      this.index = -1\n    }\n\n    return input[this.index]\n  }\n\n  tokenUNKNOWN(whitespace) {\n    const chars = []\n\n    while (!(this.isEOF() || this.isSeparator() || this.isWhitespace())) {\n      chars.push(this.char)\n      this.consume()\n    }\n\n    const text = chars.join('')\n    return new Token(t.UNKNOWN, text, whitespace, 'entity', this.index - text.length)\n  }\n\n  tokenTEXTorNUMBER() {\n    let token\n\n    if (isNumber(this.input)) {\n      token = new Token(t.NUMBER, this.input, 0, 'entity', this.index)\n    } else {\n      token = new Token(t.TEXT, this.input, 0, 'entity', this.index)\n    }\n\n    this.index = this.input.length - 1\n    this.consume()\n    return token\n  }\n\n  consume() {\n    this.index++\n\n    if (this.index < this.input.length) {\n      this.char = this.input[this.index]\n    } else {\n      this.char = t.EOF\n    }\n  }\n\n  isFormula() {\n    return this.input[0] === '='\n  }\n\n  isEOF() {\n    return this.char === t.EOF\n  }\n\n  isWhitespace() {\n    return !this.isEOF() && Boolean(this.char.match(/\\s/))\n  }\n\n  isSeparator() {\n    return Boolean(this.char.match(/[\\(\\)\\+\\-\\/\\*]/)) // eslint-disable-line\n  }\n\n  getWhitespaceLen() {\n    let count = 0\n\n    while (this.isWhitespace()) {\n      count++\n      this.consume()\n    }\n\n    return count\n  }\n}\n\nexport default Lexer\nexport { GRAMMAR, TOKENS, Lexer }\n","import { TOKENS as t } from './Lexer'\n\n\nclass AST {\n  constructor(name) {\n    this._name = name\n  }\n\n  eval() {\n    throw new Error('Implement method.')\n  }\n}\n\nclass TextNode extends AST {\n  constructor(textNode) {\n    super('TextNode')\n    this.node = textNode\n  }\n\n  eval() {\n    return this.node.text\n  }\n}\n\nclass StringNode extends AST {\n  constructor(node) {\n    super('StringNode')\n    this.node = node\n  }\n\n  eval() {\n    return this.node.value\n  }\n}\n\nclass NumberNode extends AST {\n  constructor(node) {\n    super('NumberNode')\n    this.node = node\n  }\n\n  eval() {\n    return this.node.value\n  }\n}\n\nclass CellNode extends AST {\n  constructor(token) {\n    super('CellNode')\n    this.cell = token\n  }\n\n  get location() {\n    return this.cell.value\n  }\n}\n\nclass CellRange extends AST {\n  constructor(leftCell, rightCell) {\n    super('CellRange')\n    this.leftCell = leftCell\n    this.rightCell = rightCell\n  }\n}\n\nclass UnaryOp extends AST {\n  constructor(opNode, expr) {\n    super('UnaryOp')\n    this.opNode = opNode\n    this.expr = expr\n  }\n\n  eval(evaluatedExpr) {\n    if (this.opNode.type === t.PLUS) {\n      return evaluatedExpr\n    } else if (this.opNode.type === t.MINUS) {\n      return -evaluatedExpr\n    }\n  }\n}\n\nclass FuncOp extends AST {\n  constructor(funcNode, argNodes) {\n    super('FuncOp')\n    this.funcNode = funcNode\n    this.argNodes = argNodes\n  }\n\n  eval(evaluatedArgs) {\n    const fn = this.funcNode.value\n    return fn(...evaluatedArgs)\n  }\n}\n\nclass BinaryOp extends AST {\n  constructor(leftNode, opNode, rightNode) {\n    super('BinaryOp')\n    this.leftNode = leftNode\n    this.opNode = opNode\n    this.rightNode = rightNode\n  }\n\n  eval(left, right) {\n    switch(this.opNode.type) {\n      case t.PLUS:\n        return left + right\n      case t.MINUS:\n        return left - right\n      case t.DIV:\n        if (right === 0) {\n          throw new Error(`Division by zero: ${left}/${right}`)\n        } else {\n          return left / right\n        }\n      case t.MULT:\n        return left * right\n      default:\n        throw new Error(`Unsupported operator \"${this.token.text}\"`)\n    }\n  }\n}\n\nexport {\n  TextNode,\n  StringNode,\n  NumberNode,\n  CellNode,\n  CellRange,\n  BinaryOp,\n  UnaryOp,\n  FuncOp,\n}\n","import { TOKENS as t } from './Lexer'\nimport {\n  TextNode,\n  StringNode,\n  NumberNode,\n  CellNode,\n  CellRange,\n  BinaryOp,\n  UnaryOp,\n  FuncOp\n} from './ast'\n\n\nclass Parser {\n  constructor(tokens) {\n    this.index = 0\n    this.tokens = tokens\n    this.curr = this.tokens[0]\n    this.ast = null\n  }\n\n  parse() {\n    switch (this.peekType()) {\n      case t.TEXT:\n        this.ast = this.text()\n        break\n      case t.NUMBER:\n        this.ast = this.number()\n        break\n      default:\n        this.equals()\n        this.ast = this.expr()\n        break\n    }\n\n    if (this.curr !== null) {\n      throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n    }\n\n    return this.ast\n  }\n\n  expr() {\n    // expr : term ( ( PLUS | MINUS ) term ) *\n    let node, operator, right\n\n    node = this.term()\n\n    while ( [t.PLUS, t.MINUS].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.term()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  term() {\n    // term : factor ( ( MULT | DIV ) factor ) *\n    let node, operator, right\n\n    node = this.factor()\n\n    while ( [t.MULT, t.DIV].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.factor()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  factor() {\n    // factor : ( PLUS | MINUS ) ( NUMBER | CELL )\n    //          | LPAREN expr RPAREN\n    //          | FUNCTION LPAREN list RPAREN\n    switch (this.peekType()) {\n      case t.LPAREN:\n        return this.enclosedExpr()\n      case t.PLUS:\n      case t.MINUS:\n        return this.unaryOp()\n      case t.NUMBER:\n        return this.number()\n      case t.CELL:\n        return this.cell()\n      case t.FUNCTION:\n        return this.func()\n      case t.RPAREN:\n        throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n      default:\n        throw new Error('Missing factor')\n    }\n  }\n\n  enclosedExpr() {\n    this.lparen()\n    const node = this.expr()\n    this.rparen()\n    return node\n  }\n\n  cell() {\n    if (this.peekType() !== t.CELL) {\n      throw new Error('Missing cell node')\n    }\n\n    const node = new CellNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  cellRange() {\n    let left, right\n\n    if (!this.isCellRange()) {\n      throw new Error('Missing cell range')\n    }\n\n    left = new CellNode(this.curr)\n    this.consume() // skip colon\n    this.consume()\n    right = new CellNode(this.curr)\n    this.consume()\n\n    if (right.location < left.location) {\n      [left, right] = this.invertCellRange(left, right)\n    }\n\n    return new CellRange(left, right)\n  }\n\n  invertCellRange(left, right) {\n    this.tokens[this.index - 2] = right.cell\n    this.tokens[this.index] = left.cell\n    let temp = left\n    left = right\n    right = temp\n    return [left, right]\n  }\n\n  func() {\n    if (this.peekType() !== t.FUNCTION) {\n      throw new Error('Missing function')\n    }\n\n    const func = this.curr\n    this.consume()\n    this.lparen()\n    const args = this.list()\n    this.rparen()\n    return new FuncOp(func, args)\n  }\n\n  list() {\n    const list = []\n    let node\n\n    node = this.listNode()\n    list.push(node)\n\n    while (this.peekType() === t.COMMA) {\n      this.consume() // skip comma token\n      node = this.listNode()\n      list.push(node)\n    }\n\n    return list\n  }\n\n  listNode() {\n    if (this.isCellRange()) {\n      return this.cellRange()\n    } else if (this.peekType() === t.STRING) {\n      return this.string()\n    } else {\n      return this.expr()\n    }\n  }\n\n  text() {\n    let node\n\n    if (this.peekType() !== t.TEXT) {\n      throw new Error('Missing string')\n    }\n\n    node = new TextNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  string() {\n    const node = new StringNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  number() {\n    if (this.peekType() === t.NUMBER) {\n      const node = new NumberNode(this.curr)\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing number')\n    }\n  }\n\n  operator() {\n    if ([t.PLUS, t.MINUS, t.MULT, t.DIV].includes(this.peekType())) {\n      const node = this.curr\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing operator')\n    }\n  }\n\n  equals() {\n    if (this.peekType() !== t.EQUALS) {\n      throw new Error('Missing equals sign')\n    }\n\n    this.consume()\n  }\n\n  lparen() {\n    if (this.peekType() !== t.LPAREN) {\n      throw new Error('Missing left parenthesis')\n    }\n\n    this.consume()\n  }\n\n  rparen() {\n    if (this.peekType() !== t.RPAREN) {\n      throw new Error('Missing right parenthesis')\n    }\n\n    this.consume()\n  }\n\n  unaryOp() {\n    if (![t.PLUS, t.MINUS].includes(this.peekType())) {\n      throw new Error('Missing unary operator')\n    }\n\n    const curr = this.curr\n    this.consume()\n    const node = new UnaryOp(curr, this.factor())\n    return node\n  }\n\n  consume() {\n    if (this.index < this.tokens.length - 1) {\n      this.index++\n      this.curr = this.tokens[this.index]\n    } else {\n      this.curr = null\n    }\n  }\n\n  isCellRange() {\n    return (\n      this.peekType(0) === t.CELL\n      && this.peekType(1) === t.COLON\n      && this.peekType(2) === t.CELL\n    )\n  }\n\n  isString() {\n    return (\n      this.peekType(0) === t.DQUOTE\n      && this.peekType(1) === t.TEXT\n      && this.peekType(2) === t.DQUOTE\n    )\n  }\n\n  peekType(stepsAhead) {\n    if (stepsAhead) {\n      if (stepsAhead < 0) {\n        throw new Error('peak ahead index must be positive')\n      }\n\n      const index = this.index + stepsAhead\n\n      if (index < this.tokens.length) {\n        return this.tokens[index].type\n      }\n    } else {\n      return this.curr && this.curr.type\n    }\n  }\n}\n\nexport default Parser\n","import { Lexer } from './Lexer'\nimport { parseLocation, getColumnLabel } from '~/library/utils'\nimport graph from '~/formulas/graph'\nimport Parser from './Parser'\nimport ReduxConnect from './ReduxConnect'\n\n\nconst ERR_DIVISION_BY_ZERO = '#DIV/0!'\nconst ERR_CIRCULAR_REFERENCE = '#REF!'\nconst ERR_GENERIC = '#ERROR!'\n\nclass Interpreter {\n  constructor(location) {\n    this.location = location\n    this.error = null\n    this.cache = {}\n    this.result = null\n    this.state = new ReduxConnect()\n  }\n\n  interpret(input) {\n    const vertex = graph.addVertex(this.location, input)\n    let lexer, parser\n\n    try {\n      lexer = new Lexer(input)\n      parser = new Parser( lexer.getTokens() )\n      vertex.ast = parser.parse()\n      graph.recalculate(this.location)\n      this.result = vertex.result\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      return this.result\n    }\n\n    this.error = vertex.error\n    return this.result\n  }\n\n  visitAST(location) {\n    const vertex = graph.getVertex(location)\n\n    if (!vertex.ast) {\n      return vertex.result\n    }\n\n    try {\n      this.result = vertex.result = this.visitNode(vertex.ast)\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      throw error\n    }\n\n    return this.result\n  }\n\n  visitNode(node) {\n    switch (node._name) {\n      case 'NumberNode':\n        return this.NumberNode(node)\n      case 'CellNode':\n        return this.CellNode(node)\n      case 'TextNode':\n        return this.TextNode(node)\n      case 'StringNode':\n        return this.StringNode(node)\n      case 'CellRange':\n        return this.CellRange(node)\n      case 'FuncOp':\n        return this.FuncOp(node)\n      case 'BinaryOp':\n        return this.BinaryOp(node)\n      case 'UnaryOp':\n        return this.UnaryOp(node)\n      default:\n        const nodeName = node._name || (node.constructor || {}).name\n        throw new Error(`Unrecognized AST node ${nodeName}`)\n    }\n  }\n  \n  /* ***************************************\n   * Nodes that don't require processing\n   ****************************************/\n\n  TextNode(node) {\n    return node.eval()\n  }\n\n  StringNode(node) {\n    return node.eval()\n  }\n\n  NumberNode(node) {\n    return node.eval()\n  }\n\n  /* ***************************************\n   * Nodes requiring processing\n   ****************************************/\n\n  UnaryOp(node) {\n    const result = this.visitNode(node.expr)\n    return node.eval(result)\n  }\n\n  CellNode(node) {\n    const result = this.getCellResult(node.location)\n    return result === undefined\n      ? 0\n      : result\n  }\n\n  BinaryOp(node) {\n    const left = this.visitNode(node.leftNode)\n    const right = this.visitNode(node.rightNode)\n\n    if (typeof left !== 'number') {\n      throw new Error(`term is not a number: \"${left}\"`)\n    }\n\n    if (typeof right !== 'number') {\n      throw new Error(`term is not a number: \"${right}\"`)\n    }\n\n    return node.eval(left, right)\n  }\n\n  CellRange(node) {\n    const [leftColIndex, leftRowIndex] = parseLocation(node.leftCell.location)\n    const [rightColIndex, rightRowIndex] = parseLocation(node.rightCell.location)\n    const colIndexStart = Math.min(leftColIndex, rightColIndex)\n    const colIndexEnd = Math.max(leftColIndex, rightColIndex)\n    const rowIndexStart = Math.min(leftRowIndex, rightRowIndex)\n    const rowIndexEnd = Math.max(leftRowIndex, rightRowIndex)\n    const list = []\n\n    for (let rowI = rowIndexStart; rowI <= rowIndexEnd; rowI++) {\n      for (let colI = colIndexStart; colI <= colIndexEnd; colI++) {\n        const location = `${getColumnLabel(colI)}-${rowI + 1}`\n        const result = this.getCellResult(location)\n\n        if (result !== undefined) {\n          list.push(result)\n        }\n      }\n    }\n\n    return list\n  }\n\n  getCellResult(otherLocation) {\n    let result\n\n    if (!this.isLocationValid(otherLocation)) {\n      throw new Error('Location out of bounds')\n    }\n\n    if (this.cache[otherLocation] !== undefined) {\n      return this.cache[otherLocation]\n    }\n\n    result = graph.visitCell(otherLocation)\n    this.cache[otherLocation] = result\n    return result\n  }\n\n  FuncOp(node) {\n    const evaluatedArgs = []\n\n    for (let childNode of node.argNodes) {\n      const result = this.visitNode(childNode)\n\n      if (childNode._name === 'CellRange') {\n        evaluatedArgs.push(...result)\n      } else {\n        evaluatedArgs.push(result)\n      }\n    }\n\n    return node.eval(evaluatedArgs)\n  }\n\n  isLocationValid(location) {\n    const [colIndex, rowIndex] = parseLocation(location)\n\n    if (Math.min(colIndex, rowIndex) < 0) { return false }\n    if (colIndex >= this.state.columns) { return false }\n    if (rowIndex >= this.state.rows) { return false }\n    return true\n  }\n\n  errorResponse() {\n    const { message: errorMsg } = this.error\n\n    if (errorMsg.match(/division by zero/i)) {\n      return ERR_DIVISION_BY_ZERO\n    } else if (errorMsg.match(/circular reference/i)) {\n      return ERR_CIRCULAR_REFERENCE\n    } else {\n      return ERR_GENERIC\n    }\n  }\n}\n\nexport default Interpreter\nexport {\n  ERR_DIVISION_BY_ZERO,\n  ERR_CIRCULAR_REFERENCE,\n  ERR_GENERIC,\n}\n","import ReduxConnect from './ReduxConnect'\nimport Interpreter from './Interpreter'\n\n\nclass Vertex {\n  constructor(entered) {\n    this.entered = entered\n    this.error = null\n    this.result = null\n    this.ast = null\n  }\n}\n\nclass Graph {\n  constructor() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  recalculate(location) {\n    this.setPendingNodes()\n    this.dfs(location)\n    this.updateStore()\n  }\n\n  setPendingNodes() {\n    this.pending = new Set()\n\n    Object.keys(this.adj).forEach(vertex => {\n      this.pending.add(vertex)\n    })\n  }\n\n  dfs(location) {\n    while (this.pending.size > 0) {\n      if (!location) {\n        location = [...this.pending][0]\n      }\n\n      try {\n        this.visited = new Set([location])\n        const interpreter = new Interpreter(location)\n        interpreter.visitAST(location)\n      } catch (error) {}\n\n      this.visited.forEach(location => this.pending.delete(location))\n      location = null\n    }\n\n    this.visited = null\n    this.pending = null\n  }\n\n  visitCell(location) {\n    if (!this.hasVertex(location)) {\n      return\n    }\n\n    this.testPathCycle(location)\n    this.pending.delete(location)\n    this.visited.add(location)\n    const interpreter = new Interpreter(location)\n    const result = interpreter.visitAST(location)\n    this.visited.delete(location)\n    return result\n  }\n\n  getCellResult(location) {\n    if (location in this.adj) {\n      return graph.adj[location].result\n    } else {\n      return ''\n    }\n  }\n\n  testPathCycle(location) {\n    if (this.visited.has(location)) {\n      throw new Error('Circular reference')\n    }\n  }\n\n  updateStore() {\n    const locationKeys = new Set(this.store.locations)\n\n    for (let [location, vertex] of Object.entries(this.adj)) {\n      const { entered, result } = vertex\n\n      locationKeys.delete(location)\n\n      if (result !== this.store.getCellResult(location)) {\n        this.store.replaceCellData(location, entered, result)\n      }\n    }\n\n    for (let location of locationKeys) {\n      this.store.clearCell(location)\n    }\n  }\n\n  addVertex(location, entered) {\n    const vertex = new Vertex(entered)\n    this.adj[location] = vertex\n    return vertex\n  }\n\n  hasVertex(location) {\n    return location in this.adj\n  }\n\n  getVertex(location) {\n    this.testMissingLocation(location)\n    return this.adj[location]\n  }\n\n  delVertex(location) {\n    if (location in this.adj) {\n      delete this.adj[location]\n      this.recalculate()\n    }\n  }\n\n  resetAll() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  testMissingLocation(location) {\n    if (!this.hasVertex(location)) {\n      throw new Error('Missing location')\n    }\n  }\n}\n\nconst graph = new Graph()\n\n\nexport default graph\nexport {\n  Vertex,\n  Graph,\n}\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\n\n\nconst Root = styled.div`\n  display: flex;\n  align-items: center;\n  border: 2px solid transparent;\n  line-height: 1.1em;\n  height: 100%;\n  width: 100%;\n  padding: 2px;\n`\n\nfunction Datum({\n  fwdRef,\n  isActive,\n  location,\n  onClick,\n  onDoubleClick,\n  onFocus,\n  onKeyDown,\n  result,\n}) {\n\n  const getStyle = () => {\n    let style = {}\n\n    if (typeof result === 'number') {\n      style = {\n        whiteSpace: 'nowrap',\n        textOverflow: 'clip',\n        overflow: 'hidden',\n      }\n    }\n\n    if (isActive) {\n      style.border = '2px solid salmon'\n    }\n\n    return style\n  }\n\n  return (\n    <Root\n      ref={fwdRef}\n      data-cell='result'\n      data-location={location}\n      css={getStyle()}\n      tabIndex='0'\n      onClick={onClick}\n      onKeyDown={onKeyDown}\n      onDoubleClick={onDoubleClick}\n      onFocus={onFocus}\n    >\n    {result}\n  </Root>\n  )\n}\n\nDatum.propTypes = {\n  fwdRef: PropTypes.object.isRequired,\n  result: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  isActive: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onKeyDown: PropTypes.func.isRequired,\n  onDoubleClick: PropTypes.func.isRequired,\n  onFocus: PropTypes.func.isRequired,\n}\n\nexport default Datum\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { clearCellData } from '~/actions/tableDataActions'\nimport { openFloatingInputter, setActiveCell } from '~/actions/globalActions'\nimport Datum from './Datum'\n\n\nexport class Result extends React.PureComponent {\n\n  static propTypes = {\n    // props\n    location: PropTypes.string.isRequired,\n    fwdRef: PropTypes.object.isRequired,\n    // redux\n    openFloatingInputter: PropTypes.func.isRequired,\n    clearCellData: PropTypes.func.isRequired,\n    setActiveCell: PropTypes.func.isRequired,\n    result: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n    isActive: PropTypes.bool.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleOnClick = this.handleOnClick.bind(this)\n    this.handleOnDoubleClick = this.handleOnDoubleClick.bind(this)\n    this.handleOnFocus = this.handleOnFocus.bind(this)\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.refDatum = props.fwdRef\n  }\n\n  openFloatingInputter(willReplaceValue) {\n    const datumRect = this.refDatum.current.getBoundingClientRect()\n    const cellRect = JSON.parse(JSON.stringify(datumRect))\n    this.props.openFloatingInputter(cellRect, willReplaceValue)\n  }\n\n  getDatumStyle() {\n    if (this.props.isActive) { return }\n\n    return {\n      border: '2px solid salmon',\n    }\n  }\n\n  handleOnFocus() {\n    this.props.setActiveCell(this.props.location)\n  }\n\n  handleOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleOnDoubleClick(event) {\n    event.stopPropagation()\n    this.openFloatingInputter(false)\n  }\n\n  handleOnKeyDown({ key }) {\n    if (['Delete', 'Backspace'].includes(key)) {\n      const valueStr = '' + this.props.result\n\n      if (valueStr.length > 0) {\n        this.props.clearCellData(this.props.location)\n      }\n      // key pressed is a printable symbol, ex: 'a', '1', ','\n      // can be further refined, but for now it's fine\n    } else if (key.length === 1) {\n      this.openFloatingInputter(true)\n    }\n  }\n\n  render() {\n    return (\n      <Datum\n        fwdRef={this.refDatum}\n        location={this.props.location}\n        result={this.props.result}\n        onClick={this.handleOnClick}\n        onDoubleClick={this.handleOnDoubleClick}\n        onFocus={this.handleOnFocus}\n        onKeyDown={this.handleOnKeyDown}\n        isActive={this.props.isActive}\n      />\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const isActive = state.global.activeCell.location === ownProps.location\n  const cell = state.tableData[ownProps.location]\n  const result = cell ? cell.result : ''\n  return { result, isActive }\n}\n\nconst mapDispatchToProps = { clearCellData, openFloatingInputter, setActiveCell }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Result)\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { DEFAULT_COL_WIDTH } from '~/library/constants'\n\n\nconst Root = styled.div`\n  cursor: cell;\n  overflow: hidden;\n  font-size: 13px;\n  border-right: 1px solid ${props => props.theme.colors.table.border};\n  border-bottom: 1px solid ${props => props.theme.colors.table.border};\n  outline: none;\n`\n\nexport function OutterBorder({ width, height, onClick, onDoubleClick, children }) {\n  return (\n    <Root\n      data-cell='border'\n      onClick={onClick}\n      onDoubleClick={onDoubleClick}\n      css={{\n        width,\n        height: height && height\n      }}\n    >\n      {children}\n    </Root>\n  )\n}\n\nOutterBorder.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onDoubleClick: PropTypes.func.isRequired,\n  location: PropTypes.string.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n}\n\nOutterBorder.defaultProps = {\n  width: DEFAULT_COL_WIDTH,\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const [colLabel, rowLabel] = ownProps.location.split('-')\n  const width = state.tableMeta.colWidths[colLabel]\n  const height = state.tableMeta.rowHeights[rowLabel]\n  return { width, height }\n}\n\nexport default connect(mapStateToProps)(OutterBorder)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Result from './Result'\nimport OutterBorder from './OutterBorder'\n\n\nclass ResultCell extends React.PureComponent {\n\n  static propTypes = {\n    location: PropTypes.string.isRequired,\n  }\n\n  refDatum = React.createRef()\n\n  constructor() {\n    super()\n    this.handleOnClick = this.handleOnClick.bind(this)\n    this.handleOnDoubleClick = this.handleOnDoubleClick.bind(this)\n  }\n\n  focusDatum() {\n    setTimeout(() => this.refDatum.current.focus(), 0)\n  }\n\n  handleOnClick() {\n    this.focusDatum()\n  }\n\n  handleOnDoubleClick() {\n    this.focusDatum()\n  }\n\n  render() {\n    const { location } = this.props\n\n    return (\n      <OutterBorder\n        onClick={this.handleOnClick}\n        onDoubleClick={this.handleOnDoubleClick}\n        location={location}\n      >\n        <Result\n          location={location}\n          fwdRef={this.refDatum}\n        />\n      </OutterBorder>\n    )\n  }\n}\n\nexport default ResultCell\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport RowHeader from '../cell/RowHeader'\nimport ResultCell from '../ResultCell/ResultCell'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nfunction DataRow({ rowNumber, colLabels }) {\n  const dataCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => {\n      const location = `${colLabels[i]}-${rowNumber}`\n      return (\n        <ResultCell\n          key={i}\n          location={location}\n        />\n      )\n    })\n  )\n\n  return (\n    <Row\n      data-row={rowNumber}\n    >\n      <RowHeader\n        label={rowNumber}\n      />\n      {dataCells()}\n    </Row>\n  )\n}\n\nDataRow.propTypes = {\n  rowNumber: PropTypes.number,\n  colLabels: PropTypes.arrayOf(PropTypes.string),\n}\n\nexport default DataRow\n\n","import { Machine, assign } from 'xstate'\n\nimport { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nfunction getTargetLocation({ rows, columns, rowIndex, colIndex, key }) {\n  switch (key) {\n    case 'ArrowUp':\n      rowIndex = Math.max(0, rowIndex - 1)\n      break\n    case 'ArrowRight':\n      colIndex = Math.min(columns - 1, colIndex + 1)\n      break\n    case 'ArrowDown':\n    case 'Enter':\n      rowIndex = Math.min(rows - 1, rowIndex + 1)\n      break\n    case 'ArrowLeft':\n      colIndex = Math.max(0, colIndex - 1)\n      break\n    default:\n      return null\n  }\n\n  const colLabel = getColumnLabel(colIndex)\n  const rowLabel = '' + (rowIndex + 1)\n\n  return `${colLabel}-${rowLabel}`\n}\n\nfunction focusTargetCell(ctx) {\n  if (!ctx.endLocation) { return Promise.resolve(false) }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const id = `[data-location=\"${ctx.endLocation}\"]`\n      const cell = document.querySelector(id)\n      if (cell) { cell.focus() }\n      resolve(true)\n    }, 0)\n  })\n}\n\nconst state = {\n  id: 'keyboardNav',\n  initial: 'idle',\n  context: {\n    columns: null,\n    rows: null,\n    key: null,\n    colIndex: null,\n    rowIndex: null,\n    endLocation: null,\n    wasFocused: false,\n  },\n  states: {\n    idle: {\n      on: {\n        'MOVE_FOCUS': {\n          actions: ['setNewContext', 'calcTargetLocation'],\n          target: 'focusTarget',\n        }\n      }\n    },\n    focusTarget: {\n      invoke: {\n        src: focusTargetCell,\n        onDone: {\n          actions: assign({ wasFocused: (ctx, event) => event.data }),\n          target: 'idle',\n        },\n      },\n    },\n  },\n}\n\nconst actions = {\n  actions: {\n    setNewContext: assign((ctx, { key, location }) => {\n      const [colIndex, rowIndex] = parseLocation(location)\n      return { colIndex, rowIndex, key }\n    }),\n    calcTargetLocation: assign({\n      endLocation: (ctx) => {\n        return getTargetLocation(ctx)\n      }\n    }),\n  },\n}\n\nfunction getKeyboardNavMachine(rows, columns) {\n  const newContext = {\n    ...state.context,\n    columns,\n    rows,\n  }\n\n  return Machine(state, actions, newContext)\n}\n\nexport {\n  state,\n  actions,\n  getTargetLocation,\n  focusTargetCell,\n}\n\nexport default getKeyboardNavMachine\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport { interpret } from 'xstate'\n\nimport { setActiveCell } from '~/actions/globalActions'\nimport ColHeaderRow from './ColHeaderRow'\nimport DataRow from './DataRow'\nimport { getColumnNames } from '~/library/utils'\nimport getKeyboardNavMachine from './keyboardNavMachine'\n\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n  overflow: hidden;\n  border-top: 2px solid ${props => props.theme.colors.table.borderDark};\n  border-left: 2px solid ${props => props.theme.colors.table.borderDark};\n  border-right: 1px solid ${props => props.theme.colors.table.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.table.borderDark};\n\n  * {\n    box-sizing: border-box;\n  }\n`\n\nexport class Table extends React.PureComponent {\n  static propTypes = {\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n    setActiveCell: PropTypes.func.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleOnClick = this.handleOnClick.bind(this)\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.colLabels = getColumnNames(props.columns)\n  }\n\n  keyboardNavMachine = getKeyboardNavMachine(this.props.rows, this.props.columns)\n  focusService = interpret(this.keyboardNavMachine)\n\n  componentDidMount() {\n    this.focusService.start()\n    this.props.setActiveCell('A-1')\n  }\n\n  componentWillUnmount() {\n    this.focusService.stop()\n  }\n\n  handleOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleOnKeyDown(event) {\n    event.stopPropagation()\n\n    const { location } = event.target.dataset\n\n    if (location) {\n      this.moveFocus(event.key, event.target.dataset.location)\n    }\n  }\n\n  moveFocus(key, location) {\n    this.focusService.send({ type: 'MOVE_FOCUS', key, location })\n  }\n\n  renderColHeaderRow(i) {\n    return (\n      <ColHeaderRow\n        key={i}\n        rows={this.props.rows}\n        colLabels={this.colLabels}\n      />\n    )\n  }\n\n  renderDataRows(rowNumber) {\n    return (\n      <DataRow\n        key={rowNumber}\n        rowNumber={rowNumber}\n        colLabels={this.colLabels}\n      />\n    )\n  }\n\n  renderRows() {\n    return new Array(this.props.rows + 1).fill(0).map((_, i) => {\n      if (i === 0) {\n        return this.renderColHeaderRow(i)\n      } else {\n        return this.renderDataRows(i)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Grid\n        data-table='app'\n        onClick={this.handleOnClick}\n        onKeyDown={this.handleOnKeyDown}\n      >\n        {this.renderRows()}\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { rows, columns } = state.global\n  return { rows, columns }\n}\n\nconst mapDisptachToProps = { setActiveCell }\n\nexport default connect(mapStateToProps, mapDisptachToProps)(Table)\n","\n/* @jsx jsx */\nimport React from 'react' // eslint-disable-line\nimport { jsx, css } from '@emotion/core'\n\n\nconst style = props => css`\n  align-items: center;\n  background-color: white;\n  border: 2px solid salmon;\n  box-shadow: 0 0 5px ${props.colors.shadow};\n  box-sizing: border-box;\n  display: flex;\n  font-size: 13px;\n  padding: 0 8px 0 2px;\n`\nconst props = {\n  'data-inputter': 'floating',\n}\n\nexport default { style, props }\n","import React from 'react'\n\n\nexport const InputContext = React.createContext()\n","class KeyboardActions {\n  constructor(component) {\n    this.c = component\n    this.disabledKeys = {}\n  }\n\n  get isFuncSelectorVisible() {\n    return this.c.state.isFuncSelectorVisible \n  }\n\n  run() {\n    const { key } = this.c.state.keyEvent\n\n    switch (key) { // eslint-disable-line\n      case 'Escape':\n        this.c.props.resetActiveCell()\n        break\n      case 'Enter':\n      case 'Tab':\n        if (this.isFuncSelectorVisible) { return }\n        this.c.cellValueSetter.run()\n        break\n      case 'ArrowLeft':\n      case 'ArrowRight':\n        this.c.setValueEvent(\n          this.c.props.valueEvent.value,\n          this.c.refInput.current.selectionEnd\n        )\n        break\n    }\n  }\n}\n\nexport default KeyboardActions\n","import { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nclass KeyboardFocuser {\n  constructor(component) {\n    this.c = component\n  }\n\n  run() {\n    const { key } = this.c.state.keyEvent\n    const { location } = this.c.props\n    let elementId\n\n    if (this.c.state.isFuncSelectorVisible) {\n      elementId = this.funcSelectorElId(key, location)\n    } else {\n      elementId = this.defaultElId(key, location)\n    }\n\n    this.focusElement(elementId)\n  }\n\n  funcSelectorElId(key, location) {\n    if (key === 'Escape') {\n      return `[data-cell=\"result\"][data-location=\"${location}\"]`\n    }\n  }\n\n  defaultElId(key, location) {\n    switch (key) {\n      case 'Tab':\n        return `[data-cell=\"result\"][data-location=\"${location}\"]`\n      case 'Enter':\n        return this.defaultEnter(location)\n      case 'Escape':\n        return `[data-cell=\"result\"][data-location=\"${location}\"]`\n      default:\n        // this.c.refInput.current.focus()\n    }\n  }\n\n  defaultEnter(location) {\n    const [colIndex, rowIndex] = parseLocation(location)\n    const nextRowIndex = Math.min(this.c.props.rows - 1, rowIndex + 1)\n    const colLabel = getColumnLabel(colIndex)\n    const rowLabel = '' + (nextRowIndex + 1)\n    const endLocation = `${colLabel}-${rowLabel}`\n\n    return `[data-cell=\"result\"][data-location=\"${endLocation}\"]`\n  }\n\n  focusElement(id) {\n    if (!id) { return }\n\n    const el = document.querySelector(id)\n\n    if (document.activeElement !== el) {\n      el.focus()\n    }\n  }\n}\n\nexport default KeyboardFocuser\n","import Lexer, { TOKENS as t } from '~/formulas/Lexer'\n\n\nclass CellValueSetter {\n  constructor(component) {\n    this.c = component\n  }\n\n  run() {\n    const { location } = this.c.props\n    const inputValue = this.c.props.valueEvent.value\n    let cellValue\n\n    if (this.isWhitespace(inputValue)) {\n      this.c.props.clearCellData(location)\n      return\n    }\n\n    if (this.isFormula(inputValue)) {\n      cellValue = this.sanitizeValue(inputValue)\n    } else {\n      cellValue = inputValue\n    }\n\n    this.c.props.setCellData(location, cellValue)\n  }\n\n  isFormula(text) {\n    return text.length > 0 && text[0] === '='\n  }\n\n  isWhitespace(text) {\n    return text.length === 0 || Boolean(text.match(/^\\s+$/))\n  }\n\n  sanitizeValue(value) {\n    const lexer = new Lexer(value)\n    const tokens = lexer.getTokens()\n\n    return tokens\n      .map(token => {\n        switch (token.type) {\n          case t.FUNCTION:\n            return token.text.toUpperCase()\n          case t.NUMBER:\n            return token.value\n          default:\n            return token.text\n        }\n      })\n      .join('')\n  }\n}\n\nexport default CellValueSetter\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\n\n\nexport const Input = styled.input`\n  height: 100%;\n  outline: none;\n  width: 100%;\n  z-index: 100;\n`\n\nfunction InputTag({ fwdRef, value, style, props, onChange, onKeyDown }) {\n  return (\n    <Input\n      ref={fwdRef}\n      css={style}\n      value={value}\n      onChange={onChange}\n      onKeyDown={onKeyDown}\n      {...props}\n    />\n  )\n}\n\nInputTag.propTypes = {\n  fwdRef: PropTypes.object.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onKeyDown: PropTypes.func.isRequired,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.func,\n  ]),\n  props: PropTypes.object,\n}\n\nInputTag.defaultProps = {\n  style: {},\n  props: {},\n}\n\nexport default InputTag\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport { InputContext } from './InputContext'\n\n\nconst Root = styled.div`\n  background: ${props => props.theme.colors.dropdown.normal};\n  margin-top: 1px;\n  box-shadow: 0 0 5px ${props => props.theme.colors.shadow};\n  border: 1px solid ${props => props.theme.colors.dropdown.active};\n  width: 300px;\n  padding: 6px 8px;\n  position: fixed;\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  padding-top: 12px;\n  font-size: 12px;\n`\n\nconst P = styled.p`\n  line-height: 1em;\n  font-size: 13px;\n`\n\nconst Hr = styled.hr`\n  border: 0;\n  border-top: 1px solid ${props => props.theme.colors.dropdown.active};\n`\n\nclass FuncDescription extends React.PureComponent {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    cursorPos: PropTypes.number,\n    fnScopes: PropTypes.array,\n  }\n\n  getFnScope() {\n    const { fnScopes, cursorPos } = this.props\n    let currScope\n\n    for (let scope of fnScopes) {\n      if (cursorPos >= scope.startIndex + 1) {\n        currScope = scope\n      } else {\n        break\n      }\n    }\n\n    if (currScope && currScope.endIndex === null) { return currScope}\n    if (currScope && cursorPos - 1 < currScope.endIndex) { return currScope }\n    return null\n  }\n\n  getFnNode(scope) {\n    const key = scope.fnName.toUpperCase()\n    return formulaFuncs[key]\n  }\n\n  render() {\n    const scope = this.getFnScope()\n    const { inputRect } = this.context\n    let fnNode\n\n    if (!scope) { return null }\n    fnNode = this.getFnNode(scope)\n\n    return (\n      <Root\n        css={css`\n          top: ${inputRect.bottom}px;\n          left: ${inputRect.left}px;\n        `}\n      >\n        <Pre\n          css={css`\n            padding-bottom: 6px;\n          `}\n        >\n          {fnNode.definition}\n        </Pre>\n        <Hr />\n        <Subtitle>Example</Subtitle>\n        <Pre>{fnNode.example}</Pre>\n        <Subtitle>Summary</Subtitle>\n        <P>{fnNode.summary}</P>\n      </Root>\n    )\n  }\n}\n\nFuncDescription.propTypes = {\n  cursorPos: PropTypes.number,\n  fnScopes: PropTypes.array,\n}\n\nexport default FuncDescription\n\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport styled from '@emotion/styled'\n\n\nconst NoOp = () => {}\n\nconst Li = styled.li`\n  outline: none;\n`\n\nfunction DropdownItem({ item, index, isActive, onMouseEnter }) {\n  return (\n    <Li\n      tabIndex={0}\n      onMouseEnter={() => onMouseEnter(index)}\n    >\n      {isActive && item.active ? item.active : item.base}\n    </Li>\n  )\n}\n\nDropdownItem.propTypes = {\n  item: PropTypes.shape({\n    base: PropTypes.node.isRequired,\n    active: PropTypes.node,\n  }),\n  index: PropTypes.number.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  onMouseEnter: PropTypes.func,\n}\n\nDropdownItem.defaultProps = {\n  onMouseEnter: NoOp,\n}\n\nexport default DropdownItem\n","\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport InteractiveListItem from './InteractiveListItem'\n\n\nconst Ul = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`\n\nclass InteractiveList extends React.PureComponent {\n\n  static propsTypes = {\n    onMouseEnter: PropTypes.func,\n    items: PropTypes.array.isRequired,\n    styles: PropTypes.shape({\n      ul: PropTypes.object,\n      li: PropTypes.object,\n    }),\n  }\n\n  renderListItems() {\n    return this.props.items\n      .map((item, index) => (\n        <InteractiveListItem\n          key={index}\n          index={index}\n          item={item.item}\n          style={{...this.props.styles.li}}\n          isActive={item.isActive}\n          onMouseEnter={this.props.onMouseEnter}\n        />\n      ))\n  }\n\n  render() {\n    const { items, styles } = this.props\n\n    if (items.length === 0) { return null }\n\n    return (\n      <Ul\n        tabIndex={-1}\n        style={styles.ul}\n      >\n        {this.renderListItems()}\n      </Ul>\n    )\n  }\n}\n\nexport default InteractiveList\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport InteractiveList from '~/library/InteractiveList'\nimport Token from '~/formulas/Token'\nimport { InputContext } from './InputContext'\nimport { withTheme } from 'emotion-theming'\n\n\nconst Root = styled.div`\n  border: 0;\n  position: fixed;\n`\n\nconst baseItemStyle = css`\n  padding: 6px 8px;\n`\n\nconst ItemBaseRoot = styled.div`\n  ${baseItemStyle}\n  background: ${props => props.theme.colors.dropdown.normal};\n`\n\nconst ItemActiveRoot = styled.div`\n  ${baseItemStyle}\n  background: ${props => props.theme.colors.dropdown.active};\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  font-size: 12px;\n`\n\nclass FuncSelector extends React.Component {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    token: PropTypes.instanceOf(Token),\n    colors: PropTypes.object,\n    theme: PropTypes.object,\n  }\n\n  state = {\n    listItems: [],\n    itemIndex: 0,\n    keyEvent: null,\n    isVisible: false,\n  }\n\n  constructor() {\n    super()\n    this.handleOnClick = this.handleOnClick.bind(this)\n    this.setIndex = this.setIndex.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.state.listItems !== nextState.listItems\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.updateContextData(prevState)\n    this.updateListItems(prevProps)\n    this.keyActions()\n  }\n\n  componentWillUnmount() {\n    this.context.setIsFuncSelectorVisible(false)\n  }\n\n  updateListItems(prevProps) {\n    if (prevProps.token === this.props.token) { return }\n\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  updateContextData(prevState) {\n    const { keyEvent } = this.context\n\n    if (prevState.keyEvent !== keyEvent) {\n      this.setState({ keyEvent })\n      this.keyEventSetIndex(keyEvent)\n    }\n  }\n\n  keyActions() {\n    const { keyEvent } = this.context\n    if (this.state.keyEvent === keyEvent) { return }\n    if (['Enter', 'Tab'].includes(keyEvent.key) && this.state.isVisible) {\n      this.setInputterValueEvent()\n    }\n  }\n\n  setInputterValueEvent() {\n    const currInputValue = this.context.valueEvent.value\n    const { token } = this.props\n    const { fnName } = this.state.listItems[this.state.itemIndex]\n    const rightChunkIndex = token.index + token.text.length\n    const leftChunk = currInputValue.slice(0, token.index)\n    const rightChunk = currInputValue.slice(rightChunkIndex)\n    const value = `${leftChunk}${fnName}(${rightChunk}`\n    const cursorPos = leftChunk.length + fnName.length + 1\n    this.context.setValueEvent(value, cursorPos)\n  }\n\n  setListItems() {\n    const { token } = this.props\n    const text = token.text.toUpperCase()\n    const listItems = Object\n      .keys(formulaFuncs)\n      .filter(fnName => fnName.startsWith(text))\n      .sort()\n      .map(fnName => ({\n        item: {\n          base: this.itemBase(fnName),\n          active: this.itemActive(fnName),\n        },\n        isActive: false,\n        fnName,\n      }))\n    let isVisible = false\n    let itemIndex\n\n    itemIndex = Math.max(Math.min(listItems.length - 1, this.state.itemIndex), 0)\n\n    if (listItems.length > 0) {\n      listItems[itemIndex].isActive = isVisible = true\n    }\n\n    this.context.setIsFuncSelectorVisible(isVisible)\n    this.setState({ listItems, itemIndex, isVisible })\n  }\n\n  keyEventSetIndex(keyEvent) {\n    let itemIndex = this.state.itemIndex\n\n    switch (keyEvent.key) { // eslint-disable-line default-case\n      case 'ArrowUp':\n          itemIndex = this.state.itemIndex - 1\n        break\n      case 'ArrowDown':\n          itemIndex = this.state.itemIndex + 1\n        break\n    }\n\n    this.setState({ itemIndex }, () => {\n      this.setListItems()\n    })\n  }\n\n  setIndex(itemIndex) {\n    this.setState({ itemIndex }, () => {\n      this.setListItems()\n    })\n  }\n\n  itemBase(fnName) {\n    return (\n      <ItemBaseRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n      </ItemBaseRoot>\n    )\n  }\n\n  itemActive(fnName) {\n    return (\n      <ItemActiveRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n        <Subtitle>\n          {formulaFuncs[fnName].summary}\n        </Subtitle>\n      </ItemActiveRoot>\n    )\n  }\n\n  getListStyles() {\n    const { theme } = this.props\n\n    return {\n      ul: {\n        marginTop: 1,\n        boxShadow: `0 0 5px ${theme.colors.shadow}`,\n        border: `1px solid ${theme.colors.dropdown.active}`,\n        width: 300,\n      }\n    }\n  }\n\n  handleOnClick(event) {\n    event.nativeEvent.stopPropagation()\n    this.setInputterValueEvent()\n  }\n\n  render() {\n    const { listItems, isVisible } = this.state\n    const { inputRect } = this.context\n\n    return (\n      <Root\n        css={css`\n          top: ${inputRect.bottom}px;\n          left: ${inputRect.left}px;\n        `}\n        open={isVisible}\n        onClick={this.handleOnClick}\n      >\n        <InteractiveList\n          items={listItems}\n          styles={this.getListStyles()}\n          onMouseEnter={this.setIndex}\n        />\n      </Root>\n    )\n  }\n}\n\nexport default withTheme(FuncSelector)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { TOKENS as t } from '~/formulas/Lexer'\nimport FuncDescription from './FuncDescription'\nimport FuncSelector from './FuncSelector'\n\n\nclass Suggestions extends React.PureComponent {\n\n  static propTypes = {\n    tokens: PropTypes.array.isRequired,\n    cursorPos: PropTypes.number,\n  }\n\n  state = {\n    fnScopes: [],\n  }\n\n  componentDidMount() {\n    this.setFnScopes()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.tokens !== this.props.tokens) {\n      this.setFnScopes()\n    }\n  }\n\n  setFnScopes() {\n    const stack = []\n    const fnScopes = []\n\n    for (let token of this.props.tokens) {\n      if (token.type === t.FUNCTION) {\n        const scope = { fnName: token.text, startIndex: token.index, endIndex: null }\n        stack.push(scope)\n        fnScopes.push(scope)\n      } else if (token.type === t.LPAREN) {\n        stack.push('(')\n      } else if (token.type === t.RPAREN) {\n        stack.pop()\n        if (stack.length > 0 && stack[stack.length - 1] !== '(') {\n          const scope = stack.pop()\n          scope.endIndex = token.index - 1\n        }\n      }\n    }\n\n    fnScopes.sort((a, b) => a.startIndex - b.startIndex)\n    this.setState({ fnScopes })\n  }\n\n  getCurrTokenIndex(tokens, cursorPos) {\n    let index\n\n    for (index = 0; index < tokens.length; index++) {\n      const token = tokens[index]\n      const endIndex = token.index + token.text.length\n\n      if (cursorPos > token.index && cursorPos <= endIndex) {\n        break\n      }\n    }\n\n    return index\n  }\n\n  getCompareTokens() {\n    const { tokens, cursorPos } = this.props\n    const index = this.getCurrTokenIndex(tokens, cursorPos)\n    const tokenBefore = index > 0 && tokens[index - 1]\n    const tokenCurr = tokens[index]\n    const tokenAfter = index < tokens.length - 2 && tokens[index + 1]\n    return [ tokenBefore, tokenCurr, tokenAfter ]\n  }\n\n  getFuncSelector() {\n    const [ tokenBefore, tokenCurr, tokenAfter ] = this.getCompareTokens()\n\n    if (this.props.tokens.length < 2) { return null }\n\n    const option1 = (\n      tokenBefore\n      && tokenCurr\n      && tokenAfter\n      && tokenBefore.category === 'operator'\n      && [t.UNKNOWN, t.FUNCTION].includes(tokenCurr.type)\n      && tokenAfter.type !== t.LPAREN\n    )\n\n    const option2 = (\n      tokenBefore\n      && tokenCurr\n      && !tokenAfter\n      && [t.UNKNOWN, t.FUNCTION].includes(tokenCurr.type)\n    )\n\n    if (option1 || option2) {\n      return (\n        <FuncSelector\n            token={tokenCurr}\n        />\n      )\n    }\n  }\n\n  render() {\n    if (this.props.cursorPos === undefined) { return null }\n\n    const renderedFuncSelector = this.getFuncSelector()\n\n    if (renderedFuncSelector) {\n      return renderedFuncSelector\n    } else {\n      return (\n        <FuncDescription\n          cursorPos={this.props.cursorPos}\n          fnScopes={this.state.fnScopes}\n        />\n      )\n    }\n  }\n}\n\nexport default Suggestions\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { setCellData, clearCellData } from '~/actions/tableDataActions'\nimport { setInputterValueEvent, resetActiveCell } from '~/actions/globalActions'\nimport { InputContext } from './InputContext'\nimport Lexer from '~/formulas/Lexer'\nimport KeyboardActions from './KeyboardActions'\nimport KeyboardFocuser from './KeyboardFocuser'\nimport CellValueSetter from './CellValueSetter'\nimport InputTag from './InputTag'\nimport Suggestions from './Suggestions'\n\n\nconst NoOp = () => {}\n\nexport class Inputter extends React.PureComponent {\n\n  static propTypes = {\n    // props\n    isInteractive: PropTypes.bool,\n    // redux\n    clearCellData: PropTypes.func.isRequired,\n    columns: PropTypes.number.isRequired,\n    entered: PropTypes.string.isRequired,\n    valueEvent: PropTypes.object.isRequired,\n    location: PropTypes.string.isRequired,\n    rows: PropTypes.number.isRequired,\n    setCellData: PropTypes.func.isRequired,\n    setInputterValueEvent: PropTypes.func.isRequired,\n    resetActiveCell: PropTypes.func.isRequired,\n    inputTagProps: PropTypes.object,\n    // lifecycle functions\n    onMount: PropTypes.func,\n    onUnmount: PropTypes.func,\n  }\n\n  static defaultProps = {\n    onMount: NoOp,\n    onUnmount: NoOp,\n    isInteractive: false,\n    inputTagProps: {},\n  }\n\n  constructor(props) {\n    super(props)\n    this.cellValueSetter = new CellValueSetter(this)\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.keyboardActions = new KeyboardActions(this)\n    this.keyboardFocuser = new KeyboardFocuser(this)\n    this.setInputWidth = this.setInputWidth.bind(this)\n    this.setIsFuncSelectorVisible = this.setIsFuncSelectorVisible.bind(this)\n    this.setValueEvent = this.setValueEvent.bind(this)\n  }\n\n  state = {\n    tokens: [],\n    isFuncSelectorVisible: false,\n    keyEvent: { key: '' },\n    width: null,\n    initValueEvent: null,\n  }\n\n  refInput = React.createRef()\n\n  componentDidMount() {\n    this.setState({ initValueEvent: this.props.valueEvent })\n    this.props.onMount(this.props, this.state, this.refInput.current)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.keyEvent !== this.state.keyEvent) {\n      this.keyboardFocuser.run()\n      this.keyboardActions.run()\n    }\n\n    if (prevProps.valueEvent !== this.props.valueEvent) {\n      this.focusInputTag()\n      this.tokenizeInputValue()\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.onMount(this.props, this.state, this.refInput.current)\n  }\n\n  setInputWidth(width) {\n    if (this.state.width !== width) {\n      this.setState({ width })\n    }\n  }\n\n  setValueEvent(value, cursorPos) {\n    const valueEvent = { value, cursorPos }\n    this.props.setInputterValueEvent(valueEvent)\n  }\n\n  tokenizeInputValue() {\n    const { value } = this.props.valueEvent\n    const lexer = new Lexer(value)\n    const tokens = lexer.getTokens()\n    this.setState({ tokens })\n  }\n\n  setIsFuncSelectorVisible(isFuncSelectorVisible) {\n    this.setState({ isFuncSelectorVisible })\n  }\n\n  focusInputTag() {\n    if (!this.props.isInteractive) { return null }\n\n    const inputEl = this.refInput.current\n    const { cursorPos } = this.props.valueEvent\n\n    inputEl.focus()\n\n    if (inputEl.selectionEnd !== cursorPos) {\n      inputEl.selectionStart = cursorPos\n      inputEl.selectionEnd = cursorPos\n    }\n  }\n\n  handleOnChange(event) {\n    const { target: { value } } = event\n    const cursorPos = event.target.selectionStart\n    this.setValueEvent(value, cursorPos)\n  }\n\n  handleOnKeyDown(event) {\n    const { key } = event\n\n    if (this.state.isFuncSelectorVisible && ['Tab', 'Enter'].includes(key)) {\n      event.preventDefault()\n    }\n\n    this.setState({ keyEvent: { key } })\n  }\n\n  renderSuggestions() {\n    if (!this.props.isInteractive) { return null }\n\n    return (\n      <Suggestions\n        tokens={this.state.tokens}\n        cursorPos={this.props.valueEvent.cursorPos}\n      />\n    )\n  }\n\n  render() {\n    const inputEl = this.refInput.current\n    const inputRect = inputEl && inputEl.getBoundingClientRect()\n\n    return (\n      <InputContext.Provider\n        value={{\n          inputRect,\n          setIsFuncSelectorVisible: this.setIsFuncSelectorVisible,\n          keyEvent: this.state.keyEvent,\n          valueEvent: this.props.valueEvent,\n          setValueEvent: this.setValueEvent,\n        }}\n      >\n        <InputTag\n          fwdRef={this.refInput}\n          value={this.props.valueEvent.value}\n          style={this.props.inputTagProps.style}\n          props={this.props.inputTagProps.props}\n          onChange={this.handleOnChange}\n          onKeyDown={this.handleOnKeyDown}\n        />\n        {this.renderSuggestions()}\n      </InputContext.Provider>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {\n    global: {\n      activeCell: {\n        entered,\n        location,\n        valueEvent,\n      },\n      rows,\n      columns,\n    }\n  } = state\n\n  return {\n    columns,\n    entered,\n    location,\n    rows,\n    valueEvent,\n  }\n}\n\nconst mapDispatchToProps = {\n  clearCellData,\n  resetActiveCell,\n  setCellData,\n  setInputterValueEvent,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputter)\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { css, jsx } from '@emotion/core' // eslint-disable-line\n\nimport { Input as BaseInput } from '../Inputter/InputTag'\n\n\nconst PADDING_COMPARE = 3\nconst PADDING_SIZE = 7\n\nconst Input = styled(BaseInput)`\n  position: absolute;\n  margin-top: -200vh;\n  visibility: hidden;\n`\n\nclass InputSizer extends React.PureComponent {\n\n  static propTypes = {\n    // props\n    setInputWidth: PropTypes.func.isRequired,\n    // redux\n    cellRect: PropTypes.object,\n    valueEvent: PropTypes.object,\n  }\n\n  refInput = React.createRef()\n\n  componentDidMount() {\n    this.setInputWidth()\n  }\n\n  componentDidUpdate(prevProps, prevState) { // eslint-disable-line\n    if (prevProps.valueEvent !== this.props.valueEvent) {\n      this.setInputWidth()\n    }\n  }\n\n  setInputWidth() {\n    const inputEl = this.refInput.current\n    const textWidth = inputEl.scrollWidth\n    const width = textWidth + PADDING_COMPARE > this.props.cellRect.width\n      ? Math.ceil(textWidth) + PADDING_SIZE\n      : this.props.cellRect.width\n\n    this.props.setInputWidth(width)\n  }\n\n  render() {\n    return (\n      <Input\n        ref={this.refInput}\n        readOnly\n        value={this.props.valueEvent.value}\n        css={{\n          width: this.props.cellRect.width,\n        }}\n      />\n    )\n  }\n}\n\nexport default InputSizer\n","import { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nclass KeyboardFocuser {\n\n  constructor(component) {\n    this.c = component\n  }\n\n  run() {\n    const { key } = this.c.state.keyEvent\n    const { location } = this.c.props\n    const elementId = this.defaultElId(key, location)\n    this.focusElement(elementId)\n  }\n\n  defaultElId(key, location) {\n    switch (key) { // eslint-disable-line\n      case 'Tab':\n        return `[data-cell=\"result\"][data-location=\"${location}\"]`\n      case 'Enter':\n        return this.defaultEnter(location)\n      case 'Escape':\n        return `[data-cell=\"result\"][data-location=\"${location}\"]`\n    }\n  }\n\n  defaultEnter(location) {\n    const [colIndex, rowIndex] = parseLocation(location)\n    const nextRowIndex = Math.min(this.c.props.rows - 1, rowIndex + 1)\n    const colLabel = getColumnLabel(colIndex)\n    const rowLabel = '' + (nextRowIndex + 1)\n    const endLocation = `${colLabel}-${rowLabel}`\n\n    return `[data-cell=\"result\"][data-location=\"${endLocation}\"]`\n  }\n\n  focusElement(elementId) {\n    if (!elementId) { return }\n\n    const el = document.querySelector(elementId)\n\n    if (el && document.activeElement !== el) {\n      el.focus()\n    }\n  }\n}\n\nexport default KeyboardFocuser\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { closeFloatingInputter } from '~/actions/globalActions'\nimport inputTagProps from './inputTagProps'\nimport Inputter from '../Inputter/Inputter'\nimport InputSizer from './InputSizer'\nimport KeyboardFocuser from './KeyboardFocuser'\n\n\nconst INIT_KEY_EVENT = { key: '' }\n\nconst Root = styled.div`\n  position: fixed;\n`\n\nexport class FloatingInputter extends React.PureComponent {\n\n  static propTypes = {\n    // redux\n    cellRect: PropTypes.object,\n    closeFloatingInputter: PropTypes.func.isRequired,\n    isFloatingInputterOpen: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    cellRect: {},\n    isFloatingInputterOpen: false,\n  }\n\n  constructor() {\n    super()\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.handleInputterOnMount = this.handleInputterOnMount.bind(this)\n    this.keyboardFocuser = new KeyboardFocuser(this)\n    this.setInputWidth = this.setInputWidth.bind(this)\n  }\n\n  state = {\n    keyEvent: INIT_KEY_EVENT,\n    width: 'auto',\n  }\n\n  refRoot = React.createRef()\n\n  componentDidUpdate() {\n    this.keyboardFocuser.run()\n  }\n\n  setInputWidth(width) {\n    if (this.state.width !== width) {\n      this.setState({ width })\n    }\n  }\n\n  handleInputterOnMount(props, state, inputEl) {\n    inputEl.focus()\n    inputEl.selectionEnd = inputEl.value.length\n    this.setState({ keyEvent: INIT_KEY_EVENT })\n  }\n\n  handleOnKeyDown(event) {\n    const { key } = event\n    this.setState({ keyEvent: { key } })\n  }\n\n  handleOnBlur(event) {\n    if (!this.refRoot.current.contains(event.relatedTarget)) {\n      this.props.closeFloatingInputter()\n    }\n  }\n\n  renderInputter() {\n    if (!this.props.valueEvent) { return null }\n\n    return (\n      <Inputter\n        isInteractive\n        onMount={this.handleInputterOnMount}\n        inputTagProps={inputTagProps}\n      />\n    )\n  }\n\n  render() {\n    const canRender = this.props.isFloatingInputterOpen && this.props.valueEvent\n    if (!canRender) { return null }\n\n    const { top, left, height } = this.props.cellRect\n    const { width } = this.state\n\n    return (\n      <Root\n        ref={this.refRoot}\n        css={{ top, left, width, height }}\n        onKeyDown={this.handleOnKeyDown}\n        onBlur={this.handleOnBlur}\n      >\n        <InputSizer\n          valueEvent={this.props.valueEvent}\n          cellRect={this.props.cellRect}\n          setInputWidth={this.setInputWidth}\n        />\n        {this.renderInputter()}\n      </Root>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {\n    global: {\n      activeCell: {\n        cellRect,\n        isFloatingInputterOpen,\n        location,\n        valueEvent,\n      },\n    }\n  } = state\n\n  return { cellRect, isFloatingInputterOpen, valueEvent, location }\n}\n\nconst mapDispatchToProps = { closeFloatingInputter }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FloatingInputter)\n","\n/* @jsx jsx */\nimport React from 'react' // eslint-disable-line\nimport { jsx, css } from '@emotion/core'\n\n\nconst style = () => css`\n  border: 0;\n  display: flex;\n  font-size: 13px;\n  height: unset;\n  padding: 0 8px;\n`\nconst props = {\n  'data-inputter': 'bar',\n}\n\nexport default { style, props }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\n\nimport inputTagProps from './inputTagProps'\nimport Inputter from '../Inputter/Inputter'\nimport { ROW_HEADER_WIDTH } from '../cell/RowHeader'\n\n\nconst Root = styled.div`\n  display: flex;\n  border-width: 2px 2px 0;\n  border-style: solid;\n  border-color: ${props => props.theme.colors.table.borderDark};\n  position: relative;\n  height: 30px;\n  width: 893px;\n  z-index: 10;\n`\n\nconst Fx = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.table.borderDark};\n  width: ${ROW_HEADER_WIDTH + 3}px;\n  color: ${props => props.theme.colors.table.borderDark};\n  font-style: italic;\n`\n\nclass FormulaBar extends React.PureComponent {\n\n  static propTypes = {\n    location: PropTypes.string,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleOnFocus = this.handleOnFocus.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n  }\n\n  state = {\n    isInteractive: false,\n  }\n\n  refRoot = React.createRef()\n\n  handleOnFocus() {\n    this.setState({ isInteractive: true })\n    \n  }\n\n  handleOnBlur(event) {\n    if (!this.refRoot.current.contains(event.relatedTarget)) {\n      this.setState({ isInteractive: false })\n    }\n  }\n\n  renderInputter() {\n    if (!this.props.location) { return null }\n\n    return (\n      <Inputter\n        isInteractive={this.state.isInteractive}\n        inputTagProps={inputTagProps}\n      />\n    )\n  }\n\n  render() {\n    return (\n      <Root\n        ref={this.refRoot}\n        onFocus={this.handleOnFocus}\n        onBlur={this.handleOnBlur}\n      >\n        <Fx>ƒx</Fx>\n        {this.renderInputter()}\n      </Root>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {\n    global: {\n      activeCell: {\n        location,\n      },\n    }\n  } = state\n\n  return { location }\n}\n\nexport default connect(mapStateToProps)(FormulaBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport Header from './components/header/Header'\nimport Table from './components/table/Table'\nimport FloatingInputter from './components/FloatingInputter/FloatingInputter'\nimport FormulaBar from './components/FormulaBar/FormulaBar'\n\n\nconst Container = styled.div`\n  display: grid;\n  grid:\n    \"left-blank main right-blank\" 100vh\n    / auto minmax(auto, 1000px) auto;\n`\n\nconst Main = styled.main`\n  grid-area: main;\n`\n\nfunction App() {\n  return (\n    <Container>\n      <Main>\n        <FloatingInputter />\n        <div data-dummy-focus-stop tabIndex=\"0\" />\n        <Header />\n        <FormulaBar />\n        <Table />\n      </Main>\n    </Container>\n  )\n}\n\nApp.propTypes = {\n  setActiveCell: PropTypes.func,\n}\n\nexport default App\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from 'emotion-theming'\nimport { Global } from '@emotion/core'\nimport 'sanitize.css'\n\nimport appStore from './reducers/'\nimport globalStyles from './styles/globalStyles'\nimport theme from './styles/theme'\nimport App from './App'\n\n\nfunction Root() {\n  return (\n    <Provider store={appStore}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Global styles={globalStyles} />\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default Root\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
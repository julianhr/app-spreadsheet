{"version":3,"sources":["reducers/globalReducer.js","reducers/tableReducer.js","reducers/index.js","styles/theme.js","styles/globalStyles.js","actions/globalActions.js","components/header/Header.jsx","components/cell/displayMachine.js","actions/tableActions.js","components/cell/InputData.jsx","components/cell/TextData.jsx","components/cell/CellData.jsx","library/utils.js","components/table/keyboardNavMachine.js","components/table/Table.jsx","App.jsx","Root.jsx","serviceWorker.js","index.js"],"names":["createReducer","activeCell","rows","columns","SET_ACTIVE_CELL","state","_ref","payload","SET_CELL_VALUE","location","text","formula","DELETE_CELL_VALUE","_ref2","appStoreFn","configureStore","reducer","global","globalReducer","table","tableReducer","breaks","xs","sm","md","lg","breakBump","queries","concat","from","breakPoint","upTo","theme","colors","cell","border","primary","strong","field","background","globalStyles","css","setActiveCell","createAction","Root","Object","styled_base_browser_esm","target","name","styles","Header","react_default","a","createElement","displayMachine","Machine","id","initial","states","static","focused","notFocused","on","EDITABLE_MODIFY","EDITABLE_REPLACE","editable","modify","replace","STATIC_FOCUSED","STATIC","setCellValue","clearCellValue","dispatch","getState","undefined","Promise","resolve","action","type","Input","InputData","_React$PureComponent","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","refInput","React","createRef","handleOnKeyDown","bind","assertThisInitialized","handleOnBlur","inherits","createClass","key","value","focusInputTag","input","current","focus","scrollLeft","scrollWidth","rawValue","trim","props","length","cellValue","isFormula","evaluateFormula","event","onEscape","setNewValue","onCommit","stopPropagation","defaultValue","replaceValue","ref","onKeyDown","onBlur","PureComponent","mapDispatchToProps","connect","ownProps","Text","TextData","refText","focusTextTag","isFocused","includes","onKeyDownEditable","tabIndex","onDoubleClick","Wrapper","CellData","displayState","initialState","displayService","interpret","onTransition","setState","textTagOnDoubleClick","textTagOnKeyDownEditable","inputTagOnEscape","inputTagOnCommit","start","stop","send","matches","cell_InputData","cell_TextData","renderData","BASE_CODE_POINT","codePointAt","getColumnNames","cols","names","prevNames","remainCols","newNames","outerLoop","_i","_prevNames","colName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","letter","push","err","return","toConsumableArray","parseLocation","_location$split","split","_location$split2","slicedToArray","c","r","label","_label$split","_label$split2","col","reduce","prev","charCodeAt","getColumnPosition","getTargetLocation","rowIndex","colIndex","Math","max","min","colLabel","num","basePoint","curr","codePoint","String","fromCodePoint","floor","reverse","join","getColumnLabel","rowLabel","context","endLocation","wasFocused","idle","MOVE_FOCUS","actions","focusTarget","invoke","src","ctx","setTimeout","document","querySelector","onDone","assign","data","setNewContext","_parseLocation","_parseLocation2","calcTargetLocation","getKeyboardNavMachine","newContext","objectSpread","RootTable","Td","Table","keyboardNavMachine","focusService","handleTableOnClick","handleTableOnKeyDown","columnNames","moveFocus","rowNumber","_this2","Array","fill","map","_","i","cell_CellData","isActive","_this3","renderDataCells","onClick","renderRows","_state$global","Container","Main","header_Header","table_Table","APP_STORE","es","store","react_router_dom","emotion_theming_browser_esm","core_browser_esm","src_App","Boolean","window","hostname","match","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNAQeA,cANc,CAC3BC,WAAY,KACZC,KAAM,EACNC,QAAS,GAGiC,CAC1CC,gBAAmB,SAACC,EAADC,GAAwB,IAAdC,EAAcD,EAAdC,QAC3BF,EAAMJ,WAAaM,KCLRP,cAFO,GAEsB,CAC1CQ,eAAkB,SAACH,EAADC,GAAwB,IAAdC,EAAcD,EAAdC,QAClBE,EAA4BF,EAA5BE,SAAUC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QACxBN,EAAMI,GAAY,CAAEC,OAAMC,YAG5BC,kBAAqB,SAACP,EAADQ,UACZR,EADoCQ,EAAdN,YCKlBO,EAVI,kBACjBC,YAAe,CACbC,QAAS,CACPC,OAAQC,EACRC,MAAOC,MCGPC,EAAS,CACbC,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,MAGAC,EAAY,CAChBJ,GAAI,KACJC,GAAI,KACJC,GAAI,MAGAG,EAAU,CACdL,GAAE,sBAAAM,OAAwBP,EAAOE,GAAK,EAApC,OACFA,GAAE,sBAAAK,OAAwBP,EAAOE,GAA/B,wBAAAK,OAAwDP,EAAOG,GAAK,EAApE,OACFA,GAAE,sBAAAI,OAAwBP,EAAOG,GAA/B,wBAAAI,OAAwDP,EAAOI,GAAK,EAApE,OACFA,GAAE,sBAAAG,OAAwBP,EAAOI,GAA/B,OACFI,KAAM,SAACC,GAAD,4BAAAF,OAAuCP,EAAOS,GAA9C,QACNC,KAAM,SAACD,GAAD,4BAAAF,OAAuCP,EAAQK,EAAUI,IAAgB,EAAzE,SASOE,EAND,CACZC,OApCa,CACbvB,KAAM,UACNwB,KAAM,CACJC,OAAQ,aAEVC,QAAS,CACPC,OAAQ,WAEVC,MAAO,CACLC,WAAY,YA4BdlB,SACAM,WCVaa,EAtBMC,YAAH,cAELT,EAAMC,OAAOvB,KAFR,6JCHLgC,EAAgBC,YAAa,mBCCpCC,EAAIC,OAAAC,EAAA,EAAAD,CAAA,UAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,UAAAC,OAAA,0FAgBKC,MARf,WACE,OACEC,EAAAC,EAAAC,cAACT,EAAD,KACEO,EAAAC,EAAAC,cAAA,sFCwBSC,EApCQC,YAAQ,CAC7BC,GAAI,OACJC,QAAS,SACTC,OAAQ,CACNC,OAAQ,CACNF,QAAS,aACTC,OAAQ,CACNE,QAAS,GACTC,WAAY,IAEdC,GAAI,CACFC,gBAAiB,CACfhB,OAAQ,mBAEViB,iBAAkB,CAChBjB,OAAQ,sBAIdkB,SAAU,CACRP,OAAQ,CACNQ,OAAQ,GACRC,QAAS,IAEXL,GAAI,CACFM,eAAgB,CACdrB,OAAQ,kBAEVsB,OAAQ,CACNtB,OAAQ,eC7BLuB,EAAe3B,YAAa,kBAElC,SAAS4B,EAAe9D,GAC7B,OAAO,SAAC+D,EAAUC,GAGhB,QAAcC,IAFAD,IAAWtD,MAAMV,GAEJ,OAAOkE,QAAQC,UAE1C,IAAIC,EAAS,CACXC,KAAM,oBACNvE,QAASE,GAGX,OAAOkE,QAAQC,QAAQJ,EAASK,KCRpC,IAAME,EAAKlC,OAAAC,EAAA,EAAAD,CAAA,SAAAE,OAAA,YAAAF,CAAA,CAAAG,KAAA,SAAAC,OAAA,oKAeE+B,EAAb,SAAAC,GAaE,SAAAD,IAAc,IAAAE,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAAJ,IACZE,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAAmC,GAAAO,KAAAH,QAKFI,SAAWC,IAAMC,YAJfR,EAAKS,gBAAkBT,EAAKS,gBAAgBC,KAArB/C,OAAAgD,EAAA,EAAAhD,CAAAqC,IACvBA,EAAKY,aAAeZ,EAAKY,aAAaF,KAAlB/C,OAAAgD,EAAA,EAAAhD,CAAAqC,IAHRA,EAbhB,OAAArC,OAAAkD,EAAA,EAAAlD,CAAAmC,EAAAC,GAAApC,OAAAmD,EAAA,EAAAnD,CAAAmC,EAAA,EAAAiB,IAAA,oBAAAC,MAAA,WAsBId,KAAKe,kBAtBT,CAAAF,IAAA,gBAAAC,MAAA,WA0BI,IAAME,EAAQhB,KAAKI,SAASa,QAC5BD,EAAME,QACNF,EAAMG,WAAaH,EAAMI,cA5B7B,CAAAP,IAAA,cAAAC,MAAA,SA+BcO,GACV,IAAMP,EAAQO,EAASC,OACfjG,EAAa2E,KAAKuB,MAAlBlG,SAER,GAAqB,IAAjByF,EAAMU,OAAV,CAKA,IAAMC,EAAY,CAChBpG,WACAE,QAASuF,GAGLY,EAAyB,MAAbZ,EAAM,GACxBW,EAAUnG,KAAOoG,EAAY1B,KAAK2B,kBAAoBb,EACtDd,KAAKuB,MAAMrC,aAAauC,QAXtBzB,KAAKuB,MAAMpC,eAAe9D,KApChC,CAAAwF,IAAA,kBAAAC,MAAA,WAmDI,MAAO,4BAnDX,CAAAD,IAAA,kBAAAC,MAAA,SAsDkBc,GAAO,IACbf,EAAQe,EAARf,IAEI,WAARA,EACFb,KAAKuB,MAAMM,WACM,UAARhB,GACTb,KAAK8B,YAAYF,EAAMjE,OAAOmD,OAC9Bd,KAAKuB,MAAMQ,YAEXH,EAAMI,oBA/DZ,CAAAnB,IAAA,eAAAC,MAAA,SAmEec,GACX5B,KAAK8B,YAAYF,EAAMjE,OAAOmD,OAC9Bd,KAAKuB,MAAMQ,aArEf,CAAAlB,IAAA,SAAAC,MAAA,WAyEI,IAAMmB,EAAejC,KAAKuB,MAAMW,aAAe,KAAOlC,KAAKuB,MAAMhG,QAEjE,OACEwC,EAAAC,EAAAC,cAAC0B,EAAD,CACEwC,IAAKnC,KAAKI,SACVhC,GAAE,KAAA5B,OAAOwD,KAAKuB,MAAMlG,UACpB4G,aAAcA,EACdG,UAAWpC,KAAKO,gBAChB8B,OAAQrC,KAAKU,mBAjFrBd,EAAA,CAA+BS,IAAMiC,eA4FrC,IAAMC,EAAqB,CAAErD,eAAcC,kBAE5BqD,cAPf,SAAyBvH,EAAOwH,GAC9B,IAAM3F,EAAO7B,EAAMc,MAAM0G,EAASpH,UAElC,MAAO,CAAEE,QADOuB,EAAOA,EAAKvB,QAAU,KAKAgH,EAAzBC,CAA6C5C,GC5GtD8C,EAAIjF,OAAAC,EAAA,EAAAD,CAAA,OAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,UAAAC,OAAA,oJAcG8E,EAAb,SAAA9C,GAaE,SAAA8C,IAAc,IAAA7C,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAA2C,IACZ7C,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAAkF,GAAAxC,KAAAH,QAIF4C,QAAUvC,IAAMC,YAHdR,EAAKS,gBAAkBT,EAAKS,gBAAgBC,KAArB/C,OAAAgD,EAAA,EAAAhD,CAAAqC,IAFXA,EAbhB,OAAArC,OAAAkD,EAAA,EAAAlD,CAAAkF,EAAA9C,GAAApC,OAAAmD,EAAA,EAAAnD,CAAAkF,EAAA,EAAA9B,IAAA,oBAAAC,MAAA,WAqBId,KAAK6C,iBArBT,CAAAhC,IAAA,eAAAC,MAAA,WAyBQd,KAAKuB,MAAMuB,WAAa9C,KAAK4C,QAAQ3B,QAAQC,UAzBrD,CAAAL,IAAA,kBAAAC,MAAA,SAAA5F,GA4B2B,IAAP2F,EAAO3F,EAAP2F,IAChBb,KAAKuB,MAAMjE,cAAc0C,KAAKuB,MAAMlG,UAEhC,CAAC,SAAU,aAAa0H,SAASlC,GAC/Bb,KAAKuB,MAAMjG,KAAKkG,OAAS,GAC3BxB,KAAKuB,MAAMpC,eAAea,KAAKuB,MAAMlG,UAIf,IAAfwF,EAAIW,QACbxB,KAAKuB,MAAMyB,sBAtCjB,CAAAnC,IAAA,SAAAC,MAAA,WA2CI,OACE/C,EAAAC,EAAAC,cAACyE,EAAD,CACEP,IAAKnC,KAAK4C,QACVxE,GAAE,KAAA5B,OAAOwD,KAAKuB,MAAMlG,UACpB4H,SAAS,IACTb,UAAWpC,KAAKO,gBAChB2C,cAAelD,KAAKuB,MAAM2B,eAEzBlD,KAAKuB,MAAMjG,UAnDpBqH,EAAA,CAA8BtC,IAAMiC,eA+DpC,IAAMC,EAAqB,CAAEpD,iBAAgB7B,iBAE9BkF,cARf,SAAyBvH,EAAOwH,GAC9B,IAAM3F,EAAO7B,EAAMc,MAAM0G,EAASpH,UAElC,MAAO,CAAEC,KADIwB,EAAOA,EAAKxB,KAAO,KAMMiH,EAAzBC,CAA6CG,GC9EtDQ,EAAO1F,OAAAC,EAAA,EAAAD,CAAA,OAAAE,OAAA,YAAAF,CAAA,CAAAG,KAAA,UAAAC,OAAA,sHAqFEuF,cAxEb,SAAAA,IAAc,IAAAtD,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAAoD,IACZtD,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAA2F,GAAAjD,KAAAH,QAOF/E,MAAQ,CACNoI,aAAcnF,EAAeoF,cATjBxD,EAYdyD,eAAiBC,YAAUtF,GACxBuF,aAAa,SAAAJ,GAAY,OAAIvD,EAAK4D,SAAS,CAAEL,mBAX9CvD,EAAK6D,qBAAuB7D,EAAK6D,qBAAqBnD,KAA1B/C,OAAAgD,EAAA,EAAAhD,CAAAqC,IAC5BA,EAAK8D,yBAA2B9D,EAAK8D,yBAAyBpD,KAA9B/C,OAAAgD,EAAA,EAAAhD,CAAAqC,IAChCA,EAAK+D,iBAAmB/D,EAAK+D,iBAAiBrD,KAAtB/C,OAAAgD,EAAA,EAAAhD,CAAAqC,IACxBA,EAAKgE,iBAAmBhE,EAAKgE,iBAAiBtD,KAAtB/C,OAAAgD,EAAA,EAAAhD,CAAAqC,IALZA,mFAgBZE,KAAKuD,eAAeQ,uDAIpB/D,KAAKuD,eAAeS,sDAIpBhE,KAAKuD,eAAeU,KAAK,sEAIzBjE,KAAKuD,eAAeU,KAAK,+DAIzBjE,KAAKuD,eAAeU,KAAK,6DAIzBjE,KAAKuD,eAAeU,KAAK,+CAGd,IACHZ,EAAiBrD,KAAK/E,MAAtBoI,aAER,OAAIA,EAAaa,QAAQ,YAErBnG,EAAAC,EAAAC,cAACkG,EAAD,CACEjC,aAAcmB,EAAaa,QAAQ,oBACnC7I,SAAU2E,KAAKuB,MAAMlG,SACrBwG,SAAU7B,KAAK6D,iBACf9B,SAAU/B,KAAK8D,mBAKjB/F,EAAAC,EAAAC,cAACmG,EAAD,CACE/I,SAAU2E,KAAKuB,MAAMlG,SACrB6H,cAAelD,KAAK2D,qBACpBX,kBAAmBhD,KAAK4D,yBACxBd,UAAWO,EAAaa,QAAQ,qDAOtC,OACEnG,EAAAC,EAAAC,cAACkF,EAAD,KACGnD,KAAKqE,qBAvEShE,IAAMiC,+BClBvBgC,EAAkB,IAAIC,YAAY,GAuBjC,SAASC,EAAeC,GAM7B,IALA,IACIC,EAAQ,GACRC,EAAY,CAAC,IACbC,EAAaH,EAEVG,EAAa,GAAG,CACrB,IAAMC,EAAW,GAEjBC,EACA,QAAAC,EAAA,EAAAC,EAAoBL,EAApBI,EAAAC,EAAAxD,OAAAuD,IAA+B,CAA1B,IAAIE,EAAOD,EAAAD,GAAeG,GAAA,EAAAC,GAAA,EAAAC,OAAA9F,EAAA,IAC7B,QAAA+F,EAAAC,EAVa,6BAUbC,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA6B,KAApBS,EAAoBN,EAAAvE,MAC3B,GAAmB,IAAf8D,EAAqB,MAAME,EAC/BD,EAASe,KAAT,GAAApJ,OAAiByI,GAAjBzI,OAA2BmJ,IAC3Bf,GAAc,GAJa,MAAAiB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,IAQ/BT,EAAYE,EACZH,EAAK,GAAAlI,OAAAiB,OAAAsI,EAAA,EAAAtI,CAAOiH,GAAUG,GAGxB,OAAOH,EA6CF,SAASsB,EAAc3K,GAAU,IAAA4K,EACtB5K,EAAS6K,MAAM,KADOC,EAAA1I,OAAA2I,EAAA,EAAA3I,CAAAwI,EAAA,GAC9BI,GAD8BF,EAAA,GAAAA,EAAA,IAC3BG,EAD2BH,EAAA,GAKtC,MAAO,CAlCF,SAA2BI,GAAO,IAAAC,EACtBD,EAAML,MAAM,KADUO,EAAAhJ,OAAA2I,EAAA,EAAA3I,CAAA+I,EAAA,GAChCE,EADgCD,EAAA,GAQvC,OARuCA,EAAA,GAEvBC,EAAIR,MAAM,IAEFS,OAAO,SAACC,EAAMjB,GAAP,OACtB,GAAPiB,EAAYjB,EAAOkB,WAAW,GAAKvC,EAAkB,GACpD,GAEc,EAuBLwC,CAAkBT,IACjBC,EAAI,eCxFnB,SAASS,EAAT7L,GAAuE,IAA1CJ,EAA0CI,EAA1CJ,KAAMC,EAAoCG,EAApCH,QAASiM,EAA2B9L,EAA3B8L,SAAUC,EAAiB/L,EAAjB+L,SACpD,OADqE/L,EAAP2F,KAE5D,IAAK,UACHmG,EAAWE,KAAKC,IAAI,EAAGH,EAAW,GAClC,MACF,IAAK,aACHC,EAAWC,KAAKE,IAAIrM,EAAU,EAAGkM,EAAW,GAC5C,MACF,IAAK,YACL,IAAK,QACHD,EAAWE,KAAKE,IAAItM,EAAO,EAAGkM,EAAW,GACzC,MACF,IAAK,YACHC,EAAWC,KAAKC,IAAI,EAAGF,EAAW,GAClC,MACF,QACE,OAAO,KAGX,IAAMI,EDgDD,SAAwBC,GAC7B,IAAMf,EAAQ,GACRgB,EAAYjD,EACdkD,EAAOF,EAAM,EAEjB,EAAG,CAED,IACMG,EAAYF,GAFlBC,GAAQ,GACsB,GAExB7B,EAAS+B,OAAOC,cAAcF,GACpClB,EAAMX,KAAKD,GAEX6B,EAAON,KAAKU,MAAMJ,EAAO,UAClBA,EAAO,GAEhB,OAAOjB,EAAMsB,UAAUC,KAAK,IC/DXC,CAAed,GAC1Be,EAAW,IAAMhB,EAAW,GAElC,WAAAxK,OAAY6K,EAAZ,KAAA7K,OAAwBwL,GAgB1B,IAAM/M,EAAQ,CACZmD,GAAI,cACJC,QAAS,OACT4J,QAAS,CACPlN,QAAS,KACTD,KAAM,KACN+F,IAAK,KACLoG,SAAU,KACVD,SAAU,KACVkB,YAAa,KACbC,YAAY,GAEd7J,OAAQ,CACN8J,KAAM,CACJ1J,GAAI,CACF2J,WAAc,CACZC,QAAS,CAAC,gBAAiB,sBAC3B3K,OAAQ,iBAId4K,YAAa,CACXC,OAAQ,CACNC,IApCR,SAAyBC,GACvB,OAAKA,EAAIR,YAEF,IAAI3I,QAAQ,SAAAC,GACjBmJ,WAAW,WACT,IAAMvK,EAAE,IAAA5B,OAAOkM,EAAIR,aACbpL,EAAO8L,SAASC,cAAczK,GAChCtB,GAAQA,EAAKoE,QACjB1B,GAAQ,IACP,KAR0BD,QAAQC,SAAQ,IAoCzCsJ,OAAQ,CACNR,QAASS,YAAO,CAAEZ,WAAY,SAACO,EAAK9G,GAAN,OAAgBA,EAAMoH,QACpDrL,OAAQ,YAOZ2K,EAAU,CACdA,QAAS,CACPW,cAAeF,YAAO,SAACL,EAADjN,GAA4B,IAApBoF,EAAoBpF,EAApBoF,IAAoBqI,EACnBlD,EADmBvK,EAAfJ,UAAe8N,EAAA1L,OAAA2I,EAAA,EAAA3I,CAAAyL,EAAA,GAEhD,MAAO,CAAEjC,SAFuCkC,EAAA,GAE7BnC,SAF6BmC,EAAA,GAEnBtI,SAE/BuI,mBAAoBL,YAAO,CACzBb,YAAa,SAACQ,GACZ,OAAO3B,EAAkB2B,QAuBlBW,MAjBf,SAA+BvO,EAAMC,GACnC,IAAMuO,EAAU7L,OAAA8L,EAAA,EAAA9L,CAAA,GACXxC,EAAMgN,QADK,CAEdlN,UACAD,SAGF,OAAOqD,YAAQlD,EAAOqN,EAASgB,ICtF3BE,GAAS/L,OAAAC,EAAA,EAAAD,CAAA,SAAAE,OAAA,aAAAF,CAAA,wBACW,SAAA8D,GAAK,OAAIA,EAAM3E,MAAMC,OAAOC,KAAKC,QAD5C,0BAEY,SAAAwE,GAAK,OAAIA,EAAM3E,MAAMC,OAAOC,KAAKC,QAF7C,2BAGa,SAAAwE,GAAK,OAAIA,EAAM3E,MAAMC,OAAOC,KAAKC,QAH9C,4BAIc,SAAAwE,GAAK,OAAIA,EAAM3E,MAAMC,OAAOC,KAAKC,QAJ/C,KAOT0M,GAAEhM,OAAAC,EAAA,EAAAD,CAAA,MAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,UAAAC,OAAA,6BAKK6L,GAAb,SAAA7J,GAOE,SAAA6J,EAAYnI,GAAO,IAAAzB,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAA0J,IACjB5J,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAAiM,GAAAvJ,KAAAH,KAAMuB,KAMRoI,mBAAqBN,EAAsBvJ,EAAKyB,MAAMzG,KAAMgF,EAAKyB,MAAMxG,SAPpD+E,EAQnB8J,aAAepG,YAAU1D,EAAK6J,oBAN5B7J,EAAK+J,mBAAqB/J,EAAK+J,mBAAmBrJ,KAAxB/C,OAAAgD,EAAA,EAAAhD,CAAAqC,IAC1BA,EAAKgK,qBAAuBhK,EAAKgK,qBAAqBtJ,KAA1B/C,OAAAgD,EAAA,EAAAhD,CAAAqC,IAC5BA,EAAKiK,YAAcvF,EAAejD,EAAMxG,SAJvB+E,EAPrB,OAAArC,OAAAkD,EAAA,EAAAlD,CAAAiM,EAAA7J,GAAApC,OAAAmD,EAAA,EAAAnD,CAAAiM,EAAA,EAAA7I,IAAA,oBAAAC,MAAA,WAkBId,KAAK4J,aAAa7F,UAlBtB,CAAAlD,IAAA,uBAAAC,MAAA,WAsBId,KAAK4J,aAAa5F,SAtBtB,CAAAnD,IAAA,qBAAAC,MAAA,SAyBqBc,GACjBA,EAAMI,oBA1BV,CAAAnB,IAAA,uBAAAC,MAAA,SA6BuBc,GACnBA,EAAMI,kBACNhC,KAAKgK,UAAUpI,EAAMf,IAAKe,EAAMjE,OAAOS,MA/B3C,CAAAyC,IAAA,YAAAC,MAAA,SAkCYD,EAAKxF,GACb2E,KAAK4J,aAAa3F,KAAK,CAAEvE,KAAM,aAAcmB,MAAKxF,eAnCtD,CAAAwF,IAAA,kBAAAC,MAAA,SAsCkBmJ,GAAW,IAAAC,EAAAlK,KACzB,OAAO,IAAImK,MAAMnK,KAAKuB,MAAMxG,SAASqP,KAAK,GAAGC,IAAI,SAACC,EAAGC,GACnD,IAAMlP,EAAQ,GAAAmB,OAAM0N,EAAKH,YAAYQ,GAAvB,KAAA/N,OAA6ByN,GAE3C,OACElM,EAAAC,EAAAC,cAACwL,GAAD,CACE5I,IAAKxF,GAEL0C,EAAAC,EAAAC,cAACuM,EAAD,CACEC,SAAUP,EAAK3I,MAAM1G,aAAeQ,EACpCA,SAAUA,SAhDtB,CAAAwF,IAAA,aAAAC,MAAA,WAuDe,IAAA4J,EAAA1K,KACX,OAAO,IAAImK,MAAMnK,KAAKuB,MAAMzG,MAAMsP,KAAK,GAAGC,IAAI,SAACC,EAAGC,GAChD,OACExM,EAAAC,EAAAC,cAAA,MAAI4C,IAAK0J,GACNG,EAAKC,gBAAgBJ,EAAI,QA3DpC,CAAA1J,IAAA,SAAAC,MAAA,WAkEI,OACE/C,EAAAC,EAAAC,cAACuL,GAAD,CACEoB,QAAS5K,KAAK6J,mBACdzH,UAAWpC,KAAK8J,sBAEhB/L,EAAAC,EAAAC,cAAA,aACG+B,KAAK6K,mBAxEhBnB,EAAA,CAA2BrJ,IAAMiC,eAoFlBE,eALS,SAACvH,GAAU,IAAA6P,EACK7P,EAAMY,OAC5C,MAAO,CAAEhB,WAFwBiQ,EACzBjQ,WACaC,KAFYgQ,EACbhQ,KACOC,QAFM+P,EACP/P,UAIbyH,CAAyBkH,ICjGlCqB,GAAStN,OAAAC,EAAA,EAAAD,CAAA,OAAAE,OAAA,YAAAF,CAAA,CAAAG,KAAA,SAAAC,OAAA,2FAOTmN,GAAIvN,OAAAC,EAAA,EAAAD,CAAA,QAAAE,OAAA,YAAAF,CAAA,CAAAG,KAAA,SAAAC,OAAA,oBAyBV,IAAM0E,GAAqB,CAAEjF,iBAEdkF,eAAQ,KAAMD,GAAdC,CAvBf,SAAAtH,GAAgC,IAAjBoC,EAAiBpC,EAAjBoC,cAKb,OACES,EAAAC,EAAAC,cAAC8M,GAAD,CACEH,QANkB,WACpBtN,EAAc,QAOZS,EAAAC,EAAAC,cAAC+M,GAAD,KACEjN,EAAAC,EAAAC,cAACgN,EAAD,MACAlN,EAAAC,EAAAC,cAACiN,GAAD,UCnBFC,GAAYzP,IAgBH8B,OAbf,WACE,OACEO,EAAAC,EAAAC,cAACmN,EAAA,EAAD,CAAUC,MAAOF,IACfpN,EAAAC,EAAAC,cAACqN,EAAA,EAAD,KACEvN,EAAAC,EAAAC,cAACsN,EAAA,EAAD,CAAe3O,MAAOA,GACpBmB,EAAAC,EAAAC,cAACuN,EAAA,EAAD,CAAQ3N,OAAQT,IAChBW,EAAAC,EAAAC,cAACwN,GAAD,UCVUC,QACW,cAA7BC,OAAOtQ,SAASuQ,UAEe,UAA7BD,OAAOtQ,SAASuQ,UAEhBD,OAAOtQ,SAASuQ,SAASC,MACvB,2DCbNC,IAASC,OAAOhO,EAAAC,EAAAC,cAAC+N,GAAD,MAAUpD,SAASqD,eAAe,SD4H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a385bee1.chunk.js","sourcesContent":["import { createReducer } from 'redux-starter-kit'\n\nexport const INITIAL_STATE = {\n  activeCell: null,\n  rows: 5,\n  columns: 5,\n}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_ACTIVE_CELL': (state, { payload }) => {\n    state.activeCell = payload\n  },\n})\n","import { createReducer } from 'redux-starter-kit'\n\n\nconst INITIAL_STATE = {}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_CELL_VALUE': (state, { payload }) => {\n    const { location, text, formula } = payload\n    state[location] = { text, formula }\n  },\n\n  'DELETE_CELL_VALUE': (state, { payload }) => {\n    delete state[payload]\n  }\n})\n","import { configureStore } from 'redux-starter-kit'\n\nimport globalReducer from './globalReducer'\nimport tableReducer from './tableReducer'\n\n\nconst appStoreFn = () => (\n  configureStore({\n    reducer: {\n      global: globalReducer,\n      table: tableReducer,\n    }\n  })\n)\n\n\nexport default appStoreFn\n","const colors = {\n  text: '#3D3D3D',\n  cell: {\n    border: 'lightgray'\n  },\n  primary: {\n    strong: '#E10D75'\n  },\n  field: {\n    background: '#F0F0F0',\n  },\n}\n\nconst breaks = {\n  xs: 0,\n  sm: 420,\n  md: 900,\n  lg: 1200,\n}\n\nconst breakBump = {\n  xs: 'sm',\n  sm: 'md',\n  md: 'lg',\n}\n\nconst queries = {\n  xs: `@media (max-width: ${breaks.sm - 1}px)`,\n  sm: `@media (min-width: ${breaks.sm}px) and (max-width: ${breaks.md - 1}px)`,\n  md: `@media (min-width: ${breaks.md}px) and (max-width: ${breaks.lg - 1}px)`,\n  lg: `@media (min-width: ${breaks.lg}px)`,\n  from: (breakPoint) => (`@media (min-width: ${breaks[breakPoint]}px)`),\n  upTo: (breakPoint) => (`@media (max-width: ${breaks[ breakBump[breakPoint] ] - 1}px)`),\n}\n\nconst theme = {\n  colors,\n  breaks,\n  queries,\n}\n\nexport default theme\n","/* @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nimport theme from './theme'\n\n\nconst globalStyles = css`\n  body {\n    color: ${theme.colors.text};\n    line-height: 1.3em;\n  }\n\n  table, th, td {\n    border: 0;\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n\n  td {\n    padding: 0;\n    line-height: 1.2em;\n  }\n\n  p, h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n`\n\nexport default globalStyles\n","import { createAction } from 'redux-starter-kit'\n\n\nexport const setActiveCell = createAction('SET_ACTIVE_CELL')\n","import React from 'react'\nimport styled from '@emotion/styled'\n\n\nconst Root = styled.header`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0 30px;\n`\n\nfunction Header() {\n  return (\n    <Root>\n      <h3>Spreadsheet App</h3>\n    </Root>\n  )\n}\n\nexport default Header\n","import { Machine } from 'xstate'\n\n\nconst displayMachine = Machine({\n  id: 'cell',\n  initial: 'static',\n  states: {\n    static: {\n      initial: 'notFocused',\n      states: {\n        focused: {},\n        notFocused: {}\n      },\n      on: {\n        EDITABLE_MODIFY: {\n          target: 'editable.modify'\n        },\n        EDITABLE_REPLACE: {\n          target: 'editable.replace'\n        },\n      },\n    },\n    editable: {\n      states: {\n        modify: {},\n        replace: {},\n      },\n      on: {\n        STATIC_FOCUSED: {\n          target: 'static.focused'\n        },\n        STATIC: {\n          target: 'static'\n        },\n      },\n    },\n  }\n})\n\nexport default displayMachine\n","import { createAction } from 'redux-starter-kit'\n\n\nexport const setCellValue = createAction('SET_CELL_VALUE')\n\nexport function clearCellValue(location) {\n  return (dispatch, getState) => {\n    const value = getState().table[location]\n\n    if (value === undefined) { return Promise.resolve() }\n\n    let action = {\n      type: 'DELETE_CELL_VALUE',\n      payload: location,\n    }\n\n    return Promise.resolve(dispatch(action))\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect }  from 'react-redux'\n\nimport { setCellValue, clearCellValue } from '~/actions/tableActions'\n\n\nconst Input = styled.input`\n  display: flex;\n  align-items: center;\n  outline: none;\n  border: 2px solid transparent;\n  width: 100%;\n  height: 100%;\n  padding: 0 2px;\n  line-height: 1em;\n\n  :focus {\n    border: 2px solid salmon;\n  }\n`\n\nexport class InputData extends React.PureComponent {\n  static propTypes = {\n    // props\n    replaceValue: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired,\n    onEscape: PropTypes.func.isRequired,\n    onCommit: PropTypes.func.isRequired,\n    // redux\n    clearCellValue: PropTypes.func.isRequired,\n    formula: PropTypes.string,\n    setCellValue: PropTypes.func.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n  }\n\n  refInput = React.createRef()\n\n  componentDidMount() {\n    this.focusInputTag()\n  }\n\n  focusInputTag() {\n    const input = this.refInput.current\n    input.focus()\n    input.scrollLeft = input.scrollWidth\n  }\n\n  setNewValue(rawValue) {\n    const value = rawValue.trim()\n    const { location } = this.props\n\n    if (value.length === 0) {\n      this.props.clearCellValue(location)\n      return\n    }\n\n    const cellValue = {\n      location,\n      formula: value\n    }\n\n    const isFormula = value[0] === '='\n    cellValue.text = isFormula ? this.evaluateFormula() : value\n    this.props.setCellValue(cellValue)\n  }\n\n  evaluateFormula() {\n    return 'pending evaluateFormula'\n  }\n\n  handleOnKeyDown(event) {\n    const { key } = event\n\n    if (key === 'Escape') {\n      this.props.onEscape()\n    } else if (key === 'Enter') {\n      this.setNewValue(event.target.value)\n      this.props.onCommit()\n    } else {\n      event.stopPropagation()\n    }\n  }\n\n  handleOnBlur(event) {\n    this.setNewValue(event.target.value)\n    this.props.onCommit()\n  }\n\n  render () {\n    const defaultValue = this.props.replaceValue ? null : this.props.formula\n\n    return (\n      <Input\n        ref={this.refInput}\n        id={`f-${this.props.location}`}\n        defaultValue={defaultValue}\n        onKeyDown={this.handleOnKeyDown}\n        onBlur={this.handleOnBlur}\n      />\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const formula = cell ? cell.formula : ''\n  return { formula }\n}\nconst mapDispatchToProps = { setCellValue, clearCellValue }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputData)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\n\nimport { clearCellValue } from '~/actions/tableActions'\nimport { setActiveCell } from '~/actions/globalActions'\n\n\nconst Text = styled.div`\n  display: flex;\n  align-items: center;\n  outline: none;\n  border: 2px solid transparent;\n  width: 100%;\n  height: 100%;\n  padding: 0 2px;\n\n  :focus {\n    border: 2px solid salmon;\n  }\n`\n\nexport class TextData extends React.PureComponent {\n  static propTypes = {\n    // props\n    isFocused: PropTypes.bool,\n    location: PropTypes.string.isRequired,\n    onDoubleClick: PropTypes.func.isRequired,\n    onKeyDownEditable: PropTypes.func.isRequired,\n    // redux\n    clearCellValue: PropTypes.func.isRequired,\n    setActiveCell: PropTypes.func.isRequired,\n    text: PropTypes.string.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n  }\n\n  refText = React.createRef()\n\n  componentDidMount() {\n    this.focusTextTag()\n  }\n\n  focusTextTag() {\n    if (this.props.isFocused) { this.refText.current.focus() }\n  }\n\n  handleOnKeyDown({ key }) {\n    this.props.setActiveCell(this.props.location)\n\n    if (['Delete', 'Backspace'].includes(key)) {\n      if (this.props.text.length > 0) {\n        this.props.clearCellValue(this.props.location)\n      }\n      // key pressed is a printable symbol, ex: 'a', '1', ','\n      // can be further refined, but for now it's fine\n    } else if (key.length === 1) {\n      this.props.onKeyDownEditable()\n    }\n  }\n\n  render() {\n    return (\n      <Text\n        ref={this.refText}\n        id={`t-${this.props.location}`}\n        tabIndex='0'\n        onKeyDown={this.handleOnKeyDown}\n        onDoubleClick={this.props.onDoubleClick}\n      >\n        {this.props.text}\n      </Text>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const text = cell ? cell.text : ''\n  return { text }\n}\n\nconst mapDispatchToProps = { clearCellValue, setActiveCell }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextData)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { interpret } from 'xstate'\n\nimport displayMachine from './displayMachine'\nimport InputData from './InputData'\nimport TextData from './TextData'\n\n\nconst Wrapper = styled.div`\n  cursor: cell;\n  width: 100%;\n  height: 100%;\n  font-size: 13px;\n  border-right: 1px solid #dfdfdf;\n  border-bottom: 1px solid #dfdfdf;\n`\nclass CellData extends React.PureComponent {\n  static propTypes = {\n    location: PropTypes.string.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.textTagOnDoubleClick = this.textTagOnDoubleClick.bind(this)\n    this.textTagOnKeyDownEditable = this.textTagOnKeyDownEditable.bind(this)\n    this.inputTagOnEscape = this.inputTagOnEscape.bind(this)\n    this.inputTagOnCommit = this.inputTagOnCommit.bind(this)\n  }\n\n  state = {\n    displayState: displayMachine.initialState,\n  }\n\n  displayService = interpret(displayMachine)\n    .onTransition(displayState => this.setState({ displayState }))\n\n  componentDidMount() {\n    this.displayService.start()\n  }\n  \n  componentWillUnmount() {\n    this.displayService.stop()\n  }\n  \n  textTagOnDoubleClick() {\n    this.displayService.send('EDITABLE_MODIFY')\n  }\n\n  textTagOnKeyDownEditable() {\n    this.displayService.send('EDITABLE_REPLACE')\n  }\n\n  inputTagOnEscape() {\n    this.displayService.send('STATIC_FOCUSED')\n  }\n\n  inputTagOnCommit() {\n    this.displayService.send('STATIC')\n  }\n\n  renderData() {\n    const { displayState } = this.state\n\n    if (displayState.matches('editable')) {\n      return (\n        <InputData\n          replaceValue={displayState.matches('editable.replace')}\n          location={this.props.location}\n          onEscape={this.inputTagOnEscape}\n          onCommit={this.inputTagOnCommit}\n        />\n      )\n    } else {\n      return (\n        <TextData\n          location={this.props.location}\n          onDoubleClick={this.textTagOnDoubleClick}\n          onKeyDownEditable={this.textTagOnKeyDownEditable}\n          isFocused={displayState.matches('static.focused')}\n        />\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        {this.renderData()}\n      </Wrapper>\n    )\n  }\n}\n\nexport default CellData\n","const BASE_CODE_POINT = 'A'.codePointAt(0)\n\nexport function buildUrl(baseUrl, query={}) {\n  const urlQuery = Object.entries(query).map(([key, val]) => `${key}=${val}`).join('&')\n  return [baseUrl.trim(), urlQuery].join('?')\n}\n\nexport function clamp(value, min, max) {\n  return Math.min( Math.max(value, min), max )\n}\n\nexport function getRangeArray(min, max, isString=false) {\n  const range = []\n\n  for (let num = min; num <= max; num++) {\n    range.push( isString ? num.toString() : num )\n  }\n\n  return range\n}\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms))\n\nexport function getColumnNames(cols) {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let names = []\n  let prevNames = ['']\n  let remainCols = cols\n\n  while (remainCols > 0) {\n    const newNames = []\n\n    outerLoop:\n    for (let colName of prevNames) {  \n      for (let letter of alphabet) {\n        if (remainCols === 0)  { break outerLoop }\n        newNames.push(`${colName}${letter}`)\n        remainCols -= 1\n      }\n    }\n\n    prevNames = newNames\n    names = [...names, ...newNames]\n  }\n\n  return names\n}\n\nexport function getCellNames(rows, cols) {\n  const names = []\n  let colNames = getColumnNames(cols)\n\n  for (let row=1; row <= rows; row++) {\n    for (let col of colNames) {\n      names.push(`${col}-${row}`)\n    }\n  }\n\n  return names\n}\n\nexport function getColumnPosition(label) {\n  const [col, _] = label.split('-')\n  const letters = col.split('')\n  // const basePoint = 'A'.codePointAt(0)\n  const oneBase = letters.reduce((prev, letter) => (\n    prev * 26 + letter.charCodeAt(0) - BASE_CODE_POINT + 1\n  ), 0)\n\n  return oneBase - 1\n}\n\nexport function getColumnLabel(num) {\n  const label = []\n  const basePoint = BASE_CODE_POINT\n  let curr = num + 1\n\n  do {\n    curr -= 1\n    const letterPosition = curr % 26\n    const codePoint = basePoint + letterPosition\n    const letter = String.fromCodePoint(codePoint)\n    label.push(letter)\n\n    curr = Math.floor(curr / 26)\n  } while (curr > 0)\n\n  return label.reverse().join('')\n}\n\nexport function parseLocation(location) {\n  let [_, c, r] = location.split('-')\n  const col = getColumnPosition(c)\n  const row = +r - 1\n\n  return [col, row]\n}\n\n","import { Machine, assign } from 'xstate'\n\nimport { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nfunction getTargetLocation({ rows, columns, rowIndex, colIndex, key }) {\n  switch (key) {\n    case 'ArrowUp':\n      rowIndex = Math.max(0, rowIndex - 1)\n      break\n    case 'ArrowRight':\n      colIndex = Math.min(columns - 1, colIndex + 1)\n      break\n    case 'ArrowDown':\n    case 'Enter':\n      rowIndex = Math.min(rows - 1, rowIndex + 1)\n      break\n    case 'ArrowLeft':\n      colIndex = Math.max(0, colIndex - 1)\n      break\n    default:\n      return null\n  }\n\n  const colLabel = getColumnLabel(colIndex)\n  const rowLabel = '' + (rowIndex + 1)\n\n  return `t-${colLabel}-${rowLabel}`\n}\n\nfunction focusTargetCell(ctx) {\n  if (!ctx.endLocation) { return Promise.resolve(false) }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const id = `#${ctx.endLocation}`\n      const cell = document.querySelector(id)\n      if (cell) { cell.focus() }\n      resolve(true)\n    }, 0)\n  })\n}\n\nconst state = {\n  id: 'keyboardNav',\n  initial: 'idle',\n  context: {\n    columns: null,\n    rows: null,\n    key: null,\n    colIndex: null,\n    rowIndex: null,\n    endLocation: null,\n    wasFocused: false,\n  },\n  states: {\n    idle: {\n      on: {\n        'MOVE_FOCUS': {\n          actions: ['setNewContext', 'calcTargetLocation'],\n          target: 'focusTarget',\n        }\n      }\n    },\n    focusTarget: {\n      invoke: {\n        src: focusTargetCell,\n        onDone: {\n          actions: assign({ wasFocused: (ctx, event) => event.data }),\n          target: 'idle',\n        },\n      },\n    },\n  },\n}\n\nconst actions = {\n  actions: {\n    setNewContext: assign((ctx, { key, location }) => {\n      const [colIndex, rowIndex] = parseLocation(location)\n      return { colIndex, rowIndex, key }\n    }),\n    calcTargetLocation: assign({\n      endLocation: (ctx) => {\n        return getTargetLocation(ctx)\n      }\n    }),\n  },\n}\n\nfunction getKeyboardNavMachine(rows, columns) {\n  const newContext = {\n    ...state.context,\n    columns,\n    rows,\n  }\n\n  return Machine(state, actions, newContext)\n}\n\nexport {\n  state,\n  actions,\n  getTargetLocation,\n  focusTargetCell,\n}\n\nexport default getKeyboardNavMachine\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport { interpret } from 'xstate'\n\nimport CellData from '../cell/CellData'\nimport { getColumnNames } from '~/library/utils'\nimport getKeyboardNavMachine from './keyboardNavMachine'\n\n\nconst RootTable = styled.table`\n  border-top: 2px solid ${props => props.theme.colors.cell.border};\n  border-left: 2px solid ${props => props.theme.colors.cell.border};\n  border-right: 1px solid ${props => props.theme.colors.cell.border};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.border};\n`\n\nconst Td = styled.td`\n  width: 130px;\n  height: 26px;\n`\n\nexport class Table extends React.PureComponent {\n  static propTypes = {\n    activeCell: PropTypes.string,\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleTableOnClick = this.handleTableOnClick.bind(this)\n    this.handleTableOnKeyDown = this.handleTableOnKeyDown.bind(this)\n    this.columnNames = getColumnNames(props.columns)\n  }\n\n  keyboardNavMachine = getKeyboardNavMachine(this.props.rows, this.props.columns)\n  focusService = interpret(this.keyboardNavMachine)\n\n  componentDidMount() {\n    this.focusService.start()\n  }\n\n  componentWillUnmount() {\n    this.focusService.stop()\n  }\n\n  handleTableOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleTableOnKeyDown(event) {\n    event.stopPropagation()\n    this.moveFocus(event.key, event.target.id)\n  }\n\n  moveFocus(key, location) {\n    this.focusService.send({ type: 'MOVE_FOCUS', key, location })\n  }\n\n  renderDataCells(rowNumber) {\n    return new Array(this.props.columns).fill(0).map((_, i) => {\n      const location = `${this.columnNames[i]}-${rowNumber}`\n\n      return (\n        <Td\n          key={location}\n        >\n          <CellData\n            isActive={this.props.activeCell === location}\n            location={location}\n          />\n        </Td>\n      )\n    })\n  }\n\n  renderRows() {\n    return new Array(this.props.rows).fill(0).map((_, i) => {\n      return (\n        <tr key={i}>\n          {this.renderDataCells(i + 1)}\n        </tr>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <RootTable\n        onClick={this.handleTableOnClick}\n        onKeyDown={this.handleTableOnKeyDown}\n      >\n        <tbody>\n          {this.renderRows()}\n        </tbody>\n      </RootTable>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { activeCell, rows, columns } = state.global\n  return { activeCell, rows, columns }\n}\n\nexport default connect(mapStateToProps)(Table)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\n\nimport { setActiveCell } from './actions/globalActions'\nimport Header from './components/header/Header'\nimport Table from './components/table/Table'\n\n\nconst Container = styled.div`\n  display: grid;\n  grid:\n    \"left-blank main right-blank\" 100vh\n    / auto minmax(auto, 1000px) auto;\n`\n\nconst Main = styled.main`\n  grid-area: main;\n`\n\nfunction App({ setActiveCell }) {\n  const handleOnClick = () => {\n    setActiveCell(null)\n  }\n\n  return (\n    <Container\n      onClick={handleOnClick}\n    >\n      <Main>\n        <Header />\n        <Table />\n      </Main>\n    </Container>\n  )\n}\n\nApp.propTypes = {\n  setActiveCell: PropTypes.func,\n}\n\nconst mapDispatchToProps = { setActiveCell }\n\nexport default connect(null, mapDispatchToProps)(App)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from 'emotion-theming'\nimport { Global } from '@emotion/core'\nimport 'sanitize.css'\n\nimport appStoreFn from './reducers/'\nimport globalStyles from './styles/globalStyles'\nimport theme from './styles/theme'\nimport App from './App'\n\n\nconst APP_STORE = appStoreFn()\n\n\nfunction Root() {\n  return (\n    <Provider store={APP_STORE}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Global styles={globalStyles} />\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default Root","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
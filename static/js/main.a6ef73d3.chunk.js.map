{"version":3,"sources":["reducers/globalReducer.js","reducers/tableReducer.js","reducers/index.js","styles/theme.js","styles/globalStyles.js","components/header/Header.jsx","components/cell/ColLabel.jsx","components/table/ColLabelRow.jsx","components/cell/RowLabel.jsx","formulas/ReduxConnect.js","actions/tableActions.js","formulas/Token.js","formulas/formulaFunctions.js","library/utils.js","formulas/TokenSanitizer.js","formulas/LexerRule.js","formulas/Lexer.js","formulas/ast.js","formulas/Parser.js","formulas/Interpreter.js","formulas/graph.js","actions/globalActions.js","components/cell/CellResult.jsx","components/table/DataRow.jsx","components/table/keyboardNavMachine.js","components/table/Table.jsx","components/cellInputter/InputContext.js","components/cellInputter/FuncDescription.jsx","library/InteractiveListItem.jsx","library/InteractiveList.jsx","components/cellInputter/FuncSelector.jsx","components/cellInputter/Suggestions.jsx","components/cellInputter/CellInputter.jsx","App.jsx","Root.jsx","serviceWorker.js","index.js"],"names":["createReducer","activeCell","cellInputter","rows","columns","SET_ACTIVE_CELL","state","_ref","payload","SET_CELL_INPUTTER","_ref2","UNSET_CELL_INPUTTER","SET_CELL_DATA","location","data","DELETE_CELL_DATA","appStore","configureStore","reducer","global","globalReducer","table","tableReducer","breaks","xs","sm","md","lg","breakBump","queries","concat","from","breakPoint","upTo","theme","colors","text","cell","border","borderDark","labelBkg","dropdown","normal","active","primary","strong","field","background","shadow","globalStyles","css","Root","Object","styled_base_browser_esm","target","name","styles","Header","react_default","a","createElement","InnerBorder","props","ColLabel","label","data-col","className","Row","ColLabelRow","colLabels","data-row","ColLabelRow_InnerBorder","Array","length","fill","map","_","i","cell_ColLabel","key","Wrapper","RowLabel","ReduxConnect","store","arguments","undefined","classCallCheck","this","globalState","getState","result","entered","dispatch","type","replaceCellData","clearCellData","keys","Token","whitespace","category","index","value","html","Fn","AVERAGE","fn","_Fn$SUM","_Fn$COUNT","Error","SUM","apply","COUNT","definition","example","summary","CONCAT","_len","args","_key","reduce","prev","curr","MAX","_len2","_key2","forEach","arg","TypeError","Math","max","MIN","_len3","_key3","min","POWER","_len4","_key4","base","exp","pow","SQRT","sqrt","_len5","_key5","AVG","objectSpread","POW","BASE_CODE_POINT","codePointAt","getColumnNames","cols","names","prevNames","remainCols","newNames","outerLoop","_i","_prevNames","colName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","letter","push","err","return","toConsumableArray","getColumnLabel","num","basePoint","codePoint","String","fromCodePoint","floor","reverse","join","parseLocation","_location$split","split","_location$split2","slicedToArray","col","row","charCodeAt","isNumber","numStr","isPeriodsAndDigits","Boolean","match","periodCount","TokenSanitizer","tokens","_this","token","t","NUMBER","number","CELL","FUNCTION","function","parseFloat","TEXT","getCellLabel","getFunction","slice","toUpperCase","fnName","fnNode","formulaFuncs","LexerRule","regex","groupIndex","lastIndex","input","exec","TOKENS","EOF","UNKNOWN","EQUALS","COMMA","COLON","LPAREN","RPAREN","PLUS","MINUS","MULT","DIV","GRAMMAR","Lexer","char","initChar","markers","nextToken","sanitizer","sanitize","isFormula","tokenTEXTorNUMBER","whitespaceLen","getWhitespaceLen","_GRAMMAR","rule","setIndex","test","consume","tokenUNKNOWN","chars","isEOF","isSeparator","isWhitespace","count","AST","_name","TextNode","textNode","possibleConstructorReturn","getPrototypeOf","call","NumberNode","numberNode","_this2","CellNode","_this3","UnaryOp","opNode","expr","_this4","evaluatedExpr","FuncOp","funcNode","argNodes","_this5","evaluatedArgs","BinaryOp","leftNode","rightNode","_this6","left","right","Parser","ast","hasCellRefs","peekType","equals","node","operator","term","includes","factor","unaryOp","enclosedExpr","func","lparen","rparen","Interpreter","error","cache","lexer","parser","vertex","graph","addVertex","getTokens","parse","recalculate","errorResponse","getVertex","isResolved","markVisited","_visit","nodeName","constructor","eval","otherLocation","isLocationValid","isVisited","dfsCellVisit","childNode","_parseLocation","_parseLocation2","colIndex","rowIndex","interpreter","hasVertex","visit","errorMsg","message","Vertex","Graph","adj","pending","visited","interpret","initLocation","setPendingNodes","dfs","updateStore","Set","add","isPending","has","size","delete","locationKeys","locations","_Object$entries","entries","_ref3","getCellResult","clearCell","testMissingLocation","delVertex","Promise","resolve","setActiveCell","createAction","displayCellInputter","closeCellInputter","Cell","ResultCell","_React$PureComponent","refCell","React","createRef","handleCellOnKeyDown","bind","assertThisInitialized","handleCellOnDoubleClick","handleCellOnClick","handleWrapperOnClick","inherits","createClass","willReplaceValue","cellDomRect","current","getBoundingClientRect","cellRect","JSON","stringify","style","whiteSpace","textOverflow","overflow","focus","event","stopPropagation","core_browser_esm","CellResult_Wrapper","onClick","ref","data-cell","data-location","getStyle","tabIndex","onKeyDown","onDoubleClick","PureComponent","mapDispatchToProps","connect","ownProps","DataRow","rowNumber","DataRow_Row","cell_RowLabel","CellResult","id","initial","context","endLocation","wasFocused","states","idle","on","MOVE_FOCUS","actions","focusTarget","invoke","src","ctx","setTimeout","document","querySelector","onDone","assign","setNewContext","calcTargetLocation","colLabel","rowLabel","getTargetLocation","getKeyboardNavMachine","newContext","Machine","Grid","Table","keyboardNavMachine","focusService","handleTableOnClick","handleTableOnKeyDown","start","stop","moveFocus","dataset","send","table_ColLabelRow","table_DataRow","renderColLabelRow","renderDataRows","data-table","renderRows","_state$global","InputContext","createContext","Pre","Subtitle","P","Hr","FuncDescription","currScope","_this$props","cursorPos","fnScopes","scope","startIndex","endIndex","end","getFnScope","inputRect","clientRect","getFnNode","FuncDescription_Root","bottom","FuncDescription_ref","contextType","Li","DropdownItem","item","isActive","Ul","InteractiveList","activeIndex","selectedIndex","prevProps","prevState","fireSelected","items","selectedFn","InteractiveListItem","li","top","ul","handleOnClick","renderListItems","propsTypes","PropTypes","isRequired","array","shape","object","baseStyle","BaseRoot","ActiveRoot","FuncSelector","listItems","itemIndex","keyEvent","isVisible","setState","setListItems","nextProps","nextState","updateContextData","updateListItems","keyActions","setIsFuncSelectorVisible","setItemIndex","updateInputValue","currInputValue","inputValue","newInputValue","setInputValue","filter","startsWith","sort","itemBase","itemActive","FuncSelector_Pre","FuncSelector_Subtitle","marginTop","boxShadow","width","_this$state","library_InteractiveList","selectItem","round","getListStyles","Component","withTheme","Suggestions","setFnScopes","stack","pop","b","componentName","token1","token2","_this$props2","getComponentToRender","cellInputter_FuncSelector","cellInputter_FuncDescription","defaultProps","Input","CellInputter","isFuncSelectorVisible","refInput","handleOnKeyDown","handleOnBlur","handleOnChange","tokenizeInputValue","focusInputTag","setFocus","setNewValue","scrollLeft","scrollWidth","el","elId","nextRowIndex","activeElement","setCellData","inputEl","Provider","CellInputter_Root","css_browser_esm","height","onChange","onBlur","cellInputter_Suggestions","selectionStart","_state$global$cellInp","Container","Main","cellInputter_CellInputter","data-dummy-focus-stop","header_Header","table_Table","es","react_router_dom","emotion_theming_browser_esm","src_App","window","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6ef73d3.chunk.js","sourcesContent":["import { createReducer } from 'redux-starter-kit'\n\nexport const INITIAL_STATE = {\n  activeCell: null,\n  cellInputter: null,\n  rows: 14,\n  columns: 6,\n}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_ACTIVE_CELL': (state, { payload }) => {\n    state.activeCell = payload\n  },\n  'SET_CELL_INPUTTER': (state, { payload }) => {\n    state.cellInputter = payload\n  },\n  'UNSET_CELL_INPUTTER': (state) => {\n    state.cellInputter = null\n  },\n})\n","import { createReducer } from 'redux-starter-kit'\n\n\nconst INITIAL_STATE = {}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_CELL_DATA': (state, { payload }) => {\n    const { location, data } = payload\n    state[location] = data\n  },\n\n  'DELETE_CELL_DATA': (state, { payload }) => {\n    delete state[payload]\n  }\n})\n","import { configureStore } from 'redux-starter-kit'\n\nimport globalReducer from './globalReducer'\nimport tableReducer from './tableReducer'\n\n\nconst appStoreGen = () => (\n  configureStore({\n    reducer: {\n      global: globalReducer,\n      table: tableReducer,\n    }\n  })\n)\n\nconst appStore = appStoreGen()\n\n\nexport default appStore\nexport { appStoreGen }\n","const colors = {\n  text: '#3D3D3D',\n  cell: {\n    border: '#dfdfdf',\n    borderDark: '#CCC',\n    labelBkg: '#F5F5F5'\n  },\n  dropdown: {\n    normal: '#fafafa',\n    active: '#ebebeb',\n  },\n  primary: {\n    strong: '#E10D75'\n  },\n  field: {\n    background: '#F0F0F0',\n  },\n  shadow: '#939393',\n}\n\nconst breaks = {\n  xs: 0,\n  sm: 420,\n  md: 900,\n  lg: 1200,\n}\n\nconst breakBump = {\n  xs: 'sm',\n  sm: 'md',\n  md: 'lg',\n}\n\nconst queries = {\n  xs: `@media (max-width: ${breaks.sm - 1}px)`,\n  sm: `@media (min-width: ${breaks.sm}px) and (max-width: ${breaks.md - 1}px)`,\n  md: `@media (min-width: ${breaks.md}px) and (max-width: ${breaks.lg - 1}px)`,\n  lg: `@media (min-width: ${breaks.lg}px)`,\n  from: (breakPoint) => (`@media (min-width: ${breaks[breakPoint]}px)`),\n  upTo: (breakPoint) => (`@media (max-width: ${breaks[ breakBump[breakPoint] ] - 1}px)`),\n}\n\nconst theme = {\n  colors,\n  breaks,\n  queries,\n}\n\nexport default theme\n","/* @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nimport theme from './theme'\n\n\nconst globalStyles = css`\n  body {\n    color: ${theme.colors.text};\n    line-height: 1.3em;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  table, th, td {\n    border: 0;\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n\n  td {\n    padding: 0;\n    line-height: 1.2em;\n  }\n\n  pre, p, h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n`\n\nexport default globalStyles\n","import React from 'react'\nimport styled from '@emotion/styled'\n\n\nconst Root = styled.header`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0 30px;\n`\n\nfunction Header() {\n  return (\n    <Root>\n      <h3>Spreadsheet App</h3>\n    </Root>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n  font-size: 12px;\n`\n\nfunction ColLabel({ label }) {\n  return (\n    <InnerBorder\n      data-col={label}\n      className='col-label-width col-label-height'\n    >\n      {label}\n    </InnerBorder>\n  )\n}\n\nColLabel.propTypes = {\n  label: PropTypes.string,\n}\n\nexport default ColLabel\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport ColLabel from '../cell/ColLabel'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction ColLabelRow({ colLabels }) {\n  const renderCornerCell = () => (\n    <InnerBorder\n      className='row-label-width col-label-height'\n    />\n  )\n\n  const renderLabelCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => (\n      <ColLabel\n        key={i}\n        label={colLabels[i]}\n      />\n    )\n  ))\n\n  return (\n    <Row\n      data-row='header'\n    >\n      {renderCornerCell()}\n      {renderLabelCells()}\n    </Row>\n  )\n}\n\nColLabelRow.propTypes = {\n  colLabels: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default ColLabelRow\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst Wrapper = styled.div`\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction RowLabel({ label }) {\n  return (\n    <Wrapper\n      data-row={label}\n      className='row-label-width row-label-height'\n    >\n      {label}\n    </Wrapper>\n  )\n}\n\nRowLabel.propTypes = {\n  label: PropTypes.number,\n}\n\nexport default RowLabel\n","import appStore from '~/reducers/'\nimport { clearCellData, replaceCellData } from '~/actions/tableActions'\n\n\nclass ReduxConnect {\n  constructor(store=appStore) {\n    const { global: globalState } = store.getState()\n    this.store = store\n    this.rows = globalState.rows\n    this.columns = globalState.columns\n  }\n\n  get table() {\n    return this.store.getState().table\n  }\n\n  get locations() {\n    return Object.keys(this.table)\n  }\n\n  getCellResult(location) {\n    const data = this.table[location]\n    return data && data.result\n  }\n\n  replaceCellData(location, entered, result) {\n    this.store.dispatch(replaceCellData(location, entered, result))\n  }\n\n  clearCell(location) {\n    this.store.dispatch(clearCellData(location))\n  }\n}\n\nexport default ReduxConnect\nexport { appStore }\n","import graph from '~/formulas/graph'\n\n\nexport function setCellData(location, entered) {\n  const result = graph.interpret(location, entered)\n\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function replaceCellData(location, entered, result) {\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function clearCellData(location) {\n  return (dispatch, getState) => {\n    const value = getState().table[location]\n\n    graph.delVertex(location)\n\n    if (value === undefined) {\n      return Promise.resolve()\n    }\n\n\n    return Promise.resolve(dispatch({\n      type: 'DELETE_CELL_DATA',\n      payload: location,\n    }))\n  }\n}\n","class Token {\n  constructor(type, text, whitespace, category, index) {\n    this.type = type\n    this.category = category\n    this.text = text\n    this.whitespace = whitespace\n    this.index = index\n    this.value = null\n    this.html = null\n  }\n}\n\nexport default Token\n","const Fn = {\n  AVERAGE: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      return Fn.SUM.fn(...args) / Fn.COUNT.fn(...args)\n    },\n    definition: 'AVERAGE(value1, value2, ...)',\n    example: 'AVERAGE(A1:B3, 3)',\n    summary: 'Returns the average from a series of numbers.',\n  },\n  CONCAT: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      return args.reduce((prev, curr) => (prev + curr), '')\n    },\n    definition: 'CONCAT(\"text1\", \"text2\", ...)',\n    example: 'CONCAT(\"one\", \"two\")',\n    summary: 'Returns a single concatenated string from a series of strings.',\n  },\n  COUNT: {\n    fn: (...args) => args.length,\n    definition: 'COUNT(element1, element2, ...)',\n    example: 'COUNT(A1:B3, 2, C4)',\n    summary: 'Returns the number of non-empty elements in a set.',\n  },\n  MAX: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      args.forEach(arg => {\n        if (typeof arg !== 'number') {\n          throw new TypeError(`${arg} is not a number`)\n        }\n      })\n  \n      return Math.max(...args)\n    },\n    definition: 'MAX(value1, value2, ...)',\n    example: 'MAX(A1:B3, 4, C3)',\n    summary: 'Returns the maximum value from a series of numbers',\n  },\n  MIN: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      args.forEach(arg => {\n        if (typeof arg !== 'number') {\n          throw new TypeError(`${arg} is not a number`)\n        }\n      })\n  \n      return Math.min(...args)\n    },\n    definition: 'MIN(value1, value2, ...)',\n    example: 'MIN(A1:B3, 4, C3)',\n    summary: 'Returns the minimum value from a series of numbers.',\n  },\n  POWER: {\n    fn: (...args) => {\n      if (args.length !== 2) {\n        throw new Error('Formula takes only two elements')\n      }\n    \n      const [base, exp] = args\n      return Math.pow(base, exp)\n    },\n    definition: 'POWER(base, exponent)',\n    example: 'POWER(A3,2)',\n    summary: 'Returns a number raised to an exponent.'\n  },\n  SQRT: {\n    fn: (...args) => {\n      if (args.length !== 1) {\n        throw new Error(`Formula takes only one element`)\n      }\n  \n      return Math.sqrt(args[0])\n    },\n    definition: 'SQRT(value)',\n    example: 'SQRT(9) or SQRT(A3)',\n    summary: 'Returns the square root of a number.'\n  },\n  SUM: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      return args.reduce((prev, curr) => prev + curr)\n    },\n    definition: 'SUM(value1, value2, ...)',\n    example: 'SUM(A1:B3, 3, C5)',\n    summary: 'Retuns the sum from a series of numbers.',\n  }\n}\n\n// aliases\nFn.AVG = {\n  ...Fn.AVERAGE,\n  definition: 'AVG(value1, value2, ...)',\n  example: 'AVG(A1:B3, 3)',\n}\n\nFn.POW = {\n  ...Fn.POWER,\n  definition: 'POW(base, exponent)',\n  example: 'POW(A3,2)',\n}\n\nexport default Fn\n","const BASE_CODE_POINT = 'A'.codePointAt(0)\n\nexport function buildUrl(baseUrl, query={}) {\n  const urlQuery = Object.entries(query).map(([key, val]) => `${key}=${val}`).join('&')\n  return [baseUrl.trim(), urlQuery].join('?')\n}\n\nexport function clamp(value, min, max) {\n  return Math.min( Math.max(value, min), max )\n}\n\nexport function getRangeArray(min, max, isString=false) {\n  const range = []\n\n  for (let num = min; num <= max; num++) {\n    range.push( isString ? num.toString() : num )\n  }\n\n  return range\n}\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms))\n\nexport function getColumnNames(cols) {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let names = []\n  let prevNames = ['']\n  let remainCols = cols\n\n  while (remainCols > 0) {\n    const newNames = []\n\n    outerLoop:\n    for (let colName of prevNames) {  \n      for (let letter of alphabet) {\n        if (remainCols === 0)  { break outerLoop }\n        newNames.push(`${colName}${letter}`)\n        remainCols -= 1\n      }\n    }\n\n    prevNames = newNames\n    names = [...names, ...newNames]\n  }\n\n  return names\n}\n\nexport function getCellNames(rows, cols) {\n  const names = []\n  let colNames = getColumnNames(cols)\n\n  for (let row=1; row <= rows; row++) {\n    for (let col of colNames) {\n      names.push(`${col}-${row}`)\n    }\n  }\n\n  return names\n}\n\nexport function getColumnPosition(colLabel) {\n  const letters = colLabel.split('')\n  const oneBase = letters.reduce((prev, letter) => (\n    prev * 26 + letter.charCodeAt(0) - BASE_CODE_POINT + 1\n  ), 0)\n\n  return oneBase - 1\n}\n\nexport function getColumnLabel(num) {\n  const label = []\n  const basePoint = BASE_CODE_POINT\n  let curr = num + 1\n\n  do {\n    curr -= 1\n    const letterPosition = curr % 26\n    const codePoint = basePoint + letterPosition\n    const letter = String.fromCodePoint(codePoint)\n    label.push(letter)\n\n    curr = Math.floor(curr / 26)\n  } while (curr > 0)\n\n  return label.reverse().join('')\n}\n\nexport function parseLocation(location) {\n  let [col, row] = location.split('-')\n  const colIndex = getColumnPosition(col)\n  const rowIndex = +row - 1\n\n  return [colIndex, rowIndex]\n}\n\nexport function isNumber(numStr) {\n  const isPeriodsAndDigits = Boolean(numStr.match(/^[.\\d]+$/))\n  const periodCount = (numStr.match(/\\./g) || []).length\n\n  if (!isPeriodsAndDigits) { return false }\n  if (periodCount > 1) { return false }\n  if (numStr.length === 1 && numStr[0] === '.') { return false }\n  return true\n}\n\n","import { TOKENS as t } from './Lexer'\nimport formulaFuncs from './formulaFunctions'\nimport { isNumber } from '~/library/utils'\n\n\nclass TokenSanitizer {\n  constructor(tokens) {\n    this.tokens = tokens\n  }\n\n  sanitize() {\n    return this.tokens.map(token => {\n      switch(token.type) {\n        case t.NUMBER:\n          return this.number(token)\n        case t.CELL:\n          return this.cell(token)\n        case t.FUNCTION:\n          return this.function(token)\n        default:\n          return token\n      }\n    })\n  }\n\n  number(token) {\n    if (!isNumber(token.text)) {\n      token.type = t.TEXT\n      return token\n    }\n\n    token.value = parseFloat(token.text)\n    return token\n  }\n\n  cell(token) {\n    token.value = this.getCellLabel(token)\n    return token\n  }\n\n  function(token) {\n    const fn = this.getFunction(token)\n\n    if (fn) {\n      token.value = fn\n    } else {\n      token.type = t.TEXT\n    }\n\n    return token\n  }\n\n  getCellLabel(token) {\n    const { text } = token\n    const { index } = text.match(/\\d+/)\n    const col = text.slice(0, index).toUpperCase()\n    const row = text.slice(index)\n    return `${col}-${row}`\n  }\n\n  getFunction(token) {\n    const fnName = token.text.toUpperCase()\n    const fnNode = formulaFuncs[fnName]\n    return fnNode && fnNode.fn\n  }\n}\n\nexport default TokenSanitizer\n","class LexerRule {\n  constructor(regex, groupIndex, token, category) {\n    this.regex = regex\n    this.groupIndex = groupIndex\n    this.token = token\n    this.category = category\n  }\n\n  setIndex(index) {\n    this.regex.lastIndex = index\n  }\n\n  test(input) {\n    return this.regex.exec(input)\n  }\n}\n\nexport default LexerRule\n","import Token from './Token'\nimport TokenSanitizer from './TokenSanitizer'\nimport LexerRule from './LexerRule'\nimport { isNumber } from '~/library/utils'\n\n\nconst TOKENS = {\n  // internal\n  EOF: 'EOF',\n  UNKNOWN: 'UNKNOWN',\n  // structure\n  EQUALS: 'EQUALS',\n  COMMA: 'COMMA',\n  COLON: 'COLON',\n  LPAREN: 'LPAREN',\n  RPAREN: 'RPAREN',\n  // operators\n  PLUS: 'PLUS',\n  MINUS: 'MINUS',\n  MULT: 'MULT',\n  DIV: 'DIV',\n  // entities\n  NUMBER: 'NUMBER',\n  CELL: 'CELL',\n  FUNCTION: 'FUNCTION',\n  TEXT: 'TEXT',\n}\n\nconst t = TOKENS\n\nconst GRAMMAR = [\n  // structure\n  new LexerRule(/=/g, 0, t.EQUALS, 'structure'),\n  new LexerRule(/,/g, 0, t.COMMA, 'structure'),\n  new LexerRule(/:/g, 0, t.COLON, 'structure'),\n  new LexerRule(/\\(/g, 0, t.LPAREN, 'structure'),\n  new LexerRule(/\\)/g, 0, t.RPAREN, 'structure'),\n  // operators\n  new LexerRule(/\\+/g, 0, t.PLUS, 'operator'),\n  new LexerRule(/\\-/g, 0, t.MINUS, 'operator'), // eslint-disable-line\n  new LexerRule(/\\*/g, 0, t.MULT, 'operator'),\n  new LexerRule(/\\//g, 0, t.DIV, 'operator'),\n  // multi-character\n  new LexerRule(/[\\d\\.]+/g, 0, t.NUMBER, 'entity'), // eslint-disable-line\n  new LexerRule(/[a-z]+[\\d]+/gi, 0, t.CELL, 'entity'),\n  new LexerRule(/([a-z]+)\\(/gi, 1, t.FUNCTION, 'entity'),\n]\n\n\nclass Lexer {\n  constructor(input) {\n    this.input = input\n    this.index = 0\n    this.char = this.initChar(input)\n    this.markers = []\n    this.tokens = []\n  }\n\n  getTokens() {\n    while (this.char !== t.EOF) {\n      const token = this.nextToken()\n      this.tokens.push(token)\n    }\n\n    const sanitizer = new TokenSanitizer(this.tokens)\n    this.tokens = sanitizer.sanitize()\n    return this.tokens\n  }\n\n  nextToken() {\n    if (this.char === t.EOF) {\n      return new Token(t.EOF, t.EOF, 0, 'eof', this.index)\n    }\n\n    if (!this.isFormula()) {\n      return this.tokenTEXTorNUMBER()\n    }\n\n    const whitespaceLen = this.getWhitespaceLen()\n    let token\n\n    for (let rule of GRAMMAR) {\n      rule.setIndex(this.index)\n      const match = rule.test(this.input)\n\n      if (match && match.index === this.index) {\n        const text = match[rule.groupIndex]\n        token = new Token(rule.token, text, whitespaceLen, rule.category, this.index)\n        this.index += text.length - 1\n        this.consume()\n        break\n      }\n    }\n\n    if (!token) {\n      token = this.tokenUNKNOWN(whitespaceLen)\n    }\n\n    return token\n  }\n\n  initChar(input) {\n    if (this.input.length === 0) {\n      this.input = '0'\n      this.index = -1\n    }\n\n    return input[this.index]\n  }\n\n  tokenUNKNOWN(whitespace) {\n    const chars = []\n\n    while (!(this.isEOF() || this.isSeparator() || this.isWhitespace())) {\n      chars.push(this.char)\n      this.consume()\n    }\n\n    const text = chars.join('')\n    return new Token(t.UNKNOWN, text, whitespace, 'unknown', this.index - text.length)\n  }\n\n  tokenTEXTorNUMBER() {\n    let token\n\n    if (isNumber(this.input)) {\n      token = new Token(t.NUMBER, this.input, 0, 'entity', this.index)\n    } else {\n      token = new Token(t.TEXT, this.input, 0, 'entity', this.index)\n    }\n\n    this.index = this.input.length - 1\n    this.consume()\n    return token\n  }\n\n  consume() {\n    this.index++\n\n    if (this.index < this.input.length) {\n      this.char = this.input[this.index]\n    } else {\n      this.char = t.EOF\n    }\n  }\n\n  isFormula() {\n    return this.input[0] === '='\n  }\n\n  isEOF() {\n    return this.char === t.EOF\n  }\n\n  isWhitespace() {\n    return !this.isEOF() && Boolean(this.char.match(/\\s/))\n  }\n\n  isSeparator() {\n    return Boolean(this.char.match(/[\\(\\)\\+\\-\\/\\*]/)) // eslint-disable-line\n  }\n\n  getWhitespaceLen() {\n    let count = 0\n\n    while (this.isWhitespace()) {\n      count++\n      this.consume()\n    }\n\n    return count\n  }\n}\n\nexport default Lexer\nexport { GRAMMAR, TOKENS, Lexer }\n","import { TOKENS as t } from './Lexer'\n\n\nclass AST {\n  constructor(name) {\n    this._name = name\n  }\n\n  eval() {\n    throw new Error('Implement method.')\n  }\n}\n\nclass TextNode extends AST {\n  constructor(textNode) {\n    super('TextNode')\n    this.textNode = textNode\n  }\n\n  eval() {\n    return this.textNode.text\n  }\n}\n\nclass NumberNode extends AST {\n  constructor(numberNode) {\n    super('NumberNode')\n    this.numberNode = numberNode\n  }\n\n  get value() {\n    return this.numberNode.value\n  }\n\n  eval() {\n    return this.value\n  }\n}\n\nclass CellNode extends AST {\n  constructor(token) {\n    super('CellNode')\n    this.cell = token\n  }\n\n  get location() {\n    return this.cell.value\n  }\n}\n\nclass UnaryOp extends AST {\n  constructor(opNode, expr) {\n    super('UnaryOp')\n    this.opNode = opNode\n    this.expr = expr\n  }\n\n  eval(evaluatedExpr) {\n    if (this.opNode.type === t.PLUS) {\n      return evaluatedExpr\n    } else if (this.opNode.type === t.MINUS) {\n      return -evaluatedExpr\n    }\n  }\n}\n\nclass FuncOp extends AST {\n  constructor(funcNode, argNodes) {\n    super('FuncOp')\n    this.funcNode = funcNode\n    this.argNodes = argNodes\n  }\n\n  eval(evaluatedArgs) {\n    const fn = this.funcNode.value\n    return fn(...evaluatedArgs)\n  }\n}\n\nclass BinaryOp extends AST {\n  constructor(leftNode, opNode, rightNode) {\n    super('BinaryOp')\n    this.leftNode = leftNode\n    this.opNode = opNode\n    this.rightNode = rightNode\n  }\n\n  eval(left, right) {\n    switch(this.opNode.type) {\n      case t.PLUS:\n        return left + right\n      case t.MINUS:\n        return left - right\n      case t.DIV:\n        if (right === 0) {\n          throw new Error(`Division by zero: ${left}/${right}`)\n        } else {\n          return left / right\n        }\n      case t.MULT:\n        return left * right\n      default:\n        throw new Error(`Unsupported operator \"${this.token.text}\"`)\n    }\n  }\n}\n\nexport {\n  TextNode,\n  NumberNode,\n  CellNode,\n  BinaryOp,\n  UnaryOp,\n  FuncOp,\n}\n","import { TOKENS as t } from './Lexer'\nimport { TextNode, NumberNode, CellNode, BinaryOp, UnaryOp, FuncOp } from './ast'\n\n\nclass Parser {\n  constructor(tokens) {\n    this.index = 0\n    this.tokens = tokens\n    this.curr = this.tokens[0]\n    this.ast = null\n    this.hasCellRefs = false\n  }\n\n  parse() {\n    switch (this.peekType()) {\n      case t.TEXT:\n        this.ast = this.text()\n        break\n      case t.NUMBER:\n        this.ast = this.number()\n        break\n      default:\n        this.equals()\n        this.ast = this.expr()\n        break\n    }\n\n    if (this.curr !== null) {\n      throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n    }\n\n    return this.ast\n  }\n\n  expr() {\n    // expr : term ( ( PLUS | MINUS ) term ) *\n    let node, operator, right\n\n    node = this.term()\n\n    while ( [t.PLUS, t.MINUS].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.term()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  term() {\n    // term : factor ( ( MULT | DIV ) factor ) *\n    let node, operator, right\n\n    node = this.factor()\n\n    while ( [t.MULT, t.DIV].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.factor()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  factor() {\n    // factor : ( PLUS | MINUS ) ( NUMBER | CELL )\n    //          | LPAREN expr RPAREN\n    //          | FUNCTION LPAREN list RPAREN\n    switch (this.peekType()) {\n      case t.PLUS:\n      case t.MINUS:\n        return this.unaryOp()\n      case t.NUMBER:\n        return this.number()\n      case t.CELL:\n        return this.cell()\n      case t.LPAREN:\n        return this.enclosedExpr()\n      case t.FUNCTION:\n        return this.func()\n      case t.RPAREN:\n        throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n      default:\n        throw new Error('Missing factor')\n    }\n  }\n\n  text() {\n    let node\n\n    if (this.peekType() !== t.TEXT) {\n      throw new Error('Missing string')\n    }\n\n    node = new TextNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  number() {\n    if (this.peekType() === t.NUMBER) {\n      const node = new NumberNode(this.curr)\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing number')\n    }\n  }\n\n  operator() {\n    if ([t.PLUS, t.MINUS, t.MULT, t.DIV].includes(this.peekType())) {\n      const node = this.curr\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing operator')\n    }\n  }\n\n  enclosedExpr() {\n    this.lparen()\n    const node = this.expr()\n    this.rparen()\n    return node\n  }\n\n  cell() {\n    if (this.peekType() !== t.CELL) {\n      throw new Error('Missing cell node')\n    }\n\n    const node = new CellNode(this.curr)\n    this.hasCellRefs = true\n    this.consume()\n    return node\n  }\n\n  func() {\n    if (this.peekType() !== t.FUNCTION) {\n      throw new Error('Missing function')\n    }\n\n    const func = this.curr\n    this.consume()\n    this.lparen()\n    const args = this.args()\n    this.rparen()\n    return new FuncOp(func, args)\n  }\n\n  args() {\n    const args = []\n    let term = this.term()\n\n    args.push(term)\n\n    while (this.peekType() === t.COMMA) {\n      this.consume()\n      term = this.term()\n      args.push(term)\n    }\n\n    return args\n  }\n\n  equals() {\n    if (this.peekType() !== t.EQUALS) {\n      throw new Error('Missing equals sign')\n    }\n\n    this.consume()\n  }\n\n  lparen() {\n    if (this.peekType() !== t.LPAREN) {\n      throw new Error('Missing left parenthesis')\n    }\n\n    this.consume()\n  }\n\n  rparen() {\n    if (this.peekType() !== t.RPAREN) {\n      throw new Error('Missing right parenthesis')\n    }\n\n    this.consume()\n  }\n\n  unaryOp() {\n    if (![t.PLUS, t.MINUS].includes(this.peekType())) {\n      throw new Error('Missing unary operator')\n    }\n\n    const curr = this.curr\n    this.consume()\n    const node = new UnaryOp(curr, this.factor())\n    return node\n  }\n\n  consume() {\n    if (this.index < this.tokens.length - 1) {\n      this.index++\n      this.curr = this.tokens[this.index]\n    } else {\n      this.curr = null\n    }\n  }\n\n  peekType() {\n    return this.curr && this.curr.type\n  }\n}\n\nexport default Parser\n","import { Lexer } from './Lexer'\nimport { parseLocation } from '~/library/utils'\nimport graph from '~/formulas/graph'\nimport Parser from './Parser'\nimport ReduxConnect from './ReduxConnect'\n\n\nconst ERR_DIVISION_BY_ZERO = '#DIV/0!'\nconst ERR_CIRCULAR_REFERENCE = '#REF!'\nconst ERR_GENERIC = '#ERROR!'\n\nclass Interpreter {\n  constructor(location) {\n    this.location = location\n    this.error = null\n    this.cache = {}\n    this.result = null\n    this.state = new ReduxConnect()\n  }\n\n  interpret(input) {\n    const vertex = graph.addVertex(this.location, input)\n    let lexer, parser\n\n    try {\n      lexer = new Lexer(input)\n      parser = new Parser( lexer.getTokens() )\n      vertex.ast = parser.parse()\n      graph.recalculate(this.location)\n      this.result = vertex.result\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      return this.result\n    }\n\n    this.error = vertex.error\n    return this.result\n  }\n\n  visit(location) {\n    const vertex = graph.getVertex(location)\n\n    if (graph.isResolved(location)) {\n      return vertex.result\n    }\n\n    graph.markVisited(location)\n\n    if (!vertex.ast) {\n      return vertex.result\n    }\n\n    try {\n      this.result = vertex.result = this._visit(vertex.ast)\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      throw error\n    }\n\n    return this.result\n  }\n\n  _visit(node) {\n    switch (node._name) {\n      case 'NumberNode':\n        return this.NumberNode(node)\n      case 'CellNode':\n        return this.CellNode(node)\n      case 'TextNode':\n        return this.TextNode(node)\n      case 'FuncOp':\n        return this.FuncOp(node)\n      case 'BinaryOp':\n        return this.BinaryOp(node)\n      case 'UnaryOp':\n        return this.UnaryOp(node)\n      default:\n        const nodeName = node._name || (node.constructor || {}).name\n        throw new Error(`Unrecognized AST node ${nodeName}`)\n    }\n  }\n\n  TextNode(node) {\n    return node.eval()\n  }\n\n  NumberNode(node) {\n    return node.eval()\n  }\n\n  CellNode(node) {\n    const otherLocation = node.location\n    let result\n\n    if (!this.isLocationValid(otherLocation)) {\n      throw new Error('Location out of bounds')\n    }\n\n    if (this.cache[otherLocation] !== undefined) {\n      return this.cache[otherLocation]\n    }\n\n    if (graph.isVisited(otherLocation)) {\n      throw new Error('Circular reference')\n    }\n\n    result = this.dfsCellVisit(otherLocation)\n    this.cache[otherLocation] = result\n    return result\n  }\n\n  UnaryOp(node) {\n    const result = this._visit(node.expr)\n    return node.eval(result)\n  }\n\n  FuncOp(node) {\n    const evaluatedArgs = []\n\n    for (let childNode of node.argNodes) {\n      const result = this._visit(childNode)\n      evaluatedArgs.push(result)\n    }\n\n    return node.eval(evaluatedArgs)\n  }\n\n  BinaryOp(node) {\n    const left = this._visit(node.leftNode)\n    const right = this._visit(node.rightNode)\n    return node.eval(left, right)\n  }\n\n  isLocationValid(location) {\n    const [colIndex, rowIndex] = parseLocation(location)\n\n    if (Math.min(colIndex, rowIndex) < 0) { return false }\n    if (colIndex >= this.state.columns) { return false }\n    if (rowIndex >= this.state.rows) { return false }\n    return true\n  }\n\n  dfsCellVisit(otherLocation) {\n    const interpreter = new Interpreter(otherLocation)\n    let result = 0\n\n    // cell has a value\n    if (graph.hasVertex(otherLocation)) {\n      result = interpreter.visit(otherLocation)\n    }\n\n    return result\n  }\n\n  errorResponse() {\n    const { message: errorMsg } = this.error\n\n    if (errorMsg.match(/division by zero/i)) {\n      return ERR_DIVISION_BY_ZERO\n    } else if (errorMsg.match(/circular reference/i)) {\n      return ERR_CIRCULAR_REFERENCE\n    } else {\n      return ERR_GENERIC\n    }\n  }\n}\n\nexport default Interpreter\nexport {\n  ERR_DIVISION_BY_ZERO,\n  ERR_CIRCULAR_REFERENCE,\n  ERR_GENERIC,\n}\n","import ReduxConnect from './ReduxConnect'\nimport Interpreter from './Interpreter'\n\n\nclass Vertex {\n  constructor(entered) {\n    this.entered = entered\n    this.error = null\n    this.result = null\n    this.ast = null\n  }\n}\n\nclass Graph {\n  constructor() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  interpret(location, input) {\n    const interpreter = new Interpreter(location)\n    return interpreter.interpret(input)\n  }\n\n  recalculate(initLocation) {\n    this.setPendingNodes()\n    this.dfs(initLocation)\n    this.updateStore()\n  }\n\n  getCellResult(location) {\n    if (this.hasVertex(location)) {\n      return this.getVertex(location).result\n    } else {\n      return ''\n    }\n  }\n\n  setPendingNodes() {\n    this.pending = new Set()\n\n    Object.keys(this.adj).forEach(vertex => {\n      this.pending.add(vertex)\n    })\n  }\n\n  isResolved(location) {\n    return this.isVisited(location) || !this.isPending(location)\n  }\n\n  isVisited(location) {\n    return this.visited.has(location)\n  }\n\n  isPending(location) {\n    return this.pending.has(location)\n  }\n\n  dfs(location) {\n    while (this.pending.size > 0) {\n      let interpreter\n      this.visited = new Set()\n\n      if (!location) {\n        location = [...this.pending][0]\n      }\n\n      try {\n        interpreter = new Interpreter(location)\n        interpreter.visit(location)\n      } catch (error) {}\n\n      this.visited.forEach(location => this.pending.delete(location))\n      location = null\n    }\n  }\n\n  updateStore() {\n    const locationKeys = new Set(this.store.locations)\n\n    for (let [location, vertex] of Object.entries(this.adj)) {\n      const { entered, result } = vertex\n\n      locationKeys.delete(location)\n\n      if (result !== this.store.getCellResult(location)) {\n        this.store.replaceCellData(location, entered, result)\n      }\n    }\n\n    for (let location of locationKeys) {\n      this.store.clearCell(location)\n    }\n  }\n\n  markVisited(location) {\n    return this.visited.add(location)\n  }\n\n  addVertex(location, entered) {\n    const vertex = new Vertex(entered)\n    this.adj[location] = vertex\n    return vertex\n  }\n\n  hasVertex(location) {\n    return location in this.adj\n  }\n\n  getVertex(location) {\n    this.testMissingLocation(location)\n    return this.adj[location]\n  }\n\n  delVertex(location) {\n    if (location in this.adj) {\n      delete this.adj[location]\n      this.recalculate()\n    }\n  }\n\n  resetAll() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  testMissingLocation(location) {\n    if (!this.hasVertex(location)) {\n      throw new Error('Missing location')\n    }\n  }\n}\n\nconst graph = new Graph()\n\n\nexport default graph\nexport {\n  Vertex,\n  Graph,\n}\n","import { createAction } from 'redux-starter-kit'\n\n\nexport const setActiveCell = createAction('SET_ACTIVE_CELL')\nexport const displayCellInputter = createAction('SET_CELL_INPUTTER')\nexport const closeCellInputter = createAction('UNSET_CELL_INPUTTER')\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { clearCellData } from '~/actions/tableActions'\nimport { displayCellInputter, setActiveCell } from '~/actions/globalActions'\n\n\nconst Wrapper = styled.div`\n  cursor: cell;\n  font-size: 13px;\n  border-right: 1px solid ${props => props.theme.colors.cell.border};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.border};\n`\n\nconst Cell = styled.div`\n  display: flex;\n  align-items: center;\n  outline: none;\n  border: 2px solid transparent;\n  line-height: 1.1em;\n  height: 100%;\n  width: 100%;\n  padding: 2px;\n\n  :focus, :focus-within {\n    border: 2px solid salmon;\n  }\n`\n\nexport class ResultCell extends React.PureComponent {\n  static propTypes = {\n    // props\n    // isFocused: PropTypes.bool,\n    location: PropTypes.string.isRequired,\n    // onDoubleClick: PropTypes.func.isRequired,\n    // onKeyDownEditable: PropTypes.func.isRequired,\n    displayCellInputter: PropTypes.func.isRequired,\n    // redux\n    clearCellData: PropTypes.func.isRequired,\n    // setActiveCell: PropTypes.func.isRequired,\n    result: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleCellOnKeyDown = this.handleCellOnKeyDown.bind(this)\n    this.handleCellOnDoubleClick = this.handleCellOnDoubleClick.bind(this)\n    this.handleCellOnClick = this.handleCellOnClick.bind(this)\n    this.handleWrapperOnClick = this.handleWrapperOnClick.bind(this)\n  }\n\n  refCell = React.createRef()\n\n  // componentDidMount() {\n  //   this.focusCell()\n  // }\n\n  // focusCell() {\n  //   if (this.props.isFocused) { this.refCell.current.focus() }\n  // }\n\n  displayCellInputter(willReplaceValue) {\n    const { location } = this.props\n    const cellDomRect = this.refCell.current.getBoundingClientRect()\n    const cellRect = JSON.parse(JSON.stringify(cellDomRect))\n\n    this.props.displayCellInputter({\n      location,\n      willReplaceValue,\n      cellRect,\n    })\n  }\n\n  handleCellOnKeyDown({ key }) {\n    this.props.setActiveCell(this.props.location)\n\n    if (['Delete', 'Backspace'].includes(key)) {\n      const valueStr = '' + this.props.result\n\n      if (valueStr.length > 0) {\n        this.props.clearCellData(this.props.location)\n      }\n      // key pressed is a printable symbol, ex: 'a', '1', ','\n      // can be further refined, but for now it's fine\n    } else if (key.length === 1) {\n      this.displayCellInputter(true)\n    }\n  }\n\n  handleCellOnDoubleClick() {\n    this.displayCellInputter(false)\n  }\n\n  getStyle() {\n    let style = {}\n\n    if (typeof this.props.result === 'number') {\n      style = {\n        whiteSpace: 'nowrap',\n        textOverflow: 'clip',\n        overflow: 'hidden',\n      }\n    }\n\n    return style\n  }\n\n  handleWrapperOnClick() {\n    this.refCell.current.focus()\n  }\n\n  handleCellOnClick(event) {\n    event.stopPropagation()\n  }\n\n  render() {\n    return (\n      <Wrapper\n        className='row-label-height col-label-width'\n        onClick={this.handleWrapperOnClick}\n      >\n        <Cell\n          ref={this.refCell}\n          data-cell='result'\n          data-location={this.props.location}\n          css={this.getStyle()}\n          tabIndex='0'\n          onClick={this.handleCellOnClick}\n          onKeyDown={this.handleCellOnKeyDown}\n          onDoubleClick={this.handleCellOnDoubleClick}\n        >\n          {this.props.result}\n        </Cell>\n      </Wrapper>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const result = cell ? cell.result : ''\n  return { result }\n}\n\nconst mapDispatchToProps = { clearCellData, displayCellInputter, setActiveCell }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultCell)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport RowLabel from '../cell/RowLabel'\n// import CellData from '../cell/CellData'\nimport CellResult from '../cell/CellResult'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\n// function DataRow({ rowNumber, colLabels, activeCell }) {\nfunction DataRow({ rowNumber, colLabels }) {\n  const dataCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => {\n      const location = `${colLabels[i]}-${rowNumber}`\n\n      // return (\n      //   <CellData\n      //     key={i}\n      //     isActive={activeCell === location}\n      //     location={location}\n      //   />\n      // )\n      return (\n        <CellResult\n          key={i}\n          location={location}\n        />\n      )\n    })\n  )\n\n  return (\n    <Row\n      data-row={rowNumber}\n    >\n      <RowLabel\n        label={rowNumber}\n      />\n      {dataCells()}\n    </Row>\n  )\n}\n\nDataRow.propTypes = {\n  rowNumber: PropTypes.number,\n  colLabels: PropTypes.arrayOf(PropTypes.string),\n  // activeCell: PropTypes.string,\n}\n\nexport default DataRow\n\n","import { Machine, assign } from 'xstate'\n\nimport { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nfunction getTargetLocation({ rows, columns, rowIndex, colIndex, key }) {\n  switch (key) {\n    case 'ArrowUp':\n      rowIndex = Math.max(0, rowIndex - 1)\n      break\n    case 'ArrowRight':\n      colIndex = Math.min(columns - 1, colIndex + 1)\n      break\n    case 'ArrowDown':\n    case 'Enter':\n      rowIndex = Math.min(rows - 1, rowIndex + 1)\n      break\n    case 'ArrowLeft':\n      colIndex = Math.max(0, colIndex - 1)\n      break\n    default:\n      return null\n  }\n\n  const colLabel = getColumnLabel(colIndex)\n  const rowLabel = '' + (rowIndex + 1)\n\n  return `${colLabel}-${rowLabel}`\n}\n\nfunction focusTargetCell(ctx) {\n  if (!ctx.endLocation) { return Promise.resolve(false) }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const id = `[data-location=\"${ctx.endLocation}\"]`\n      const cell = document.querySelector(id)\n      if (cell) { cell.focus() }\n      resolve(true)\n    }, 0)\n  })\n}\n\nconst state = {\n  id: 'keyboardNav',\n  initial: 'idle',\n  context: {\n    columns: null,\n    rows: null,\n    key: null,\n    colIndex: null,\n    rowIndex: null,\n    endLocation: null,\n    wasFocused: false,\n  },\n  states: {\n    idle: {\n      on: {\n        'MOVE_FOCUS': {\n          actions: ['setNewContext', 'calcTargetLocation'],\n          target: 'focusTarget',\n        }\n      }\n    },\n    focusTarget: {\n      invoke: {\n        src: focusTargetCell,\n        onDone: {\n          actions: assign({ wasFocused: (ctx, event) => event.data }),\n          target: 'idle',\n        },\n      },\n    },\n  },\n}\n\nconst actions = {\n  actions: {\n    setNewContext: assign((ctx, { key, location }) => {\n      const [colIndex, rowIndex] = parseLocation(location)\n      return { colIndex, rowIndex, key }\n    }),\n    calcTargetLocation: assign({\n      endLocation: (ctx) => {\n        return getTargetLocation(ctx)\n      }\n    }),\n  },\n}\n\nfunction getKeyboardNavMachine(rows, columns) {\n  const newContext = {\n    ...state.context,\n    columns,\n    rows,\n  }\n\n  return Machine(state, actions, newContext)\n}\n\nexport {\n  state,\n  actions,\n  getTargetLocation,\n  focusTargetCell,\n}\n\nexport default getKeyboardNavMachine\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport { interpret } from 'xstate'\n\nimport ColLabelRow from './ColLabelRow'\nimport DataRow from './DataRow'\nimport { getColumnNames } from '~/library/utils'\nimport getKeyboardNavMachine from './keyboardNavMachine'\n\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n  border-top: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-left: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .row-label-width {\n    width: 34px;\n  }\n\n  .row-label-height {\n    min-height: 28px;\n  }\n\n  .col-label-width {\n    width: 140px;\n  }\n\n  .col-label-height {\n    min-height: 26px;\n  }\n`\n\nexport class Table extends React.PureComponent {\n  static propTypes = {\n    activeCell: PropTypes.string,\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleTableOnClick = this.handleTableOnClick.bind(this)\n    this.handleTableOnKeyDown = this.handleTableOnKeyDown.bind(this)\n    this.colLabels = getColumnNames(props.columns)\n  }\n\n  keyboardNavMachine = getKeyboardNavMachine(this.props.rows, this.props.columns)\n  focusService = interpret(this.keyboardNavMachine)\n\n  componentDidMount() {\n    this.focusService.start()\n  }\n\n  componentWillUnmount() {\n    this.focusService.stop()\n  }\n\n  handleTableOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleTableOnKeyDown(event) {\n    event.stopPropagation()\n    this.moveFocus(event.key, event.target.dataset.location)\n  }\n\n  moveFocus(key, location) {\n    this.focusService.send({ type: 'MOVE_FOCUS', key, location })\n  }\n\n  renderColLabelRow(i) {\n    return (\n      <ColLabelRow\n        key={i}\n        rows={this.props.rows}\n        colLabels={this.colLabels}\n      />\n    )\n  }\n\n  renderDataRows(rowNumber) {\n    return (\n      <DataRow\n      key={rowNumber}\n        rowNumber={rowNumber}\n        colLabels={this.colLabels}\n        activeCell={this.props.activeCell}\n      />\n    )\n  }\n\n  renderRows() {\n    return new Array(this.props.rows + 1).fill(0).map((_, i) => {\n      if (i === 0) {\n        return this.renderColLabelRow(i)\n      } else {\n        return this.renderDataRows(i)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Grid\n        data-table='app'\n        onClick={this.handleTableOnClick}\n        onKeyDown={this.handleTableOnKeyDown}\n      >\n        {this.renderRows()}\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { activeCell, rows, columns } = state.global\n  return { activeCell, rows, columns }\n}\n\nexport default connect(mapStateToProps)(Table)\n","import React from 'react'\n\n\nexport const InputContext = React.createContext()\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport { InputContext } from './InputContext'\n\n\nconst Root = styled.div`\n  background: ${props => props.theme.colors.dropdown.normal};\n  margin-top: 1px;\n  box-shadow: 0 0 5px ${props => props.theme.colors.shadow};\n  border: 1px solid ${props => props.theme.colors.dropdown.active};\n  width: 300px;\n  padding: 6px 8px;\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  padding-top: 12px;\n  font-size: 12px;\n`\n\nconst P = styled.p`\n  line-height: 1em;\n  font-size: 13px;\n`\n\nconst Hr = styled.hr`\n  border: 0;\n  border-top: 1px solid ${props => props.theme.colors.dropdown.active};\n`\n\nclass FuncDescription extends React.PureComponent {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    cursorPos: PropTypes.number,\n    fnScopes: PropTypes.array,\n  }\n\n  getFnScope() {\n    const { cursorPos, fnScopes } = this.props\n    let currScope\n\n    for (let scope of fnScopes) {\n      if (cursorPos > scope.startIndex) {\n        currScope = scope\n      } else {\n        break\n      }\n    }\n\n    if (currScope && currScope.endIndex === null) { return currScope}\n    if (currScope && cursorPos - 1 < currScope.end) { return currScope }\n    return null\n  }\n\n  getFnNode(scope) {\n    const key = scope.fnName.toUpperCase()\n    return formulaFuncs[key]\n  }\n\n  render() {\n    const scope = this.getFnScope()\n    const inputRect = this.context.clientRect\n    let fnNode\n\n    if (!scope) { return null }\n    fnNode = this.getFnNode(scope)\n\n    return (\n      <Root\n        css={css`\n          top: ${inputRect.bottom};\n          left: ${inputRect.left};\n        `}\n      >\n        <Pre\n          css={css`\n            padding-bottom: 6px;\n          `}\n        >\n          {fnNode.definition}\n        </Pre>\n        <Hr />\n        <Subtitle>Example</Subtitle>\n        <Pre>{fnNode.example}</Pre>\n        <Subtitle>Summary</Subtitle>\n        <P>{fnNode.summary}</P>\n      </Root>\n    )\n  }\n}\n\nFuncDescription.propTypes = {\n  cursorPos: PropTypes.number,\n  fnScopes: PropTypes.array,\n}\n\nexport default FuncDescription\n\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport styled from '@emotion/styled'\n\n\nconst Li = styled.li`\n`\n\nfunction DropdownItem({ item, isActive }) {\n  return (\n    <Li\n      tabIndex={0}\n    >\n      {isActive && item.active ? item.active : item.base}\n    </Li>\n  )\n}\n\nDropdownItem.propTypes = {\n  item: PropTypes.shape({\n    base: PropTypes.node.isRequired,\n    active: PropTypes.node,\n  }),\n  isActive: PropTypes.bool.isRequired,\n}\n\nexport default DropdownItem\n","\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport InteractiveListItem from './InteractiveListItem'\n\n\nconst Ul = styled.ul`\n  position: fixed;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`\n\nclass InteractiveList extends React.PureComponent {\n  static propsTypes = {\n    selectedFn: PropTypes.func.isRequired,\n    items: PropTypes.array.isRequired,\n    top: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    styles: PropTypes.shape({\n      ul: PropTypes.object,\n      li: PropTypes.object,\n    }),\n  }\n\n  state = {\n    activeIndex: 0,\n    selectedIndex: null,\n  }\n\n  componentDidUpdate(prevProps, prevState) { // eslint-disable-line\n    this.fireSelected()\n  }\n\n  fireSelected() {\n    if (this.state.selectedIndex === null) { return }\n    const item = this.props.items[this.state.selectedIndex]\n    this.props.selectedFn(item.value)\n  }\n\n  renderListItems() {\n    return this.props.items\n      .map((item, i) => (\n        <InteractiveListItem\n          key={i}\n          item={item.item}\n          style={{...this.props.styles.li}}\n          isActive={item.isActive}\n        />\n      ))\n  }\n\n  render() {\n    const { items, top, left, styles } = this.props\n\n    if (items.length === 0) { return null }\n\n    return (\n      <Ul\n        tabIndex={-1}\n        style={{ top, left, ...styles.ul }}\n        onClick={this.handleOnClick}\n      >\n        {this.renderListItems()}\n      </Ul>\n    )\n  }\n}\n\nexport default InteractiveList\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport InteractiveList from '~/library/InteractiveList'\nimport Token from '~/formulas/Token'\nimport { InputContext } from './InputContext'\nimport { withTheme } from 'emotion-theming'\n\n\nconst baseStyle = css`\n  padding: 6px 8px;\n`\n\nconst BaseRoot = styled.div`\n  ${baseStyle}\n  background: ${props => props.theme.colors.dropdown.normal};\n`\n\nconst ActiveRoot = styled.div`\n  ${baseStyle}\n  background: ${props => props.theme.colors.dropdown.active};\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  font-size: 12px;\n`\n\nclass FuncSelector extends React.Component {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    token: PropTypes.instanceOf(Token),\n    colors: PropTypes.object,\n    theme: PropTypes.object,\n  }\n\n  state = {\n    listItems: [],\n    itemIndex: 0,\n    keyEvent: null,\n    isVisible: false,\n  }\n\n  componentDidMount() {\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.state.listItems !== nextState.listItems\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.updateContextData(prevState)\n    this.updateListItems(prevProps)\n    this.keyActions()\n  }\n\n  componentWillUnmount() {\n    this.context.setIsFuncSelectorVisible(false)\n  }\n\n  updateListItems(prevProps) {\n    if (prevProps.token === this.props.token) { return }\n\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  updateContextData(prevState) {\n    const { keyEvent } = this.context\n\n    if (prevState.keyEvent !== keyEvent) {\n      this.setState({ keyEvent })\n      this.setItemIndex(keyEvent)\n    }\n  }\n\n  keyActions() {\n    const { keyEvent } = this.context\n    if (this.state.keyEvent === keyEvent) { return }\n    if (keyEvent.key === 'Enter' && this.state.isVisible) {\n      this.updateInputValue()\n    }\n  }\n\n  updateInputValue() {\n    const { inputValue: currInputValue } = this.context\n    const { token } = this.props\n    const endIndex = currInputValue.length - token.text.length\n    const inputValue = currInputValue.slice(0, endIndex)\n    const { fnName } = this.state.listItems[this.state.itemIndex]\n    const newInputValue = `${inputValue}${fnName}(`\n    this.context.setInputValue(newInputValue)\n  }\n\n  setListItems() {\n    const { token } = this.props\n    const text = token.text.toUpperCase()\n    let isVisible = false\n    let itemIndex\n    const listItems = Object\n      .keys(formulaFuncs)\n      .filter(fnName => fnName.startsWith(text))\n      .sort()\n      .map(fnName => ({\n        item: {\n          base: this.itemBase(fnName),\n          active: this.itemActive(fnName),\n        },\n        isActive: false,\n        fnName,\n      }))\n\n    itemIndex = Math.max(Math.min(listItems.length - 1, this.state.itemIndex), 0)\n\n    if (listItems.length > 0) {\n      listItems[itemIndex].isActive = isVisible = true\n    }\n\n    this.context.setIsFuncSelectorVisible(isVisible)\n    this.setState({ listItems, itemIndex, isVisible })\n  }\n\n  setItemIndex(keyEvent) {\n    let itemIndex = this.state.itemIndex\n\n    switch (keyEvent.key) { // eslint-disable-line default-case\n      case 'ArrowUp':\n          itemIndex = this.state.itemIndex - 1\n        break\n      case 'ArrowDown':\n          itemIndex = this.state.itemIndex + 1\n        break\n    }\n\n    this.setState({ itemIndex }, () => {\n      this.setListItems()\n    })\n  }\n\n  itemBase(fnName) {\n    return (\n      <BaseRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n      </BaseRoot>\n    )\n  }\n\n  itemActive(fnName) {\n    return (\n      <ActiveRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n        <Subtitle>\n          {formulaFuncs[fnName].summary}\n        </Subtitle>\n      </ActiveRoot>\n    )\n  }\n\n  getListStyles() {\n    const { theme } = this.props\n\n    return {\n      ul: {\n        marginTop: 1,\n        boxShadow: `0 0 5px ${theme.colors.shadow}`,\n        border: `1px solid ${theme.colors.dropdown.active}`,\n        width: 300,\n      }\n    }\n  }\n\n  render() {\n    const { listItems, isVisible } = this.state\n    const { clientRect } = this.context\n\n    if (isVisible) {\n      return (\n        <InteractiveList\n          selectItem={() => {}}\n          items={listItems}\n          top={Math.round(clientRect.bottom)}\n          left={Math.round(clientRect.left)}\n          styles={this.getListStyles()}\n        />\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nexport default withTheme(FuncSelector)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { TOKENS as t } from '~/formulas/Lexer'\nimport FuncDescription from './FuncDescription'\nimport FuncSelector from './FuncSelector'\n\n\nclass Suggestions extends React.PureComponent {\n  static propTypes = {\n    tokens: PropTypes.array.isRequired,\n    cursorPos: PropTypes.number,\n  }\n\n  static defaultProps = {\n    cursorPos: 0,\n  }\n\n  state = {\n    fnScopes: [],\n  }\n\n  componentDidMount() {\n    this.setFnScopes()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.tokens !== this.props.tokens) { // avoid infinite loop\n      this.setFnScopes()\n    }\n  }\n\n  setFnScopes() {\n    const stack = []\n    const fnScopes = []\n\n    for (let token of this.props.tokens) {\n      if (token.type === t.FUNCTION) {\n        const scope = { fnName: token.text, startIndex: token.index, endIndex: null }\n        stack.push(scope)\n        fnScopes.push(scope)\n      } else if (token.type === t.LPAREN) {\n        stack.push('(')\n      } else if (token.type === t.RPAREN) {\n        stack.pop()\n        if (stack.length > 0 && stack[stack.length - 1] !== '(') {\n          const scope = stack.pop()\n          scope.endIndex = token.index - 1\n        }\n      }\n    }\n\n    fnScopes.sort((a, b) => a.startIndex - b.startIndex)\n    this.setState({ fnScopes })\n  }\n\n  getComponentToRender() {\n    const { tokens, cursorPos } = this.props\n    let componentName = null\n\n    if (tokens.length < 2) {\n      componentName = null\n    } else {\n      const token1 = tokens[tokens.length - 1]\n      const token2 = tokens.length > 1 && tokens[tokens.length - 2]\n\n      if (\n        [t.UNKNOWN, t.FUNCTION].includes(token1.type)\n        && (token2.category === 'operator'\n            || token2.type === t.EQUALS)\n      ) {\n        if (cursorPos >= token1.index) {\n          componentName = 'FuncSelector'\n        }\n      } else {\n        componentName = 'FuncDescription'\n      }\n    }\n\n    return componentName\n  }\n\n  render() {\n    const { tokens, cursorPos } = this.props\n    const token1 = tokens[tokens.length - 1]\n\n    switch (this.getComponentToRender()) {\n      case 'FuncSelector':\n        return (\n          <FuncSelector\n            token={token1}\n          />\n        )\n      case 'FuncDescription':\n        return (\n          <FuncDescription\n            cursorPos={cursorPos}\n            fnScopes={this.state.fnScopes}\n          />\n        )\n      default:\n        return null\n    }\n  }\n}\n\nexport default Suggestions\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { css, jsx } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { setCellData, clearCellData } from '~/actions/tableActions'\nimport { parseLocation, getColumnLabel } from '~/library/utils'\nimport Lexer from '~/formulas/Lexer'\nimport Suggestions from './Suggestions'\nimport { InputContext } from './InputContext'\nimport { closeCellInputter } from '~/actions/globalActions'\n\n\nconst Root = styled.div`\n  position: fixed;\n`\n\nconst Input = styled.input`\n  display: flex;\n  align-items: center;\n  outline: none;\n  height: 100%;\n  width: 100%;\n  border: 2px solid salmon;\n  padding: 2px;\n  box-sizing: border-box;\n  font-size: 13px;\n  padding-right: 10px;\n  background-color: white;\n`\n\nexport class CellInputter extends React.PureComponent {\n\n  static propTypes = {\n    // redux\n    location: PropTypes.string.isRequired,\n    cellRect: PropTypes.object.isRequired,\n    entered: PropTypes.string.isRequired,\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n    willReplaceValue: PropTypes.bool.isRequired,\n    clearCellData: PropTypes.func.isRequired,\n    setCellData: PropTypes.func.isRequired,\n    closeCellInputter: PropTypes.func.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.setIsFuncSelectorVisible = this.setIsFuncSelectorVisible.bind(this)\n    this.setInputValue = this.setInputValue.bind(this)\n  }\n\n  state = {\n    tokens: [],\n    isFuncSelectorVisible: false,\n    inputValue: '',\n    keyEvent: { key: '' },\n  }\n\n  refInput = React.createRef()\n\n  componentDidMount() {\n    this.setInputValue(this.props.willReplaceValue ? '' : this.props.entered)\n    this.tokenizeInputValue(this.refInput.current.value, '')\n    this.focusInputTag()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.keyEvent !== this.state.keyEvent) {\n      this.setFocus(this.state.keyEvent.key)\n      this.keyActions()\n    }\n  }\n\n  keyActions() {\n    switch (this.state.keyEvent.key) { // eslint-disable-line\n      case 'Escape':\n        // this.props.onEscape()\n        this.props.closeCellInputter()\n        break\n      case 'Enter':\n        if (!this.state.isFuncSelectorVisible) {\n          this.setNewValue()\n          this.props.closeCellInputter()\n          // this.props.onCommit()\n        }\n        break\n    }\n  }\n\n  tokenizeInputValue(entered) {\n    const lexer = new Lexer(entered)\n    const tokens = lexer.getTokens()\n    this.setState({ tokens })\n  }\n\n  focusInputTag() {\n    const input = this.refInput.current\n    input.focus()\n    input.scrollLeft = input.scrollWidth\n  }\n\n  setFocus() {\n    const { keyEvent: { key } } = this.state\n    const { location } = this.props\n    const [colIndex, rowIndex] = parseLocation(location)\n    let el, elId\n\n    if (key === 'Tab') {\n      elId = `[data-cell=\"result\"][data-location=\"${location}\"]`\n    } else if (key === 'Enter') {\n      if (this.state.isFuncSelectorVisible) { return }\n\n      const nextRowIndex = Math.min(this.props.rows - 1, rowIndex + 1)\n      const colLabel = getColumnLabel(colIndex)\n      const rowLabel = '' + (nextRowIndex + 1)\n      const endLocation = `${colLabel}-${rowLabel}`\n      elId = `[data-cell=\"result\"][data-location=\"${endLocation}\"]`\n    } else if (key === 'Escape') {\n      elId = `[data-cell=\"result\"][data-location=\"${location}\"]`\n    } else {\n      elId = `[data-cell=\"input\"][data-location=\"${location}\"]`\n    }\n\n    el = document.querySelector(elId)\n    if (document.activeElement !== el) { el.focus() }\n  }\n\n  setNewValue() {\n    const { location } = this.props\n    const { inputValue } = this.state\n\n    if (this.isWhitespace(inputValue)) {\n      this.props.clearCellData(location)\n      return\n    }\n\n    this.props.setCellData(location, inputValue)\n  }\n\n  isWhitespace(text) {\n    return text.length === 0 || Boolean(text.match(/^\\s+$/))\n  }\n\n  setIsFuncSelectorVisible(isFuncSelectorVisible) {\n    this.setState({ isFuncSelectorVisible })\n  }\n\n  setInputValue(inputValue) {\n    this.setState({ inputValue })\n    this.tokenizeInputValue(inputValue)\n  }\n\n  handleOnChange(event) {\n    const { target: { value } } = event\n    this.tokenizeInputValue(value)\n    this.setState({ inputValue: value })\n  }\n\n  handleOnKeyDown(event) {\n    const { key, target: { value } } = event\n    this.setState({ keyEvent: { key }, inputValue: value })\n  }\n\n  handleOnBlur(event) {\n    this.setState({ inputValue: event.target.value }, () => {\n      this.setNewValue()\n      this.setFocus()\n      this.props.closeCellInputter()\n    })\n  }\n\n  render() {\n    const inputEl = this.refInput.current\n    const { cellRect } = this.props\n\n    if (!this.props.location) { return null }\n\n    return (\n      <InputContext.Provider\n        value={{\n          clientRect: inputEl && inputEl.getBoundingClientRect(),\n          setIsFuncSelectorVisible: this.setIsFuncSelectorVisible,\n          setInputValue: this.setInputValue,\n          keyEvent: this.state.keyEvent,\n          inputValue: this.state.inputValue,\n        }}\n      >\n        <Root\n          css={{\n            top: cellRect.top,\n            left: cellRect.left,\n            width: cellRect.width,\n            height: cellRect.height,\n          }}\n        >\n          <Input\n            ref={this.refInput}\n            data-cell='input'\n            data-location={this.props.location}\n            value={this.state.inputValue}\n            onChange={this.handleOnChange}\n            onKeyDown={this.handleOnKeyDown}\n            onBlur={this.handleOnBlur}\n          />\n          <Suggestions\n            tokens={this.state.tokens}\n            cursorPos={inputEl && inputEl.selectionStart}\n          />\n        </Root>\n      </InputContext.Provider>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {\n    global: {\n      cellInputter: {\n        location, willReplaceValue, cellRect\n      },\n      rows,\n      columns,\n    }\n  } = state\n  const cell = state.table[location]\n  const entered = cell ? cell.entered : ''\n\n  return { location, willReplaceValue, cellRect, entered, rows, columns }\n}\n\nconst mapDispatchToProps = { setCellData, clearCellData, closeCellInputter }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CellInputter)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\n\nimport Header from './components/header/Header'\nimport Table from './components/table/Table'\nimport CellInputter from './components/cellInputter/CellInputter'\n\n\nconst Container = styled.div`\n  display: grid;\n  grid:\n    \"left-blank main right-blank\" 100vh\n    / auto minmax(auto, 1000px) auto;\n`\n\nconst Main = styled.main`\n  grid-area: main;\n`\n\nfunction App({ cellInputter }) {\n  return (\n    <Container>\n      <Main>\n        {cellInputter &&  <CellInputter />}\n        <div data-dummy-focus-stop tabIndex=\"0\" />\n        <Header />\n        <Table />\n      </Main>\n    </Container>\n  )\n}\n\nApp.propTypes = {\n  cellInputter: PropTypes.object,\n  setActiveCell: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({ cellInputter: state.global.cellInputter })\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from 'emotion-theming'\nimport { Global } from '@emotion/core'\nimport 'sanitize.css'\n\nimport appStore from './reducers/'\nimport globalStyles from './styles/globalStyles'\nimport theme from './styles/theme'\nimport App from './App'\n\n\nfunction Root() {\n  return (\n    <Provider store={appStore}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Global styles={globalStyles} />\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default Root\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
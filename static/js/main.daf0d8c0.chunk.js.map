{"version":3,"sources":["reducers/globalReducer.js","reducers/tableReducer.js","reducers/index.js","styles/theme.js","styles/globalStyles.js","actions/globalActions.js","components/header/Header.jsx","components/cells/ColLabel.jsx","components/table/ColLabelRow.jsx","components/cells/RowLabel.jsx","components/cells/displayMachine.js","formulas/Token.js","formulas/Lexer.js","formulas/formulaFunctions.js","library/utils.js","formulas/ast.js","formulas/Parser.js","formulas/index.js","formulas/Interpreter.js","actions/tableActions.js","components/cells/InputData.jsx","components/cells/ResultData.jsx","components/cells/CellData.jsx","components/table/DataRow.jsx","components/table/keyboardNavMachine.js","components/table/Table.jsx","App.jsx","Root.jsx","serviceWorker.js","index.js"],"names":["createReducer","activeCell","rows","columns","SET_ACTIVE_CELL","state","_ref","payload","SET_CELL_VALUE","location","data","DELETE_CELL_DATA","_ref2","appStoreFn","configureStore","reducer","global","globalReducer","table","tableReducer","breaks","xs","sm","md","lg","breakBump","queries","concat","from","breakPoint","upTo","theme","colors","text","cell","border","borderDark","labelBkg","primary","strong","field","background","globalStyles","css","setActiveCell","createAction","Root","Object","styled_base_browser_esm","target","name","styles","Header","react_default","a","createElement","InnerBorder","props","ColLabel","label","data-col","className","Row","ColLabelRow","colLabels","data-row","ColLabelRow_InnerBorder","Array","length","fill","map","_","i","cells_ColLabel","key","Wrapper","RowLabel","displayMachine","Machine","id","initial","states","static","focused","notFocused","on","EDITABLE_MODIFY","EDITABLE_REPLACE","editable","modify","replace","STATIC_FOCUSED","STATIC","Token","type","whitespace","arguments","undefined","classCallCheck","this","value","html","entries","reduce","prev","curr","TOKENS","EOF","UNKNOWN","EQUALS","COMMA","COLON","LPAREN","RPAREN","PLUS","MINUS","MULT","DIV","NUMBER","CELL","FUNCTION","t","Rule","regex","groupIndex","token","index","lastIndex","input","exec","GRAMMAR","Lexer","grammar","char","markers","tokens","nextToken","push","getWhitespace","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","rule","setIndex","match","test","consume","err","return","tokenUNKNOWN","chars","isEOF","isSeparator","isWhitespace","word","join","Boolean","count","fn","AVERAGE","Error","SUM","apply","COUNT","CONCAT","_len","args","_key","MAX","_len2","_key2","forEach","arg","TypeError","Math","max","MIN","_len3","_key3","min","POWER","_len4","_key4","base","exp","pow","SQRT","sqrt","_len5","_key5","POW","BASE_CODE_POINT","codePointAt","getColumnNames","cols","names","prevNames","remainCols","newNames","outerLoop","_i","_prevNames","colName","letter","toConsumableArray","parseLocation","_location$split","split","_location$split2","slicedToArray","col","row","charCodeAt","isNumber","numStr","isPeriodsAndDigits","periodCount","AST","NumberNode","numberNode","_this","possibleConstructorReturn","getPrototypeOf","call","_name","setTokenValue","parseFloat","isNaN","UnaryOp","opNode","expr","_this2","evaluatedExpr","FuncOp","funcNode","argNodes","_this4","evaluatedArgs","getFunction","formulaFn","toUpperCase","BinaryOp","leftNode","rightNode","_this5","left","right","Parser","depth","equals","root","node","operator","term","includes","peekType","factor","unaryOp","number","enclosedExpr","func","lparen","rparen","Interpreter","ast","result","error","lexer","getTokens","parser","parse","visit","errorResponse","errorMsg","message","nodeName","constructor","eval","childNode","clearCellData","dispatch","getState","Promise","resolve","action","Input","InputData","_React$PureComponent","refInput","React","createRef","handleOnKeyDown","bind","assertThisInitialized","handleOnBlur","inherits","createClass","focusInputTag","current","focus","scrollLeft","scrollWidth","rawInputValue","inputValue","trim","isEnteredValid","interpreter","interpret","errors","setCellData","event","onEscape","setNewValue","onCommit","stopPropagation","defaultValue","replaceValue","entered","ref","data-cell","data-location","onKeyDown","onBlur","PureComponent","mapDispatchToProps","connect","ownProps","DataTag","ResultData","refDataTag","focusDataTag","isFocused","onKeyDownEditable","style","whiteSpace","textOverflow","overflow","core_browser_esm","getStyle","tabIndex","onDoubleClick","CellData","displayState","initialState","displayService","onTransition","setState","resultOnDoubleClick","resultOnKeyDownEditable","inputOnEscape","inputOnCommit","start","stop","send","matches","cells_InputData","cells_ResultData","CellData_Wrapper","renderData","DataRow","rowNumber","DataRow_Row","cells_RowLabel","cells_CellData","isActive","getTargetLocation","rowIndex","colIndex","colLabel","num","basePoint","codePoint","String","fromCodePoint","floor","reverse","getColumnLabel","rowLabel","context","endLocation","wasFocused","idle","MOVE_FOCUS","actions","focusTarget","invoke","src","ctx","setTimeout","document","querySelector","onDone","assign","setNewContext","_parseLocation","_parseLocation2","calcTargetLocation","getKeyboardNavMachine","newContext","objectSpread","Grid","Table","keyboardNavMachine","focusService","handleTableOnClick","handleTableOnKeyDown","moveFocus","dataset","table_ColLabelRow","table_DataRow","renderColLabelRow","renderDataRows","data-table","onClick","renderRows","_state$global","Container","Main","header_Header","table_Table","APP_STORE","es","store","react_router_dom","emotion_theming_browser_esm","src_App","window","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.daf0d8c0.chunk.js","sourcesContent":["import { createReducer } from 'redux-starter-kit'\n\nexport const INITIAL_STATE = {\n  activeCell: null,\n  rows: 14,\n  columns: 6,\n}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_ACTIVE_CELL': (state, { payload }) => {\n    state.activeCell = payload\n  },\n})\n","import { createReducer } from 'redux-starter-kit'\n\n\nconst INITIAL_STATE = {}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_CELL_VALUE': (state, { payload }) => {\n    const { location, data } = payload\n    state[location] = data\n  },\n\n  'DELETE_CELL_DATA': (state, { payload }) => {\n    delete state[payload]\n  }\n})\n","import { configureStore } from 'redux-starter-kit'\n\nimport globalReducer from './globalReducer'\nimport tableReducer from './tableReducer'\n\n\nconst appStoreFn = () => (\n  configureStore({\n    reducer: {\n      global: globalReducer,\n      table: tableReducer,\n    }\n  })\n)\n\n\nexport default appStoreFn\n","const colors = {\n  text: '#3D3D3D',\n  cell: {\n    border: '#dfdfdf',\n    borderDark: '#CCC',\n    labelBkg: '#F5F5F5'\n  },\n  primary: {\n    strong: '#E10D75'\n  },\n  field: {\n    background: '#F0F0F0',\n  },\n}\n\nconst breaks = {\n  xs: 0,\n  sm: 420,\n  md: 900,\n  lg: 1200,\n}\n\nconst breakBump = {\n  xs: 'sm',\n  sm: 'md',\n  md: 'lg',\n}\n\nconst queries = {\n  xs: `@media (max-width: ${breaks.sm - 1}px)`,\n  sm: `@media (min-width: ${breaks.sm}px) and (max-width: ${breaks.md - 1}px)`,\n  md: `@media (min-width: ${breaks.md}px) and (max-width: ${breaks.lg - 1}px)`,\n  lg: `@media (min-width: ${breaks.lg}px)`,\n  from: (breakPoint) => (`@media (min-width: ${breaks[breakPoint]}px)`),\n  upTo: (breakPoint) => (`@media (max-width: ${breaks[ breakBump[breakPoint] ] - 1}px)`),\n}\n\nconst theme = {\n  colors,\n  breaks,\n  queries,\n}\n\nexport default theme\n","/* @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nimport theme from './theme'\n\n\nconst globalStyles = css`\n  body {\n    color: ${theme.colors.text};\n    line-height: 1.3em;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  table, th, td {\n    border: 0;\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n\n  td {\n    padding: 0;\n    line-height: 1.2em;\n  }\n\n  p, h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n`\n\nexport default globalStyles\n","import { createAction } from 'redux-starter-kit'\n\n\nexport const setActiveCell = createAction('SET_ACTIVE_CELL')\n","import React from 'react'\nimport styled from '@emotion/styled'\n\n\nconst Root = styled.header`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0 30px;\n`\n\nfunction Header() {\n  return (\n    <Root>\n      <h3>Spreadsheet App</h3>\n    </Root>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n  font-size: 12px;\n`\n\nfunction ColLabel({ label }) {\n  return (\n    <InnerBorder\n      data-col={label}\n      className='col-label-width col-label-height'\n    >\n      {label}\n    </InnerBorder>\n  )\n}\n\nColLabel.propTypes = {\n  label: PropTypes.string,\n}\n\nexport default ColLabel\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport ColLabel from '../cells/ColLabel'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction ColLabelRow({ colLabels }) {\n  const renderCornerCell = () => (\n    <InnerBorder\n      className='row-label-width col-label-height'\n    />\n  )\n\n  const renderLabelCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => (\n      <ColLabel\n        key={i}\n        label={colLabels[i]}\n      />\n    )\n  ))\n\n  return (\n    <Row\n      data-row='header'\n    >\n      {renderCornerCell()}\n      {renderLabelCells()}\n    </Row>\n  )\n}\n\nColLabelRow.propTypes = {\n  colLabels: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default ColLabelRow\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst Wrapper = styled.div`\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction RowLabel({ label }) {\n  return (\n    <Wrapper\n      data-row={label}\n      className='row-label-width row-label-height'\n    >\n      {label}\n    </Wrapper>\n  )\n}\n\nRowLabel.propTypes = {\n  label: PropTypes.number,\n}\n\nexport default RowLabel\n","import { Machine } from 'xstate'\n\n\nconst displayMachine = Machine({\n  id: 'cell',\n  initial: 'static',\n  states: {\n    static: {\n      initial: 'notFocused',\n      states: {\n        focused: {},\n        notFocused: {}\n      },\n      on: {\n        EDITABLE_MODIFY: {\n          target: 'editable.modify'\n        },\n        EDITABLE_REPLACE: {\n          target: 'editable.replace'\n        },\n      },\n    },\n    editable: {\n      states: {\n        modify: {},\n        replace: {},\n      },\n      on: {\n        STATIC_FOCUSED: {\n          target: 'static.focused'\n        },\n        STATIC: {\n          target: 'static'\n        },\n      },\n    },\n  }\n})\n\nexport default displayMachine\n","class Token {\n  constructor(type, text, whitespace='') {\n    this.type = type\n    this.text = text\n    this.value = null\n    this.html = null\n    this.whitespace = whitespace\n  }\n\n  _repr() {\n    return Object\n      .entries(this)\n      .reduce((prev, curr) => {\n        if (curr[1] !== null) {\n          prev[curr[0]] = curr[1]\n        }\n\n        return prev\n      }, {})\n  }\n}\n\nexport default Token\n","import Token from './Token'\n\nconst TOKENS = {\n  // internal\n  EOF: 'EOF',\n  UNKNOWN: 'UNKNOWN',\n  // structure\n  EQUALS: 'EQUALS',\n  COMMA: 'COMMA',\n  COLON: 'COLON',\n  LPAREN: 'LPAREN',\n  RPAREN: 'RPAREN',\n  // operators\n  PLUS: 'PLUS',\n  MINUS: 'MINUS',\n  MULT: 'MULT',\n  DIV: 'DIV',\n  // entities\n  NUMBER: 'NUMBER',\n  CELL: 'CELL',\n  FUNCTION: 'FUNCTION',\n}\n\nconst t = TOKENS\n\nclass Rule {\n  constructor(regex, groupIndex, token) {\n    this.regex = regex\n    this.groupIndex = groupIndex\n    this.token = token\n  }\n\n  setIndex(index) {\n    this.regex.lastIndex = index\n  }\n\n  test(input) {\n    return this.regex.exec(input)\n  }\n}\n\nconst GRAMMAR = [\n  // internal\n  new Rule(/=/g, 0, t.EQUALS),\n  new Rule(/,/g, 0, t.COMMA),\n  new Rule(/:/g, 0, t.COLON),\n  new Rule(/\\(/g, 0, t.LPAREN),\n  new Rule(/\\)/g, 0, t.RPAREN),\n  // operators\n  new Rule(/\\+/g, 0, t.PLUS),\n  new Rule(/\\-/g, 0, t.MINUS), // eslint-disable-line\n  new Rule(/\\*/g, 0, t.MULT),\n  new Rule(/\\//g, 0, t.DIV),\n  // multi-character\n  new Rule(/[\\d\\.]+/g, 0, t.NUMBER), // eslint-disable-line\n  new Rule(/[a-z]+[\\d]+/gi, 0, t.CELL),\n  new Rule(/([a-z]+)\\(/gi, 1, t.FUNCTION),\n]\n\n\nclass Lexer {\n  constructor(input, grammar) {\n    this.input = input\n    this.grammar = grammar\n    this.index = 0\n    this.char = input[this.index]\n    this.markers = []\n    this.tokens = []\n  }\n\n  getTokens() {\n    while (this.char !== t.EOF) {\n      const token = this.nextToken()\n      this.tokens.push(token)\n    }\n\n    return this.tokens\n  }\n\n  nextToken() {\n    if (this.char === t.EOF) {\n      return new Token(t.EOF, t.EOF)\n    }\n\n    // console.log('before whitespace', this.char, this.index)\n    const whitespace = this.getWhitespace()\n    let token\n\n    for (let rule of this.grammar) {\n      rule.setIndex(this.index)\n      const match = rule.test(this.input)\n\n      if (match && match.index === this.index) {\n        const text = match[rule.groupIndex]\n        token = new Token(rule.token, text, whitespace)\n        this.index += text.length - 1\n        this.consume()\n        break\n      }\n    }\n\n    if (!token) {\n      token = this.tokenUNKNOWN(whitespace)\n    }\n\n    return token\n  }\n\n  tokenUNKNOWN(whitespace) {\n    const chars = []\n\n    while (!(this.isEOF() || this.isSeparator() || this.isWhitespace())) {\n      chars.push(this.char)\n      this.consume()\n    }\n    \n    const word = chars.join('')\n    return new Token(t.UNKNOWN, word, whitespace)\n  }\n\n  consume() {\n    this.index++\n\n    if (this.index < this.input.length) {\n      this.char = this.input[this.index]\n    } else {\n      this.char = t.EOF\n    }\n  }\n\n  isEOF() {\n    return this.char === t.EOF\n  }\n\n  isWhitespace() {\n    return !this.isEOF() && Boolean(this.char.match(/\\s/))\n  }\n\n  isSeparator() {\n    return !this.isEOF() && Boolean(this.char.match(/[()+-/*]{1}/))\n  }\n\n  getWhitespace() {\n    let count = 0\n\n    while (this.isWhitespace()) {\n      count++\n      this.consume()\n    }\n\n    return Array(count).fill(' ').join('')\n  }\n}\n\nexport default Lexer\nexport { Rule, GRAMMAR, TOKENS, Lexer }\n","const fn = {\n  AVERAGE: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    return this.SUM(...args) / this.COUNT(...args)\n  },\n\n  CONCAT: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    return args.reduce((prev, curr) => (prev + curr), '')\n  },\n\n  COUNT: (...args) => args.length,\n\n  MAX: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    args.forEach(arg => {\n      if (typeof arg !== 'number') {\n        throw new TypeError(`${arg} is not a number`)\n      }\n    })\n\n    return Math.max(...args)\n  },\n\n  MIN: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    args.forEach(arg => {\n      if (typeof arg !== 'number') {\n        throw new TypeError(`${arg} is not a number`)\n      }\n    })\n\n    return Math.min(...args)\n  },\n\n  POWER: function(...args) {\n    if (args.length !== 2) {\n      throw new Error('Formula takes only two elements')\n    }\n  \n    const [base, exp] = args\n    return Math.pow(base, exp)\n  },\n\n  SQRT: function(...args) {\n    if (args.length !== 1) {\n      throw new Error(`Formula takes only one element`)\n    }\n\n    return Math.sqrt(args[0])\n  },\n\n  SUM: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    return args.reduce((prev, curr) => prev + curr)\n  },\n}\n\n// aliases\nfn.POW = fn.POWER\n\nexport default fn\n","const BASE_CODE_POINT = 'A'.codePointAt(0)\n\nexport function buildUrl(baseUrl, query={}) {\n  const urlQuery = Object.entries(query).map(([key, val]) => `${key}=${val}`).join('&')\n  return [baseUrl.trim(), urlQuery].join('?')\n}\n\nexport function clamp(value, min, max) {\n  return Math.min( Math.max(value, min), max )\n}\n\nexport function getRangeArray(min, max, isString=false) {\n  const range = []\n\n  for (let num = min; num <= max; num++) {\n    range.push( isString ? num.toString() : num )\n  }\n\n  return range\n}\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms))\n\nexport function getColumnNames(cols) {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let names = []\n  let prevNames = ['']\n  let remainCols = cols\n\n  while (remainCols > 0) {\n    const newNames = []\n\n    outerLoop:\n    for (let colName of prevNames) {  \n      for (let letter of alphabet) {\n        if (remainCols === 0)  { break outerLoop }\n        newNames.push(`${colName}${letter}`)\n        remainCols -= 1\n      }\n    }\n\n    prevNames = newNames\n    names = [...names, ...newNames]\n  }\n\n  return names\n}\n\nexport function getCellNames(rows, cols) {\n  const names = []\n  let colNames = getColumnNames(cols)\n\n  for (let row=1; row <= rows; row++) {\n    for (let col of colNames) {\n      names.push(`${col}-${row}`)\n    }\n  }\n\n  return names\n}\n\nexport function getColumnPosition(colLabel) {\n  const letters = colLabel.split('')\n  const oneBase = letters.reduce((prev, letter) => (\n    prev * 26 + letter.charCodeAt(0) - BASE_CODE_POINT + 1\n  ), 0)\n\n  return oneBase - 1\n}\n\nexport function getColumnLabel(num) {\n  const label = []\n  const basePoint = BASE_CODE_POINT\n  let curr = num + 1\n\n  do {\n    curr -= 1\n    const letterPosition = curr % 26\n    const codePoint = basePoint + letterPosition\n    const letter = String.fromCodePoint(codePoint)\n    label.push(letter)\n\n    curr = Math.floor(curr / 26)\n  } while (curr > 0)\n\n  return label.reverse().join('')\n}\n\nexport function parseLocation(location) {\n  let [col, row] = location.split('-')\n  const colIndex = getColumnPosition(col)\n  const rowIndex = +row - 1\n\n  return [colIndex, rowIndex]\n}\n\nexport function isNumber(numStr) {\n  const isPeriodsAndDigits = Boolean(numStr.match(/^[.\\d]+$/))\n  const periodCount = (numStr.match(/\\./g) || []).length\n\n  if (!isPeriodsAndDigits) { return false }\n  if (periodCount > 1) { return false }\n  if (numStr.length === 1 && numStr[0] === '.') { return false }\n  return true\n}\n\n","import { TOKENS as t } from './Lexer'\nimport formulaFn from './formulaFunctions'\nimport { isNumber } from '~/library/utils'\n\n\nclass AST {\n  eval() {\n    throw new Error('Implement method.')\n  }\n}\n\nclass NumberNode extends AST {\n  constructor(numberNode) {\n    super()\n    this._name = 'NumberNode'\n    this.numberNode = numberNode\n  }\n\n  get value() {\n    return this.numberNode.value\n  }\n\n  eval() {\n    if (isNumber(this.numberNode.text)) {\n      this.setTokenValue()\n      return this.value\n    } else {\n      throw new Error(`Invalid number \"${this.numberNode.text}\"`)\n    }\n  }\n\n  setTokenValue() {\n    const value = parseFloat(this.numberNode.text)\n\n    if (isNaN(value)) {\n      throw new Error(`Invalid number \"${this.numberNode.text}\"`)\n    } else {\n      this.numberNode.value = value\n    }\n  }\n}\n\nclass UnaryOp extends AST {\n  constructor(opNode, expr) {\n    super()\n    this._name = 'UnaryOp'\n    this.opNode = opNode\n    this.expr = expr\n  }\n\n  eval(evaluatedExpr) {\n    if (this.opNode.type === t.PLUS) {\n      return evaluatedExpr\n    } else if (this.opNode.type === t.MINUS) {\n      return -evaluatedExpr\n    } else {\n      throw new Error('Unary operator is not \"+\" or \"-\"')\n    }\n  }\n}\n\nclass CellNode extends AST {\n  constructor(cell) {\n    super()\n    this._name= 'CellNode'\n    this.cell = cell\n  }\n}\n\nclass FuncOp extends AST {\n  constructor(funcNode, argNodes) {\n    super()\n    this._name = 'FuncOp'\n    this.funcNode = funcNode\n    this.argNodes = argNodes\n  }\n\n  eval(evaluatedArgs) {\n    const fn = this.getFunction()\n    return fn(...evaluatedArgs)\n  }\n\n  getFunction() {\n    const fn = formulaFn[this.funcNode.text.toUpperCase()]\n\n    if (!fn) {\n      throw new Error(`Formula ${this.funcNode.text} not found`)\n    } else {\n      return fn\n    }\n  }\n}\n\nclass BinaryOp extends AST {\n  constructor(leftNode, opNode, rightNode) {\n    super()\n    this._name = 'BinaryOp'\n    this.leftNode = leftNode\n    this.opNode = opNode\n    this.rightNode = rightNode\n  }\n\n  eval(left, right) {\n    switch(this.opNode.type) {\n      case t.PLUS:\n        return left + right\n      case t.MINUS:\n        return left - right\n      case t.DIV:\n        if (right === 0) {\n          throw new Error(`Division by zero: ${left}/${right}`)\n        } else {\n          return left / right\n        }\n      case t.MULT:\n        return left * right\n      default:\n        throw new Error(`Unsupported operator \"${this.token.text}\"`)\n    }\n  }\n}\n\nexport {\n  NumberNode,\n  CellNode,\n  BinaryOp,\n  UnaryOp,\n  FuncOp,\n}\n","import { TOKENS as t } from './Lexer'\nimport { NumberNode, BinaryOp, UnaryOp, FuncOp } from './ast'\n\n\nclass Parser {\n  constructor(tokens) {\n    this.index = 0\n    this.tokens = tokens\n    this.curr = tokens[this.index]\n    this.depth = 0\n  }\n\n  parse() {\n    this.equals()\n    const root = this.expr()\n\n    if (this.curr !== null) {\n      throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n    }\n\n    if (this.depth !== 0) {\n      throw new Error('Unbalanced expression')\n    }\n\n    return root\n  }\n\n  expr() {\n    // expr : term ( ( PLUS | MINUS ) term ) *\n    let node, operator, right\n\n    node = this.term()\n\n    while ( [t.PLUS, t.MINUS].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.term()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  term() {\n    // term : factor ( ( MULT | DIV ) factor ) *\n    let node, operator, right\n\n    node = this.factor()\n\n    while ( [t.MULT, t.DIV].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.factor()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  factor() {\n    // factor : LPAREN expr RPAREN\n    //          | FUNCTION LPAREN list RPAREN\n    switch (this.peekType()) {\n      case t.PLUS:\n      case t.MINUS:\n        return this.unaryOp()\n      case t.NUMBER:\n        return this.number()\n      case t.LPAREN:\n        return this.enclosedExpr()\n      case t.FUNCTION:\n        return this.func()\n      case t.RPAREN:\n        throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n      default:\n        throw new Error('Missing factor')\n    }\n  }\n\n  number() {\n    if (this.peekType() === t.NUMBER) {\n      const node = new NumberNode(this.curr)\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing number')\n    }\n  }\n\n  operator() {\n    if ([t.PLUS, t.MINUS, t.MULT, t.DIV].includes(this.peekType())) {\n      const node = this.curr\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing operator')\n    }\n  }\n\n  enclosedExpr() {\n    this.lparen()\n    const node = this.expr()\n    this.rparen()\n    return node\n  }\n\n  func() {\n    if (this.peekType() !== t.FUNCTION) {\n      throw new Error('Missing function')\n    }\n\n    const func = this.curr\n    this.consume()\n    this.lparen()\n    const args = this.args()\n    this.rparen()\n    return new FuncOp(func, args)\n  }\n\n  args() {\n    const args = []\n    let term = this.term()\n\n    args.push(term)\n\n    while (this.peekType() === t.COMMA) {\n      this.consume()\n      term = this.term()\n      args.push(term)\n    }\n\n    return args\n  }\n\n  equals() {\n    if (this.peekType() !== t.EQUALS) {\n      throw new Error('Missing equals sign')\n    }\n\n    this.consume()\n  }\n\n  lparen() {\n    if (this.peekType() !== t.LPAREN) {\n      throw new Error('Missing left parenthesis')\n    }\n\n    this.depth += 1\n    this.consume()\n  }\n\n  rparen() {\n    if (this.peekType() !== t.RPAREN) {\n      throw new Error('Missing right parenthesis')\n    }\n\n    this.depth -= 1\n    this.consume()\n  }\n\n  unaryOp() {\n    if (![t.PLUS, t.MINUS].includes(this.peekType())) {\n      throw new Error('Missing unary operator')\n    }\n\n    const curr = this.curr\n    this.consume()\n    const node = new UnaryOp(curr, this.factor())\n    return node\n  }\n\n  consume() {\n    if (this.index < this.tokens.length - 1) {\n      this.index++\n      this.curr = this.tokens[this.index]\n    } else {\n      this.curr = null\n    }\n  }\n\n  isUnbalanced() {\n    return !(this.index === this.tokens.length && this.depth === 0)\n  }\n\n  peekType() {\n    return this.curr && this.curr.type\n  }\n}\n\nexport default Parser\n","import Interpreter from './Interpreter'\n\nexport default Interpreter\n","import { Lexer, GRAMMAR } from './Lexer'\nimport Parser from './Parser'\n\n\nconst ERR_DIVISION_BY_ZERO = '#DIV/0!'\nconst ERR_CIRCULAR_REFERENCE = '#REF!'\nconst ERR_GENERIC = '#ERROR!'\n\nclass Interpreter {\n  constructor(location) {\n    this.location = location\n    this.tokens = null\n    this.ast = null\n    this.result = null\n    this.error = null\n  }\n\n  interpret(input) {\n    if (input === undefined) {\n      throw new Error('Missing input argument')\n    }\n\n    try {\n      const lexer = new Lexer(input, GRAMMAR)\n      this.tokens = lexer.getTokens()\n      const parser = new Parser(this.tokens)\n      this.ast = parser.parse()\n      this.result = this.visit(this.ast)\n      return this.result\n    } catch (error) {\n      this.result = null\n      this.error = error\n      return this.errorResponse()\n    }\n  }\n\n  errorResponse() {\n    const { message: errorMsg } = this.error\n\n    if (errorMsg.match(/division by zero/i)) {\n      return ERR_DIVISION_BY_ZERO\n    } else if (errorMsg.match(/cirular reference/i)) {\n      return ERR_CIRCULAR_REFERENCE\n    } else {\n      return ERR_GENERIC\n    }\n  }\n\n  visit(node) {\n    switch (node._name) {\n      case 'NumberNode':\n        return this.NumberNode(node)\n      case 'FuncOp':\n        return this.FuncOp(node)\n      case 'BinaryOp':\n        return this.BinaryOp(node)\n      case 'UnaryOp':\n          return this.UnaryOp(node)\n      default:\n        const nodeName = node._name || (node.constructor || {}).name\n        throw new Error(`Unrecognized AST node ${nodeName}`)\n    }\n  }\n\n  NumberNode(node) {\n    return node.eval()\n  }\n\n  UnaryOp(node) {\n    const result = this.visit(node.expr)\n    return node.eval(result)\n  }\n\n  FuncOp(node) {\n    const evaluatedArgs = []\n\n    for (let childNode of node.argNodes) {\n      const result = this.visit(childNode)\n      evaluatedArgs.push(result)\n    }\n\n    return node.eval(evaluatedArgs)\n  }\n\n  BinaryOp(node) {\n    const left = this.visit(node.leftNode)\n    const right = this.visit(node.rightNode)\n    return node.eval(left, right)\n  }\n}\n\nexport default Interpreter\nexport {\n  ERR_DIVISION_BY_ZERO,\n  ERR_CIRCULAR_REFERENCE,\n  ERR_GENERIC,\n}\n","export function setCellData(location, entered, isEnteredValid, result) {\n  return {\n    type: 'SET_CELL_VALUE',\n    payload: {\n      location,\n      data: {\n        entered,\n        result,\n        isEnteredValid,\n      }\n    }\n  }\n}\n\nexport function clearCellData(location) {\n  return (dispatch, getState) => {\n    const value = getState().table[location]\n\n    if (value === undefined) { return Promise.resolve() }\n\n    let action = {\n      type: 'DELETE_CELL_DATA',\n      payload: location,\n    }\n\n    return Promise.resolve(dispatch(action))\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect }  from 'react-redux'\n\nimport Interpreter from '~/formulas'\nimport { setCellData, clearCellData } from '~/actions/tableActions'\nimport { isNumber } from '~/library/utils'\n\n\nconst Input = styled.input`\n  display: flex;\n  align-items: center;\n  outline: none;\n  height: 100%;\n  width: 100%;\n  border: 2px solid salmon;\n  padding: 2px;\n  box-sizing: border-box;\n`\n\nexport class InputData extends React.PureComponent {\n  static propTypes = {\n    // props\n    replaceValue: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired,\n    onEscape: PropTypes.func.isRequired,\n    onCommit: PropTypes.func.isRequired,\n    // redux\n    clearCellData: PropTypes.func.isRequired,\n    entered: PropTypes.string,\n    setCellData: PropTypes.func.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n  }\n\n  refInput = React.createRef()\n\n  componentDidMount() {\n    this.focusInputTag()\n  }\n\n  focusInputTag() {\n    const input = this.refInput.current\n    input.focus()\n    input.scrollLeft = input.scrollWidth\n  }\n\n  setNewValue(rawInputValue) {\n    const inputValue = rawInputValue.trim()\n    const { location } = this.props\n    let isFormula, result\n    let isEnteredValid = true\n\n    if (inputValue.length === 0) {\n      this.props.clearCellData(location)\n      return\n    }\n\n    isFormula = inputValue[0] === '='\n\n    if (isFormula) {\n      const interpreter = new Interpreter(this.props.location)\n      result = interpreter.interpret(inputValue)\n      isEnteredValid = interpreter.errors !== null\n    } else if (isNumber(inputValue)) {\n      result = parseFloat(inputValue)\n    } else {\n      result = inputValue\n    }\n\n    this.props.setCellData(location, inputValue, isEnteredValid, result)\n  }\n\n  handleOnKeyDown(event) {\n    const { key } = event\n\n    if (key === 'Escape') {\n      this.props.onEscape()\n    } else if (key === 'Enter') {\n      this.setNewValue(event.target.value)\n      this.props.onCommit()\n    } else {\n      event.stopPropagation()\n    }\n  }\n\n  handleOnBlur(event) {\n    this.setNewValue(event.target.value)\n    this.props.onCommit()\n  }\n\n  render() {\n    const defaultValue = this.props.replaceValue ? null : this.props.entered\n\n    return (\n      <Input\n        ref={this.refInput}\n        data-cell='input'\n        data-location={this.props.location}\n        defaultValue={defaultValue}\n        onKeyDown={this.handleOnKeyDown}\n        onBlur={this.handleOnBlur}\n      />\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const entered = cell ? cell.entered : ''\n  return { entered }\n}\nconst mapDispatchToProps = { setCellData, clearCellData }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputData)\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { clearCellData } from '~/actions/tableActions'\nimport { setActiveCell } from '~/actions/globalActions'\n\n\nconst DataTag = styled.div`\n  display: flex;\n  align-items: center;\n  outline: none;\n  border: 2px solid transparent;\n  line-height: 1.1em;\n  height: 100%;\n  width: 100%;\n  padding: 2px;\n\n  :focus {\n    border: 2px solid salmon;\n  }\n`\n\nexport class ResultData extends React.PureComponent {\n  static propTypes = {\n    // props\n    isFocused: PropTypes.bool,\n    location: PropTypes.string.isRequired,\n    onDoubleClick: PropTypes.func.isRequired,\n    onKeyDownEditable: PropTypes.func.isRequired,\n    // redux\n    clearCellData: PropTypes.func.isRequired,\n    setActiveCell: PropTypes.func.isRequired,\n    result: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n  }\n\n  refDataTag = React.createRef()\n\n  componentDidMount() {\n    this.focusDataTag()\n  }\n\n  focusDataTag() {\n    if (this.props.isFocused) { this.refDataTag.current.focus() }\n  }\n\n  handleOnKeyDown({ key }) {\n    this.props.setActiveCell(this.props.location)\n\n    if (['Delete', 'Backspace'].includes(key)) {\n      const valueStr = '' + this.props.result\n\n      if (valueStr.length > 0) {\n        this.props.clearCellData(this.props.location)\n      }\n      // key pressed is a printable symbol, ex: 'a', '1', ','\n      // can be further refined, but for now it's fine\n    } else if (key.length === 1) {\n      this.props.onKeyDownEditable()\n    }\n  }\n\n  getStyle() {\n    let style = {}\n\n    if (typeof this.props.result === 'number') {\n      style = {\n        whiteSpace: 'nowrap',\n        textOverflow: 'clip',\n        overflow: 'hidden',\n      }\n    }\n\n    return style\n  }\n\n  render() {\n    return (\n      <DataTag\n        ref={this.refDataTag}\n        data-cell='result'\n        data-location={this.props.location}\n        css={this.getStyle()}\n        tabIndex='0'\n        onKeyDown={this.handleOnKeyDown}\n        onDoubleClick={this.props.onDoubleClick}\n      >\n        {this.props.result}\n      </DataTag>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const result = cell ? cell.result : ''\n  return { result }\n}\n\nconst mapDispatchToProps = { clearCellData, setActiveCell }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultData)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { interpret } from 'xstate'\n\nimport displayMachine from './displayMachine'\nimport InputData from './InputData'\nimport ResultData from './ResultData'\n\n\nconst Wrapper = styled.div`\n  cursor: cell;\n  font-size: 13px;\n  border-right: 1px solid ${props => props.theme.colors.cell.border};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.border};\n`\nclass CellData extends React.PureComponent {\n  static propTypes = {\n    location: PropTypes.string.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.resultOnDoubleClick = this.resultOnDoubleClick.bind(this)\n    this.resultOnKeyDownEditable = this.resultOnKeyDownEditable.bind(this)\n    this.inputOnEscape = this.inputOnEscape.bind(this)\n    this.inputOnCommit = this.inputOnCommit.bind(this)\n  }\n\n  state = {\n    displayState: displayMachine.initialState,\n  }\n\n  displayService = interpret(displayMachine)\n    .onTransition(displayState => this.setState({ displayState }))\n\n  componentDidMount() {\n    this.displayService.start()\n  }\n  \n  componentWillUnmount() {\n    this.displayService.stop()\n  }\n  \n  resultOnDoubleClick() {\n    this.displayService.send('EDITABLE_MODIFY')\n  }\n\n  resultOnKeyDownEditable() {\n    this.displayService.send('EDITABLE_REPLACE')\n  }\n\n  inputOnEscape() {\n    this.displayService.send('STATIC_FOCUSED')\n  }\n\n  inputOnCommit() {\n    this.displayService.send('STATIC')\n  }\n\n  renderData() {\n    const { displayState } = this.state\n\n    if (displayState.matches('editable')) {\n      return (\n        <InputData\n          replaceValue={displayState.matches('editable.replace')}\n          location={this.props.location}\n          onEscape={this.inputOnEscape}\n          onCommit={this.inputOnCommit}\n        />\n      )\n    } else {\n      return (\n        <ResultData\n          location={this.props.location}\n          onDoubleClick={this.resultOnDoubleClick}\n          onKeyDownEditable={this.resultOnKeyDownEditable}\n          isFocused={displayState.matches('static.focused')}\n        />\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Wrapper\n        className='row-label-height col-label-width'\n      >\n        {this.renderData()}\n      </Wrapper>\n    )\n  }\n}\n\nexport default CellData\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport RowLabel from '../cells/RowLabel'\nimport CellData from '../cells/CellData'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nfunction DataRow({ rowNumber, colLabels, activeCell }) {\n  const dataCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => {\n      const location = `${colLabels[i]}-${rowNumber}`\n\n      return (\n        <CellData\n          key={i}\n          isActive={activeCell === location}\n          location={location}\n        />\n      )\n    })\n  )\n\n  return (\n    <Row\n      data-row={rowNumber}\n    >\n      <RowLabel\n        label={rowNumber}\n      />\n      {dataCells()}\n    </Row>\n  )\n}\n\nDataRow.propTypes = {\n  rowNumber: PropTypes.number,\n  colLabels: PropTypes.arrayOf(PropTypes.string),\n  activeCell: PropTypes.string,\n}\n\nexport default DataRow\n\n","import { Machine, assign } from 'xstate'\n\nimport { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nfunction getTargetLocation({ rows, columns, rowIndex, colIndex, key }) {\n  switch (key) {\n    case 'ArrowUp':\n      rowIndex = Math.max(0, rowIndex - 1)\n      break\n    case 'ArrowRight':\n      colIndex = Math.min(columns - 1, colIndex + 1)\n      break\n    case 'ArrowDown':\n    case 'Enter':\n      rowIndex = Math.min(rows - 1, rowIndex + 1)\n      break\n    case 'ArrowLeft':\n      colIndex = Math.max(0, colIndex - 1)\n      break\n    default:\n      return null\n  }\n\n  const colLabel = getColumnLabel(colIndex)\n  const rowLabel = '' + (rowIndex + 1)\n\n  return `${colLabel}-${rowLabel}`\n}\n\nfunction focusTargetCell(ctx) {\n  if (!ctx.endLocation) { return Promise.resolve(false) }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const id = `[data-location=\"${ctx.endLocation}\"]`\n      const cell = document.querySelector(id)\n      if (cell) { cell.focus() }\n      resolve(true)\n    }, 0)\n  })\n}\n\nconst state = {\n  id: 'keyboardNav',\n  initial: 'idle',\n  context: {\n    columns: null,\n    rows: null,\n    key: null,\n    colIndex: null,\n    rowIndex: null,\n    endLocation: null,\n    wasFocused: false,\n  },\n  states: {\n    idle: {\n      on: {\n        'MOVE_FOCUS': {\n          actions: ['setNewContext', 'calcTargetLocation'],\n          target: 'focusTarget',\n        }\n      }\n    },\n    focusTarget: {\n      invoke: {\n        src: focusTargetCell,\n        onDone: {\n          actions: assign({ wasFocused: (ctx, event) => event.data }),\n          target: 'idle',\n        },\n      },\n    },\n  },\n}\n\nconst actions = {\n  actions: {\n    setNewContext: assign((ctx, { key, location }) => {\n      const [colIndex, rowIndex] = parseLocation(location)\n      return { colIndex, rowIndex, key }\n    }),\n    calcTargetLocation: assign({\n      endLocation: (ctx) => {\n        return getTargetLocation(ctx)\n      }\n    }),\n  },\n}\n\nfunction getKeyboardNavMachine(rows, columns) {\n  const newContext = {\n    ...state.context,\n    columns,\n    rows,\n  }\n\n  return Machine(state, actions, newContext)\n}\n\nexport {\n  state,\n  actions,\n  getTargetLocation,\n  focusTargetCell,\n}\n\nexport default getKeyboardNavMachine\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport { interpret } from 'xstate'\n\nimport ColLabelRow from './ColLabelRow'\nimport DataRow from './DataRow'\nimport { getColumnNames } from '~/library/utils'\nimport getKeyboardNavMachine from './keyboardNavMachine'\n\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n  border-top: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-left: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .row-label-width {\n    width: 34px;\n  }\n\n  .row-label-height {\n    min-height: 28px;\n  }\n\n  .col-label-width {\n    width: 140px;\n  }\n\n  .col-label-height {\n    min-height: 26px;\n  }\n`\n\nexport class Table extends React.PureComponent {\n  static propTypes = {\n    activeCell: PropTypes.string,\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleTableOnClick = this.handleTableOnClick.bind(this)\n    this.handleTableOnKeyDown = this.handleTableOnKeyDown.bind(this)\n    this.colLabels = getColumnNames(props.columns)\n  }\n\n  keyboardNavMachine = getKeyboardNavMachine(this.props.rows, this.props.columns)\n  focusService = interpret(this.keyboardNavMachine)\n\n  componentDidMount() {\n    this.focusService.start()\n  }\n\n  componentWillUnmount() {\n    this.focusService.stop()\n  }\n\n  handleTableOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleTableOnKeyDown(event) {\n    event.stopPropagation()\n    this.moveFocus(event.key, event.target.dataset.location)\n  }\n\n  moveFocus(key, location) {\n    this.focusService.send({ type: 'MOVE_FOCUS', key, location })\n  }\n\n  renderColLabelRow(i) {\n    return (\n      <ColLabelRow\n        key={i}\n        rows={this.props.rows}\n        colLabels={this.colLabels}\n      />\n    )\n  }\n\n  renderDataRows(rowNumber) {\n    return (\n      <DataRow\n      key={rowNumber}\n        rowNumber={rowNumber}\n        colLabels={this.colLabels}\n        activeCell={this.props.activeCell}\n      />\n    )\n  }\n\n  renderRows() {\n    return new Array(this.props.rows + 1).fill(0).map((_, i) => {\n      if (i === 0) {\n        return this.renderColLabelRow(i)\n      } else {\n        return this.renderDataRows(i)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Grid\n        data-table='app'\n        onClick={this.handleTableOnClick}\n        onKeyDown={this.handleTableOnKeyDown}\n      >\n        {this.renderRows()}\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { activeCell, rows, columns } = state.global\n  return { activeCell, rows, columns }\n}\n\nexport default connect(mapStateToProps)(Table)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\n\nimport { setActiveCell } from './actions/globalActions'\nimport Header from './components/header/Header'\nimport Table from './components/table/Table'\n\n\nconst Container = styled.div`\n  display: grid;\n  grid:\n    \"left-blank main right-blank\" 100vh\n    / auto minmax(auto, 1000px) auto;\n`\n\nconst Main = styled.main`\n  grid-area: main;\n`\n\nfunction App({ setActiveCell }) {\n  const handleOnClick = () => {\n    setActiveCell(null)\n  }\n\n  return (\n    <Container\n      onClick={handleOnClick}\n    >\n      <Main>\n        <Header />\n        <Table />\n      </Main>\n    </Container>\n  )\n}\n\nApp.propTypes = {\n  setActiveCell: PropTypes.func,\n}\n\nconst mapDispatchToProps = { setActiveCell }\n\nexport default connect(null, mapDispatchToProps)(App)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from 'emotion-theming'\nimport { Global } from '@emotion/core'\nimport 'sanitize.css'\n\nimport appStoreFn from './reducers/'\nimport globalStyles from './styles/globalStyles'\nimport theme from './styles/theme'\nimport App from './App'\n\n\nconst APP_STORE = appStoreFn()\n\n\nfunction Root() {\n  return (\n    <Provider store={APP_STORE}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Global styles={globalStyles} />\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default Root\nexport { \n  APP_STORE\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
{"version":3,"sources":["reducers/globalReducer.js","reducers/tableReducer.js","reducers/index.js","styles/theme.js","styles/globalStyles.js","actions/globalActions.js","components/header/Header.jsx","components/cells/ColLabel.jsx","components/table/ColLabelRow.jsx","components/cells/RowLabel.jsx","components/cells/displayMachine.js","formulas/ReduxConnect.js","actions/tableActions.js","formulas/Token.js","library/utils.js","formulas/Lexer.js","formulas/formulaFunctions.js","formulas/ast.js","formulas/Parser.js","formulas/Interpreter.js","formulas/graph.js","components/cells/InputData.jsx","components/cells/ResultData.jsx","components/cells/CellData.jsx","components/table/DataRow.jsx","components/table/keyboardNavMachine.js","components/table/Table.jsx","App.jsx","Root.jsx","serviceWorker.js","index.js"],"names":["createReducer","activeCell","rows","columns","SET_ACTIVE_CELL","state","_ref","payload","SET_CELL_DATA","location","data","DELETE_CELL_DATA","_ref2","appStore","configureStore","reducer","global","globalReducer","table","tableReducer","breaks","xs","sm","md","lg","breakBump","queries","concat","from","breakPoint","upTo","theme","colors","text","cell","border","borderDark","labelBkg","primary","strong","field","background","globalStyles","css","setActiveCell","createAction","Root","Object","styled_base_browser_esm","target","name","styles","Header","react_default","a","createElement","InnerBorder","props","ColLabel","label","data-col","className","Row","ColLabelRow","colLabels","data-row","ColLabelRow_InnerBorder","Array","length","fill","map","_","i","cells_ColLabel","key","Wrapper","RowLabel","displayMachine","Machine","id","initial","states","static","focused","notFocused","on","EDITABLE_MODIFY","EDITABLE_REPLACE","editable","modify","replace","STATIC_FOCUSED","STATIC","ReduxConnect","store","arguments","undefined","classCallCheck","this","globalState","getState","result","entered","dispatch","type","replaceCellData","clearCellData","keys","Token","whitespace","value","html","entries","reduce","prev","curr","BASE_CODE_POINT","codePointAt","getColumnNames","cols","names","prevNames","remainCols","newNames","outerLoop","_i","_prevNames","colName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","letter","push","err","return","toConsumableArray","parseLocation","_location$split","split","_location$split2","slicedToArray","col","row","charCodeAt","isNumber","numStr","isPeriodsAndDigits","Boolean","match","periodCount","TOKENS","EOF","UNKNOWN","EQUALS","COMMA","COLON","LPAREN","RPAREN","PLUS","MINUS","MULT","DIV","NUMBER","CELL","FUNCTION","TEXT","t","Rule","regex","groupIndex","token","index","lastIndex","input","exec","GRAMMAR","Lexer","char","initChar","markers","tokens","nextToken","isFormula","tokenTEXTorNUMBER","getWhitespace","_GRAMMAR","rule","setIndex","test","consume","tokenUNKNOWN","chars","isEOF","isSeparator","isWhitespace","join","count","fn","AVERAGE","Error","SUM","apply","COUNT","CONCAT","_len","args","_key","MAX","_len2","_key2","forEach","arg","TypeError","Math","max","MIN","_len3","_key3","min","POWER","_len4","_key4","base","exp","pow","SQRT","sqrt","_len5","_key5","POW","AST","_name","TextNode","textNode","_this","possibleConstructorReturn","getPrototypeOf","call","NumberNode","numberNode","_this2","setTokenValue","parseFloat","CellNode","_this3","getCellLabel","slice","toUpperCase","UnaryOp","opNode","expr","_this4","evaluatedExpr","FuncOp","funcNode","argNodes","_this5","evaluatedArgs","getFunction","formulaFn","BinaryOp","leftNode","rightNode","_this6","left","right","Parser","ast","hasCellRefs","peekType","number","equals","node","operator","term","includes","factor","unaryOp","enclosedExpr","func","lparen","rparen","Interpreter","error","cache","lexer","parser","vertex","graph","addVertex","getTokens","parse","recalculate","errorResponse","getVertex","isResolved","markVisited","_visit","nodeName","constructor","eval","otherLocation","isLocationValid","isVisited","dfsCellVisit","childNode","_parseLocation","_parseLocation2","colIndex","rowIndex","interpreter","hasVertex","visit","errorMsg","message","Vertex","Graph","adj","pending","visited","interpret","initLocation","setPendingNodes","dfs","updateStore","Set","add","isPending","has","size","delete","locationKeys","locations","_Object$entries","_ref3","getCellResult","clearCell","testMissingLocation","delVertex","Promise","resolve","Input","InputData","_React$PureComponent","refInput","React","createRef","handleOnKeyDown","bind","assertThisInitialized","handleOnBlur","inherits","createClass","focusInputTag","current","focus","scrollLeft","scrollWidth","inputValue","setCellData","event","onEscape","setNewValue","onCommit","stopPropagation","defaultValue","replaceValue","ref","data-cell","data-location","onKeyDown","onBlur","PureComponent","mapDispatchToProps","connect","ownProps","DataTag","ResultData","refDataTag","focusDataTag","isFocused","onKeyDownEditable","style","whiteSpace","textOverflow","overflow","core_browser_esm","getStyle","tabIndex","onDoubleClick","CellData","displayState","initialState","displayService","onTransition","setState","resultOnDoubleClick","resultOnKeyDownEditable","inputOnEscape","inputOnCommit","start","stop","send","matches","cells_InputData","cells_ResultData","CellData_Wrapper","renderData","DataRow","rowNumber","DataRow_Row","cells_RowLabel","cells_CellData","isActive","getTargetLocation","colLabel","num","basePoint","codePoint","String","fromCodePoint","floor","reverse","getColumnLabel","rowLabel","context","endLocation","wasFocused","idle","MOVE_FOCUS","actions","focusTarget","invoke","src","ctx","setTimeout","document","querySelector","onDone","assign","setNewContext","calcTargetLocation","getKeyboardNavMachine","newContext","objectSpread","Grid","Table","keyboardNavMachine","focusService","handleTableOnClick","handleTableOnKeyDown","moveFocus","dataset","table_ColLabelRow","table_DataRow","renderColLabelRow","renderDataRows","data-table","onClick","renderRows","_state$global","Container","Main","header_Header","table_Table","es","react_router_dom","emotion_theming_browser_esm","src_App","window","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0cfc8c11.chunk.js","sourcesContent":["import { createReducer } from 'redux-starter-kit'\n\nexport const INITIAL_STATE = {\n  activeCell: null,\n  rows: 14,\n  columns: 6,\n}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_ACTIVE_CELL': (state, { payload }) => {\n    state.activeCell = payload\n  },\n})\n","import { createReducer } from 'redux-starter-kit'\n\n\nconst INITIAL_STATE = {}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_CELL_DATA': (state, { payload }) => {\n    const { location, data } = payload\n    state[location] = data\n  },\n\n  'DELETE_CELL_DATA': (state, { payload }) => {\n    delete state[payload]\n  }\n})\n","import { configureStore } from 'redux-starter-kit'\n\nimport globalReducer from './globalReducer'\nimport tableReducer from './tableReducer'\n\n\nconst appStoreGen = () => (\n  configureStore({\n    reducer: {\n      global: globalReducer,\n      table: tableReducer,\n    }\n  })\n)\n\nconst appStore = appStoreGen()\n\n\nexport default appStore\nexport { appStoreGen }\n","const colors = {\n  text: '#3D3D3D',\n  cell: {\n    border: '#dfdfdf',\n    borderDark: '#CCC',\n    labelBkg: '#F5F5F5'\n  },\n  primary: {\n    strong: '#E10D75'\n  },\n  field: {\n    background: '#F0F0F0',\n  },\n}\n\nconst breaks = {\n  xs: 0,\n  sm: 420,\n  md: 900,\n  lg: 1200,\n}\n\nconst breakBump = {\n  xs: 'sm',\n  sm: 'md',\n  md: 'lg',\n}\n\nconst queries = {\n  xs: `@media (max-width: ${breaks.sm - 1}px)`,\n  sm: `@media (min-width: ${breaks.sm}px) and (max-width: ${breaks.md - 1}px)`,\n  md: `@media (min-width: ${breaks.md}px) and (max-width: ${breaks.lg - 1}px)`,\n  lg: `@media (min-width: ${breaks.lg}px)`,\n  from: (breakPoint) => (`@media (min-width: ${breaks[breakPoint]}px)`),\n  upTo: (breakPoint) => (`@media (max-width: ${breaks[ breakBump[breakPoint] ] - 1}px)`),\n}\n\nconst theme = {\n  colors,\n  breaks,\n  queries,\n}\n\nexport default theme\n","/* @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nimport theme from './theme'\n\n\nconst globalStyles = css`\n  body {\n    color: ${theme.colors.text};\n    line-height: 1.3em;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  table, th, td {\n    border: 0;\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n\n  td {\n    padding: 0;\n    line-height: 1.2em;\n  }\n\n  p, h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n`\n\nexport default globalStyles\n","import { createAction } from 'redux-starter-kit'\n\n\nexport const setActiveCell = createAction('SET_ACTIVE_CELL')\n","import React from 'react'\nimport styled from '@emotion/styled'\n\n\nconst Root = styled.header`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0 30px;\n`\n\nfunction Header() {\n  return (\n    <Root>\n      <h3>Spreadsheet App</h3>\n    </Root>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n  font-size: 12px;\n`\n\nfunction ColLabel({ label }) {\n  return (\n    <InnerBorder\n      data-col={label}\n      className='col-label-width col-label-height'\n    >\n      {label}\n    </InnerBorder>\n  )\n}\n\nColLabel.propTypes = {\n  label: PropTypes.string,\n}\n\nexport default ColLabel\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport ColLabel from '../cells/ColLabel'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction ColLabelRow({ colLabels }) {\n  const renderCornerCell = () => (\n    <InnerBorder\n      className='row-label-width col-label-height'\n    />\n  )\n\n  const renderLabelCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => (\n      <ColLabel\n        key={i}\n        label={colLabels[i]}\n      />\n    )\n  ))\n\n  return (\n    <Row\n      data-row='header'\n    >\n      {renderCornerCell()}\n      {renderLabelCells()}\n    </Row>\n  )\n}\n\nColLabelRow.propTypes = {\n  colLabels: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default ColLabelRow\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst Wrapper = styled.div`\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction RowLabel({ label }) {\n  return (\n    <Wrapper\n      data-row={label}\n      className='row-label-width row-label-height'\n    >\n      {label}\n    </Wrapper>\n  )\n}\n\nRowLabel.propTypes = {\n  label: PropTypes.number,\n}\n\nexport default RowLabel\n","import { Machine } from 'xstate'\n\n\nconst displayMachine = Machine({\n  id: 'cell',\n  initial: 'static',\n  states: {\n    static: {\n      initial: 'notFocused',\n      states: {\n        focused: {},\n        notFocused: {}\n      },\n      on: {\n        EDITABLE_MODIFY: {\n          target: 'editable.modify'\n        },\n        EDITABLE_REPLACE: {\n          target: 'editable.replace'\n        },\n      },\n    },\n    editable: {\n      states: {\n        modify: {},\n        replace: {},\n      },\n      on: {\n        STATIC_FOCUSED: {\n          target: 'static.focused'\n        },\n        STATIC: {\n          target: 'static'\n        },\n      },\n    },\n  }\n})\n\nexport default displayMachine\n","import appStore from '~/reducers/'\nimport { clearCellData, replaceCellData } from '~/actions/tableActions'\n\n\nclass ReduxConnect {\n  constructor(store=appStore) {\n    const { global: globalState } = store.getState()\n    this.store = store\n    this.rows = globalState.rows\n    this.columns = globalState.columns\n  }\n\n  get table() {\n    return this.store.getState().table\n  }\n\n  get locations() {\n    return Object.keys(this.table)\n  }\n\n  getCellResult(location) {\n    const data = this.table[location]\n    return data && data.result\n  }\n\n  replaceCellData(location, entered, result) {\n    this.store.dispatch(replaceCellData(location, entered, result))\n  }\n\n  clearCell(location) {\n    this.store.dispatch(clearCellData(location))\n  }\n}\n\nexport default ReduxConnect\nexport { appStore }\n","import graph from '~/formulas/graph'\n\n\nexport function setCellData(location, entered) {\n  const result = graph.interpret(location, entered)\n\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function replaceCellData(location, entered, result) {\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function clearCellData(location) {\n  return (dispatch, getState) => {\n    const value = getState().table[location]\n\n    graph.delVertex(location)\n\n    if (value === undefined) {\n      return Promise.resolve()\n    }\n\n\n    return Promise.resolve(dispatch({\n      type: 'DELETE_CELL_DATA',\n      payload: location,\n    }))\n  }\n}\n","class Token {\n  constructor(type, text, whitespace='') {\n    this.type = type\n    this.text = text\n    this.value = null\n    this.html = null\n    this.whitespace = whitespace\n  }\n\n  _repr() {\n    return Object\n      .entries(this)\n      .reduce((prev, curr) => {\n        if (curr[1] !== null) {\n          prev[curr[0]] = curr[1]\n        }\n\n        return prev\n      }, {})\n  }\n}\n\nexport default Token\n","const BASE_CODE_POINT = 'A'.codePointAt(0)\n\nexport function buildUrl(baseUrl, query={}) {\n  const urlQuery = Object.entries(query).map(([key, val]) => `${key}=${val}`).join('&')\n  return [baseUrl.trim(), urlQuery].join('?')\n}\n\nexport function clamp(value, min, max) {\n  return Math.min( Math.max(value, min), max )\n}\n\nexport function getRangeArray(min, max, isString=false) {\n  const range = []\n\n  for (let num = min; num <= max; num++) {\n    range.push( isString ? num.toString() : num )\n  }\n\n  return range\n}\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms))\n\nexport function getColumnNames(cols) {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let names = []\n  let prevNames = ['']\n  let remainCols = cols\n\n  while (remainCols > 0) {\n    const newNames = []\n\n    outerLoop:\n    for (let colName of prevNames) {  \n      for (let letter of alphabet) {\n        if (remainCols === 0)  { break outerLoop }\n        newNames.push(`${colName}${letter}`)\n        remainCols -= 1\n      }\n    }\n\n    prevNames = newNames\n    names = [...names, ...newNames]\n  }\n\n  return names\n}\n\nexport function getCellNames(rows, cols) {\n  const names = []\n  let colNames = getColumnNames(cols)\n\n  for (let row=1; row <= rows; row++) {\n    for (let col of colNames) {\n      names.push(`${col}-${row}`)\n    }\n  }\n\n  return names\n}\n\nexport function getColumnPosition(colLabel) {\n  const letters = colLabel.split('')\n  const oneBase = letters.reduce((prev, letter) => (\n    prev * 26 + letter.charCodeAt(0) - BASE_CODE_POINT + 1\n  ), 0)\n\n  return oneBase - 1\n}\n\nexport function getColumnLabel(num) {\n  const label = []\n  const basePoint = BASE_CODE_POINT\n  let curr = num + 1\n\n  do {\n    curr -= 1\n    const letterPosition = curr % 26\n    const codePoint = basePoint + letterPosition\n    const letter = String.fromCodePoint(codePoint)\n    label.push(letter)\n\n    curr = Math.floor(curr / 26)\n  } while (curr > 0)\n\n  return label.reverse().join('')\n}\n\nexport function parseLocation(location) {\n  let [col, row] = location.split('-')\n  const colIndex = getColumnPosition(col)\n  const rowIndex = +row - 1\n\n  return [colIndex, rowIndex]\n}\n\nexport function isNumber(numStr) {\n  const isPeriodsAndDigits = Boolean(numStr.match(/^[.\\d]+$/))\n  const periodCount = (numStr.match(/\\./g) || []).length\n\n  if (!isPeriodsAndDigits) { return false }\n  if (periodCount > 1) { return false }\n  if (numStr.length === 1 && numStr[0] === '.') { return false }\n  return true\n}\n\n","import Token from './Token'\nimport { isNumber } from '~/library/utils'\n\n\nconst TOKENS = {\n  // internal\n  EOF: 'EOF',\n  UNKNOWN: 'UNKNOWN',\n  // structure\n  EQUALS: 'EQUALS',\n  COMMA: 'COMMA',\n  COLON: 'COLON',\n  LPAREN: 'LPAREN',\n  RPAREN: 'RPAREN',\n  // operators\n  PLUS: 'PLUS',\n  MINUS: 'MINUS',\n  MULT: 'MULT',\n  DIV: 'DIV',\n  // entities\n  NUMBER: 'NUMBER',\n  CELL: 'CELL',\n  FUNCTION: 'FUNCTION',\n  TEXT: 'TEXT',\n}\n\nconst t = TOKENS\n\nclass Rule {\n  constructor(regex, groupIndex, token) {\n    this.regex = regex\n    this.groupIndex = groupIndex\n    this.token = token\n  }\n\n  setIndex(index) {\n    this.regex.lastIndex = index\n  }\n\n  test(input) {\n    return this.regex.exec(input)\n  }\n}\n\nconst GRAMMAR = [\n  // internal\n  new Rule(/=/g, 0, t.EQUALS),\n  new Rule(/,/g, 0, t.COMMA),\n  new Rule(/:/g, 0, t.COLON),\n  new Rule(/\\(/g, 0, t.LPAREN),\n  new Rule(/\\)/g, 0, t.RPAREN),\n  // operators\n  new Rule(/\\+/g, 0, t.PLUS),\n  new Rule(/\\-/g, 0, t.MINUS), // eslint-disable-line\n  new Rule(/\\*/g, 0, t.MULT),\n  new Rule(/\\//g, 0, t.DIV),\n  // multi-character\n  new Rule(/[\\d\\.]+/g, 0, t.NUMBER), // eslint-disable-line\n  new Rule(/[a-z]+[\\d]+/gi, 0, t.CELL),\n  new Rule(/([a-z]+)\\(/gi, 1, t.FUNCTION),\n]\n\n\nclass Lexer {\n  constructor(input) {\n    this.input = input\n    this.index = 0\n    this.char = this.initChar(input)\n    this.markers = []\n    this.tokens = []\n  }\n\n  getTokens() {\n    while (this.char !== t.EOF) {\n      const token = this.nextToken()\n      this.tokens.push(token)\n    }\n\n    return this.tokens\n  }\n\n  nextToken() {\n    if (this.char === t.EOF) {\n      return new Token(t.EOF, t.EOF)\n    }\n\n    if (!this.isFormula()) {\n      return this.tokenTEXTorNUMBER()\n    }\n\n    const whitespace = this.getWhitespace()\n    let token\n\n    for (let rule of GRAMMAR) {\n      rule.setIndex(this.index)\n      const match = rule.test(this.input)\n\n      if (match && match.index === this.index) {\n        const text = match[rule.groupIndex]\n        token = new Token(rule.token, text, whitespace)\n        this.index += text.length - 1\n        this.consume()\n        break\n      }\n    }\n\n    if (!token) {\n      token = this.tokenUNKNOWN(whitespace)\n    }\n\n    return token\n  }\n\n  initChar(input) {\n    if (this.input.length === 0) {\n      this.input = '0'\n    }\n\n    return input[this.index]\n  }\n\n  tokenUNKNOWN(whitespace) {\n    const chars = []\n\n    while (!(this.isEOF() || this.isSeparator() || this.isWhitespace())) {\n      chars.push(this.char)\n      this.consume()\n    }\n\n    const text = chars.join('')\n    return new Token(t.UNKNOWN, text, whitespace)\n  }\n\n  tokenTEXTorNUMBER() {\n    let token\n\n    if (isNumber(this.input)) {\n      token = new Token(t.NUMBER, this.input)\n    } else {\n      token = new Token(t.TEXT, this.input)\n    }\n\n    this.index = this.input.length - 1\n    this.consume()\n    return token\n  }\n\n  consume() {\n    this.index++\n\n    if (this.index < this.input.length) {\n      this.char = this.input[this.index]\n    } else {\n      this.char = t.EOF\n    }\n  }\n\n  isFormula() {\n    return this.input[0] === '='\n  }\n\n  isEOF() {\n    return this.char === t.EOF\n  }\n\n  isWhitespace() {\n    return !this.isEOF() && Boolean(this.char.match(/\\s/))\n  }\n\n  isSeparator() {\n    return Boolean(this.char.match(/[\\(\\)\\+\\-\\/\\*]/)) // eslint-disable-line\n  }\n\n  getWhitespace() {\n    let count = 0\n\n    while (this.isWhitespace()) {\n      count++\n      this.consume()\n    }\n\n    return Array(count).fill(' ').join('')\n  }\n}\n\nexport default Lexer\nexport { Rule, GRAMMAR, TOKENS, Lexer }\n","const fn = {\n  AVERAGE: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    return this.SUM(...args) / this.COUNT(...args)\n  },\n\n  CONCAT: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    return args.reduce((prev, curr) => (prev + curr), '')\n  },\n\n  COUNT: (...args) => args.length,\n\n  MAX: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    args.forEach(arg => {\n      if (typeof arg !== 'number') {\n        throw new TypeError(`${arg} is not a number`)\n      }\n    })\n\n    return Math.max(...args)\n  },\n\n  MIN: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    args.forEach(arg => {\n      if (typeof arg !== 'number') {\n        throw new TypeError(`${arg} is not a number`)\n      }\n    })\n\n    return Math.min(...args)\n  },\n\n  POWER: function(...args) {\n    if (args.length !== 2) {\n      throw new Error('Formula takes only two elements')\n    }\n  \n    const [base, exp] = args\n    return Math.pow(base, exp)\n  },\n\n  SQRT: function(...args) {\n    if (args.length !== 1) {\n      throw new Error(`Formula takes only one element`)\n    }\n\n    return Math.sqrt(args[0])\n  },\n\n  SUM: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    return args.reduce((prev, curr) => prev + curr)\n  },\n}\n\n// aliases\nfn.POW = fn.POWER\n\nexport default fn\n","import { TOKENS as t } from './Lexer'\nimport formulaFn from './formulaFunctions'\nimport { isNumber } from '~/library/utils'\n\n\nclass AST {\n  constructor(name) {\n    this._name = name\n  }\n\n  eval() {\n    throw new Error('Implement method.')\n  }\n}\n\nclass TextNode extends AST {\n  constructor(textNode) {\n    super('TextNode')\n    this.textNode = textNode\n  }\n\n  eval() {\n    return this.textNode.text\n  }\n}\n\nclass NumberNode extends AST {\n  constructor(numberNode) {\n    super('NumberNode')\n    this.numberNode = numberNode\n  }\n\n  get value() {\n    return this.numberNode.value\n  }\n\n  eval() {\n    if (isNumber(this.numberNode.text)) {\n      this.setTokenValue()\n      return this.value\n    } else {\n      throw new Error(`Invalid number \"${this.numberNode.text}\"`)\n    }\n  }\n\n  setTokenValue() {\n    const value = parseFloat(this.numberNode.text)\n    this.numberNode.value = value\n  }\n}\n\nclass CellNode extends AST {\n  constructor(token) {\n    super('CellNode')\n    token.value = this.getCellLabel(token)\n    this.cell = token\n  }\n\n  get location() {\n    return this.cell.value\n  }\n\n  getCellLabel(token) {\n    const { text } = token\n    const { index } = text.match(/\\d+/)\n    const col = text.slice(0, index).toUpperCase()\n    const row = text.slice(index)\n    return `${col}-${row}`\n  }\n}\n\nclass UnaryOp extends AST {\n  constructor(opNode, expr) {\n    super('UnaryOp')\n    this.opNode = opNode\n    this.expr = expr\n  }\n\n  eval(evaluatedExpr) {\n    if (this.opNode.type === t.PLUS) {\n      return evaluatedExpr\n    } else if (this.opNode.type === t.MINUS) {\n      return -evaluatedExpr\n    }\n  }\n}\n\nclass FuncOp extends AST {\n  constructor(funcNode, argNodes) {\n    super('FuncOp')\n    this.funcNode = funcNode\n    this.argNodes = argNodes\n  }\n\n  eval(evaluatedArgs) {\n    const fn = this.getFunction()\n    return fn(...evaluatedArgs)\n  }\n\n  getFunction() {\n    const fn = formulaFn[this.funcNode.text.toUpperCase()]\n\n    if (!fn) {\n      throw new Error(`Formula ${this.funcNode.text} not found`)\n    } else {\n      return fn\n    }\n  }\n}\n\nclass BinaryOp extends AST {\n  constructor(leftNode, opNode, rightNode) {\n    super('BinaryOp')\n    this.leftNode = leftNode\n    this.opNode = opNode\n    this.rightNode = rightNode\n  }\n\n  eval(left, right) {\n    switch(this.opNode.type) {\n      case t.PLUS:\n        return left + right\n      case t.MINUS:\n        return left - right\n      case t.DIV:\n        if (right === 0) {\n          throw new Error(`Division by zero: ${left}/${right}`)\n        } else {\n          return left / right\n        }\n      case t.MULT:\n        return left * right\n      default:\n        throw new Error(`Unsupported operator \"${this.token.text}\"`)\n    }\n  }\n}\n\nexport {\n  TextNode,\n  NumberNode,\n  CellNode,\n  BinaryOp,\n  UnaryOp,\n  FuncOp,\n}\n","import { TOKENS as t } from './Lexer'\nimport { TextNode, NumberNode, CellNode, BinaryOp, UnaryOp, FuncOp } from './ast'\n\n\nclass Parser {\n  constructor(tokens) {\n    this.index = 0\n    this.tokens = tokens\n    this.curr = this.tokens[0]\n    this.ast = null\n    this.hasCellRefs = false\n  }\n\n  parse() {\n    switch (this.peekType()) {\n      case t.TEXT:\n        this.ast = this.text()\n        break\n      case t.NUMBER:\n        this.ast = this.number()\n        break\n      default:\n        this.equals()\n        this.ast = this.expr()\n        break\n    }\n\n    if (this.curr !== null) {\n      throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n    }\n\n    return this.ast\n  }\n\n  expr() {\n    // expr : term ( ( PLUS | MINUS ) term ) *\n    let node, operator, right\n\n    node = this.term()\n\n    while ( [t.PLUS, t.MINUS].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.term()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  term() {\n    // term : factor ( ( MULT | DIV ) factor ) *\n    let node, operator, right\n\n    node = this.factor()\n\n    while ( [t.MULT, t.DIV].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.factor()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  factor() {\n    // factor : ( PLUS | MINUS ) ( NUMBER | CELL )\n    //          | LPAREN expr RPAREN\n    //          | FUNCTION LPAREN list RPAREN\n    switch (this.peekType()) {\n      case t.PLUS:\n      case t.MINUS:\n        return this.unaryOp()\n      case t.NUMBER:\n        return this.number()\n      case t.CELL:\n        return this.cell()\n      case t.LPAREN:\n        return this.enclosedExpr()\n      case t.FUNCTION:\n        return this.func()\n      case t.RPAREN:\n        throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n      default:\n        throw new Error('Missing factor')\n    }\n  }\n\n  text() {\n    let node\n\n    if (this.peekType() !== t.TEXT) {\n      throw new Error('Missing string')\n    }\n\n    node = new TextNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  number() {\n    if (this.peekType() === t.NUMBER) {\n      const node = new NumberNode(this.curr)\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing number')\n    }\n  }\n\n  operator() {\n    if ([t.PLUS, t.MINUS, t.MULT, t.DIV].includes(this.peekType())) {\n      const node = this.curr\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing operator')\n    }\n  }\n\n  enclosedExpr() {\n    this.lparen()\n    const node = this.expr()\n    this.rparen()\n    return node\n  }\n\n  cell() {\n    if (this.peekType() !== t.CELL) {\n      throw new Error('Missing cell node')\n    }\n\n    const node = new CellNode(this.curr)\n    this.hasCellRefs = true\n    this.consume()\n    return node\n  }\n\n  func() {\n    if (this.peekType() !== t.FUNCTION) {\n      throw new Error('Missing function')\n    }\n\n    const func = this.curr\n    this.consume()\n    this.lparen()\n    const args = this.args()\n    this.rparen()\n    return new FuncOp(func, args)\n  }\n\n  args() {\n    const args = []\n    let term = this.term()\n\n    args.push(term)\n\n    while (this.peekType() === t.COMMA) {\n      this.consume()\n      term = this.term()\n      args.push(term)\n    }\n\n    return args\n  }\n\n  equals() {\n    if (this.peekType() !== t.EQUALS) {\n      throw new Error('Missing equals sign')\n    }\n\n    this.consume()\n  }\n\n  lparen() {\n    if (this.peekType() !== t.LPAREN) {\n      throw new Error('Missing left parenthesis')\n    }\n\n    this.consume()\n  }\n\n  rparen() {\n    if (this.peekType() !== t.RPAREN) {\n      throw new Error('Missing right parenthesis')\n    }\n\n    this.consume()\n  }\n\n  unaryOp() {\n    if (![t.PLUS, t.MINUS].includes(this.peekType())) {\n      throw new Error('Missing unary operator')\n    }\n\n    const curr = this.curr\n    this.consume()\n    const node = new UnaryOp(curr, this.factor())\n    return node\n  }\n\n  consume() {\n    if (this.index < this.tokens.length - 1) {\n      this.index++\n      this.curr = this.tokens[this.index]\n    } else {\n      this.curr = null\n    }\n  }\n\n  peekType() {\n    return this.curr && this.curr.type\n  }\n}\n\nexport default Parser\n","import { Lexer } from './Lexer'\nimport { parseLocation } from '~/library/utils'\nimport graph from '~/formulas/graph'\nimport Parser from './Parser'\nimport ReduxConnect from './ReduxConnect'\n\n\nconst ERR_DIVISION_BY_ZERO = '#DIV/0!'\nconst ERR_CIRCULAR_REFERENCE = '#REF!'\nconst ERR_GENERIC = '#ERROR!'\n\nclass Interpreter {\n  constructor(location) {\n    this.location = location\n    this.error = null\n    this.cache = {}\n    this.result = null\n    this.state = new ReduxConnect()\n  }\n\n  interpret(input) {\n    const vertex = graph.addVertex(this.location, input)\n    let lexer, parser\n\n    try {\n      lexer = new Lexer(input)\n      parser = new Parser( lexer.getTokens() )\n      vertex.ast = parser.parse()\n      graph.recalculate(this.location)\n      this.result = vertex.result\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      return this.result\n    }\n\n    this.error = vertex.error\n    return this.result\n  }\n\n  visit(location) {\n    const vertex = graph.getVertex(location)\n\n    if (graph.isResolved(location)) {\n      return vertex.result\n    }\n\n    graph.markVisited(location)\n\n    if (!vertex.ast) {\n      return vertex.result\n    }\n\n    try {\n      this.result = vertex.result = this._visit(vertex.ast)\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      throw error\n    }\n\n    return this.result\n  }\n\n  _visit(node) {\n    switch (node._name) {\n      case 'NumberNode':\n        return this.NumberNode(node)\n      case 'CellNode':\n        return this.CellNode(node)\n      case 'TextNode':\n        return this.TextNode(node)\n      case 'FuncOp':\n        return this.FuncOp(node)\n      case 'BinaryOp':\n        return this.BinaryOp(node)\n      case 'UnaryOp':\n        return this.UnaryOp(node)\n      default:\n        const nodeName = node._name || (node.constructor || {}).name\n        throw new Error(`Unrecognized AST node ${nodeName}`)\n    }\n  }\n\n  TextNode(node) {\n    return node.eval()\n  }\n\n  NumberNode(node) {\n    return node.eval()\n  }\n\n  CellNode(node) {\n    const otherLocation = node.location\n    let result\n\n    if (!this.isLocationValid(otherLocation)) {\n      throw new Error('Location out of bounds')\n    }\n\n    if (this.cache[otherLocation] !== undefined) {\n      return this.cache[otherLocation]\n    }\n\n    if (graph.isVisited(otherLocation)) {\n      throw new Error('Circular reference')\n    }\n\n    result = this.dfsCellVisit(otherLocation)\n    this.cache[otherLocation] = result\n    return result\n  }\n\n  UnaryOp(node) {\n    const result = this._visit(node.expr)\n    return node.eval(result)\n  }\n\n  FuncOp(node) {\n    const evaluatedArgs = []\n\n    for (let childNode of node.argNodes) {\n      const result = this._visit(childNode)\n      evaluatedArgs.push(result)\n    }\n\n    return node.eval(evaluatedArgs)\n  }\n\n  BinaryOp(node) {\n    const left = this._visit(node.leftNode)\n    const right = this._visit(node.rightNode)\n    return node.eval(left, right)\n  }\n\n  isLocationValid(location) {\n    const [colIndex, rowIndex] = parseLocation(location)\n\n    if (Math.min(colIndex, rowIndex) < 0) { return false }\n    if (colIndex >= this.state.columns) { return false }\n    if (rowIndex >= this.state.rows) { return false }\n    return true\n  }\n\n  dfsCellVisit(otherLocation) {\n    const interpreter = new Interpreter(otherLocation)\n    let result = 0\n\n    // cell has a value\n    if (graph.hasVertex(otherLocation)) {\n      result = interpreter.visit(otherLocation)\n    }\n\n    return result\n  }\n\n  errorResponse() {\n    const { message: errorMsg } = this.error\n\n    if (errorMsg.match(/division by zero/i)) {\n      return ERR_DIVISION_BY_ZERO\n    } else if (errorMsg.match(/circular reference/i)) {\n      return ERR_CIRCULAR_REFERENCE\n    } else {\n      return ERR_GENERIC\n    }\n  }\n}\n\nexport default Interpreter\nexport {\n  ERR_DIVISION_BY_ZERO,\n  ERR_CIRCULAR_REFERENCE,\n  ERR_GENERIC,\n}\n","import ReduxConnect from './ReduxConnect'\nimport Interpreter from './Interpreter'\n\n\nclass Vertex {\n  constructor(entered) {\n    this.entered = entered\n    this.error = null\n    this.result = null\n    this.ast = null\n  }\n}\n\nclass Graph {\n  constructor() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  interpret(location, input) {\n    const interpreter = new Interpreter(location)\n    return interpreter.interpret(input)\n  }\n\n  recalculate(initLocation) {\n    this.setPendingNodes()\n    this.dfs(initLocation)\n    this.updateStore()\n  }\n\n  getCellResult(location) {\n    if (this.hasVertex(location)) {\n      return this.getVertex(location).result\n    } else {\n      return ''\n    }\n  }\n\n  setPendingNodes() {\n    this.pending = new Set()\n\n    Object.keys(this.adj).forEach(vertex => {\n      this.pending.add(vertex)\n    })\n  }\n\n  isResolved(location) {\n    return this.isVisited(location) || !this.isPending(location)\n  }\n\n  isVisited(location) {\n    return this.visited.has(location)\n  }\n\n  isPending(location) {\n    return this.pending.has(location)\n  }\n\n  dfs(location) {\n    while (this.pending.size > 0) {\n      let interpreter\n      this.visited = new Set()\n\n      if (!location) {\n        location = [...this.pending][0]\n      }\n\n      try {\n        interpreter = new Interpreter(location)\n        interpreter.visit(location)\n      } catch (error) {}\n\n      this.visited.forEach(location => this.pending.delete(location))\n      location = null\n    }\n  }\n\n  updateStore() {\n    const locationKeys = new Set(this.store.locations)\n\n    for (let [location, vertex] of Object.entries(this.adj)) {\n      const { entered, result } = vertex\n\n      locationKeys.delete(location)\n\n      if (result !== this.store.getCellResult(location)) {\n        this.store.replaceCellData(location, entered, result)\n      }\n    }\n\n    for (let location of locationKeys) {\n      this.store.clearCell(location)\n    }\n  }\n\n  markVisited(location) {\n    return this.visited.add(location)\n  }\n\n  addVertex(location, entered) {\n    const vertex = new Vertex(entered)\n    this.adj[location] = vertex\n    return vertex\n  }\n\n  hasVertex(location) {\n    return location in this.adj\n  }\n\n  getVertex(location) {\n    this.testMissingLocation(location)\n    return this.adj[location]\n  }\n\n  delVertex(location) {\n    if (location in this.adj) {\n      delete this.adj[location]\n      this.recalculate()\n    }\n  }\n\n  resetAll() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  testMissingLocation(location) {\n    if (!this.hasVertex(location)) {\n      throw new Error('Missing location')\n    }\n  }\n}\n\nconst graph = new Graph()\n\n\nexport default graph\nexport {\n  Vertex,\n  Graph,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\n\nimport { setCellData, clearCellData } from '~/actions/tableActions'\n\n\nconst Input = styled.input`\n  display: flex;\n  align-items: center;\n  outline: none;\n  height: 100%;\n  width: 100%;\n  border: 2px solid salmon;\n  padding: 2px;\n  box-sizing: border-box;\n`\n\nexport class InputData extends React.PureComponent {\n  static propTypes = {\n    // props\n    replaceValue: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired,\n    onEscape: PropTypes.func.isRequired,\n    onCommit: PropTypes.func.isRequired,\n    // redux\n    clearCellData: PropTypes.func.isRequired,\n    entered: PropTypes.string,\n    setCellData: PropTypes.func.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n  }\n\n  refInput = React.createRef()\n\n  componentDidMount() {\n    this.focusInputTag()\n  }\n\n  focusInputTag() {\n    const input = this.refInput.current\n    input.focus()\n    input.scrollLeft = input.scrollWidth\n  }\n\n  setNewValue(inputValue) {\n    const { location } = this.props\n\n    if (this.isWhitespace(inputValue)) {\n      this.props.clearCellData(location)\n      return\n    }\n\n    this.props.setCellData(location, inputValue)\n  }\n\n  handleOnKeyDown(event) {\n    const { key } = event\n\n    if (key === 'Escape') {\n      this.props.onEscape()\n    } else if (key === 'Enter') {\n      this.setNewValue(event.target.value)\n      this.props.onCommit()\n    } else {\n      event.stopPropagation()\n    }\n  }\n\n  handleOnBlur(event) {\n    this.setNewValue(event.target.value)\n    this.props.onCommit()\n  }\n\n  isWhitespace(text) {\n    return text.length === 0 || Boolean(text.match(/^\\s+$/))\n  }\n\n  render() {\n    const defaultValue = this.props.replaceValue ? null : this.props.entered\n\n    return (\n      <Input\n        ref={this.refInput}\n        data-cell='input'\n        data-location={this.props.location}\n        defaultValue={defaultValue}\n        onKeyDown={this.handleOnKeyDown}\n        onBlur={this.handleOnBlur}\n      />\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const entered = cell ? cell.entered : ''\n  return { entered }\n}\n\nconst mapDispatchToProps = { setCellData, clearCellData }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputData)\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { clearCellData } from '~/actions/tableActions'\nimport { setActiveCell } from '~/actions/globalActions'\n\n\nconst DataTag = styled.div`\n  display: flex;\n  align-items: center;\n  outline: none;\n  border: 2px solid transparent;\n  line-height: 1.1em;\n  height: 100%;\n  width: 100%;\n  padding: 2px;\n\n  :focus {\n    border: 2px solid salmon;\n  }\n`\n\nexport class ResultData extends React.PureComponent {\n  static propTypes = {\n    // props\n    isFocused: PropTypes.bool,\n    location: PropTypes.string.isRequired,\n    onDoubleClick: PropTypes.func.isRequired,\n    onKeyDownEditable: PropTypes.func.isRequired,\n    // redux\n    clearCellData: PropTypes.func.isRequired,\n    setActiveCell: PropTypes.func.isRequired,\n    result: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n  }\n\n  refDataTag = React.createRef()\n\n  componentDidMount() {\n    this.focusDataTag()\n  }\n\n  focusDataTag() {\n    if (this.props.isFocused) { this.refDataTag.current.focus() }\n  }\n\n  handleOnKeyDown({ key }) {\n    this.props.setActiveCell(this.props.location)\n\n    if (['Delete', 'Backspace'].includes(key)) {\n      const valueStr = '' + this.props.result\n\n      if (valueStr.length > 0) {\n        this.props.clearCellData(this.props.location)\n      }\n      // key pressed is a printable symbol, ex: 'a', '1', ','\n      // can be further refined, but for now it's fine\n    } else if (key.length === 1) {\n      this.props.onKeyDownEditable()\n    }\n  }\n\n  getStyle() {\n    let style = {}\n\n    if (typeof this.props.result === 'number') {\n      style = {\n        whiteSpace: 'nowrap',\n        textOverflow: 'clip',\n        overflow: 'hidden',\n      }\n    }\n\n    return style\n  }\n\n  render() {\n    return (\n      <DataTag\n        ref={this.refDataTag}\n        data-cell='result'\n        data-location={this.props.location}\n        css={this.getStyle()}\n        tabIndex='0'\n        onKeyDown={this.handleOnKeyDown}\n        onDoubleClick={this.props.onDoubleClick}\n      >\n        {this.props.result}\n      </DataTag>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const result = cell ? cell.result : ''\n  return { result }\n}\n\nconst mapDispatchToProps = { clearCellData, setActiveCell }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultData)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { interpret } from 'xstate'\n\nimport displayMachine from './displayMachine'\nimport InputData from './InputData'\nimport ResultData from './ResultData'\n\n\nconst Wrapper = styled.div`\n  cursor: cell;\n  font-size: 13px;\n  border-right: 1px solid ${props => props.theme.colors.cell.border};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.border};\n`\nclass CellData extends React.PureComponent {\n  static propTypes = {\n    location: PropTypes.string.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.resultOnDoubleClick = this.resultOnDoubleClick.bind(this)\n    this.resultOnKeyDownEditable = this.resultOnKeyDownEditable.bind(this)\n    this.inputOnEscape = this.inputOnEscape.bind(this)\n    this.inputOnCommit = this.inputOnCommit.bind(this)\n  }\n\n  state = {\n    displayState: displayMachine.initialState,\n  }\n\n  displayService = interpret(displayMachine)\n    .onTransition(displayState => this.setState({ displayState }))\n\n  componentDidMount() {\n    this.displayService.start()\n  }\n  \n  componentWillUnmount() {\n    this.displayService.stop()\n  }\n  \n  resultOnDoubleClick() {\n    this.displayService.send('EDITABLE_MODIFY')\n  }\n\n  resultOnKeyDownEditable() {\n    this.displayService.send('EDITABLE_REPLACE')\n  }\n\n  inputOnEscape() {\n    this.displayService.send('STATIC_FOCUSED')\n  }\n\n  inputOnCommit() {\n    this.displayService.send('STATIC')\n  }\n\n  renderData() {\n    const { displayState } = this.state\n\n    if (displayState.matches('editable')) {\n      return (\n        <InputData\n          replaceValue={displayState.matches('editable.replace')}\n          location={this.props.location}\n          onEscape={this.inputOnEscape}\n          onCommit={this.inputOnCommit}\n        />\n      )\n    } else {\n      return (\n        <ResultData\n          location={this.props.location}\n          onDoubleClick={this.resultOnDoubleClick}\n          onKeyDownEditable={this.resultOnKeyDownEditable}\n          isFocused={displayState.matches('static.focused')}\n        />\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Wrapper\n        className='row-label-height col-label-width'\n      >\n        {this.renderData()}\n      </Wrapper>\n    )\n  }\n}\n\nexport default CellData\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport RowLabel from '../cells/RowLabel'\nimport CellData from '../cells/CellData'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nfunction DataRow({ rowNumber, colLabels, activeCell }) {\n  const dataCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => {\n      const location = `${colLabels[i]}-${rowNumber}`\n\n      return (\n        <CellData\n          key={i}\n          isActive={activeCell === location}\n          location={location}\n        />\n      )\n    })\n  )\n\n  return (\n    <Row\n      data-row={rowNumber}\n    >\n      <RowLabel\n        label={rowNumber}\n      />\n      {dataCells()}\n    </Row>\n  )\n}\n\nDataRow.propTypes = {\n  rowNumber: PropTypes.number,\n  colLabels: PropTypes.arrayOf(PropTypes.string),\n  activeCell: PropTypes.string,\n}\n\nexport default DataRow\n\n","import { Machine, assign } from 'xstate'\n\nimport { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nfunction getTargetLocation({ rows, columns, rowIndex, colIndex, key }) {\n  switch (key) {\n    case 'ArrowUp':\n      rowIndex = Math.max(0, rowIndex - 1)\n      break\n    case 'ArrowRight':\n      colIndex = Math.min(columns - 1, colIndex + 1)\n      break\n    case 'ArrowDown':\n    case 'Enter':\n      rowIndex = Math.min(rows - 1, rowIndex + 1)\n      break\n    case 'ArrowLeft':\n      colIndex = Math.max(0, colIndex - 1)\n      break\n    default:\n      return null\n  }\n\n  const colLabel = getColumnLabel(colIndex)\n  const rowLabel = '' + (rowIndex + 1)\n\n  return `${colLabel}-${rowLabel}`\n}\n\nfunction focusTargetCell(ctx) {\n  if (!ctx.endLocation) { return Promise.resolve(false) }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const id = `[data-location=\"${ctx.endLocation}\"]`\n      const cell = document.querySelector(id)\n      if (cell) { cell.focus() }\n      resolve(true)\n    }, 0)\n  })\n}\n\nconst state = {\n  id: 'keyboardNav',\n  initial: 'idle',\n  context: {\n    columns: null,\n    rows: null,\n    key: null,\n    colIndex: null,\n    rowIndex: null,\n    endLocation: null,\n    wasFocused: false,\n  },\n  states: {\n    idle: {\n      on: {\n        'MOVE_FOCUS': {\n          actions: ['setNewContext', 'calcTargetLocation'],\n          target: 'focusTarget',\n        }\n      }\n    },\n    focusTarget: {\n      invoke: {\n        src: focusTargetCell,\n        onDone: {\n          actions: assign({ wasFocused: (ctx, event) => event.data }),\n          target: 'idle',\n        },\n      },\n    },\n  },\n}\n\nconst actions = {\n  actions: {\n    setNewContext: assign((ctx, { key, location }) => {\n      const [colIndex, rowIndex] = parseLocation(location)\n      return { colIndex, rowIndex, key }\n    }),\n    calcTargetLocation: assign({\n      endLocation: (ctx) => {\n        return getTargetLocation(ctx)\n      }\n    }),\n  },\n}\n\nfunction getKeyboardNavMachine(rows, columns) {\n  const newContext = {\n    ...state.context,\n    columns,\n    rows,\n  }\n\n  return Machine(state, actions, newContext)\n}\n\nexport {\n  state,\n  actions,\n  getTargetLocation,\n  focusTargetCell,\n}\n\nexport default getKeyboardNavMachine\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport { interpret } from 'xstate'\n\nimport ColLabelRow from './ColLabelRow'\nimport DataRow from './DataRow'\nimport { getColumnNames } from '~/library/utils'\nimport getKeyboardNavMachine from './keyboardNavMachine'\n\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n  border-top: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-left: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .row-label-width {\n    width: 34px;\n  }\n\n  .row-label-height {\n    min-height: 28px;\n  }\n\n  .col-label-width {\n    width: 140px;\n  }\n\n  .col-label-height {\n    min-height: 26px;\n  }\n`\n\nexport class Table extends React.PureComponent {\n  static propTypes = {\n    activeCell: PropTypes.string,\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleTableOnClick = this.handleTableOnClick.bind(this)\n    this.handleTableOnKeyDown = this.handleTableOnKeyDown.bind(this)\n    this.colLabels = getColumnNames(props.columns)\n  }\n\n  keyboardNavMachine = getKeyboardNavMachine(this.props.rows, this.props.columns)\n  focusService = interpret(this.keyboardNavMachine)\n\n  componentDidMount() {\n    this.focusService.start()\n  }\n\n  componentWillUnmount() {\n    this.focusService.stop()\n  }\n\n  handleTableOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleTableOnKeyDown(event) {\n    event.stopPropagation()\n    this.moveFocus(event.key, event.target.dataset.location)\n  }\n\n  moveFocus(key, location) {\n    this.focusService.send({ type: 'MOVE_FOCUS', key, location })\n  }\n\n  renderColLabelRow(i) {\n    return (\n      <ColLabelRow\n        key={i}\n        rows={this.props.rows}\n        colLabels={this.colLabels}\n      />\n    )\n  }\n\n  renderDataRows(rowNumber) {\n    return (\n      <DataRow\n      key={rowNumber}\n        rowNumber={rowNumber}\n        colLabels={this.colLabels}\n        activeCell={this.props.activeCell}\n      />\n    )\n  }\n\n  renderRows() {\n    return new Array(this.props.rows + 1).fill(0).map((_, i) => {\n      if (i === 0) {\n        return this.renderColLabelRow(i)\n      } else {\n        return this.renderDataRows(i)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Grid\n        data-table='app'\n        onClick={this.handleTableOnClick}\n        onKeyDown={this.handleTableOnKeyDown}\n      >\n        {this.renderRows()}\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { activeCell, rows, columns } = state.global\n  return { activeCell, rows, columns }\n}\n\nexport default connect(mapStateToProps)(Table)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\n\nimport { setActiveCell } from './actions/globalActions'\nimport Header from './components/header/Header'\nimport Table from './components/table/Table'\n\n\nconst Container = styled.div`\n  display: grid;\n  grid:\n    \"left-blank main right-blank\" 100vh\n    / auto minmax(auto, 1000px) auto;\n`\n\nconst Main = styled.main`\n  grid-area: main;\n`\n\nfunction App({ setActiveCell }) {\n  const handleOnClick = () => {\n    setActiveCell(null)\n  }\n\n  return (\n    <Container\n      onClick={handleOnClick}\n    >\n      <Main>\n        <Header />\n        <Table />\n      </Main>\n    </Container>\n  )\n}\n\nApp.propTypes = {\n  setActiveCell: PropTypes.func,\n}\n\nconst mapDispatchToProps = { setActiveCell }\n\nexport default connect(null, mapDispatchToProps)(App)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from 'emotion-theming'\nimport { Global } from '@emotion/core'\nimport 'sanitize.css'\n\nimport appStore from './reducers/'\nimport globalStyles from './styles/globalStyles'\nimport theme from './styles/theme'\nimport App from './App'\n\n\nfunction Root() {\n  return (\n    <Provider store={appStore}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Global styles={globalStyles} />\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default Root\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
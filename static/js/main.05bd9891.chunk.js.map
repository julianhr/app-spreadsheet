{"version":3,"sources":["library/utils.js","library/constants.js","formulas/TokenSanitizer.js","formulas/LexerRule.js","formulas/Lexer.js","formulas/formulaFunctions.js","formulas/Token.js","components/cellInputter/InputContext.js","reducers/globalReducer.js","reducers/tableDataReducer.js","reducers/tableMetaReducer.js","reducers/index.js","actions/globalActions.js","formulas/ReduxConnect.js","formulas/ast.js","formulas/Parser.js","formulas/Interpreter.js","formulas/graph.js","actions/tableDataActions.js","components/cellInputter/CellInputter.jsx","components/cellInputter/FuncDescription.jsx","library/InteractiveListItem.jsx","library/InteractiveList.jsx","components/cellInputter/FuncSelector.jsx","components/cellInputter/Suggestions.jsx","styles/theme.js","styles/globalStyles.js","components/header/Header.jsx","components/cell/ColHeader.jsx","actions/tableMetaActions.js","components/table/ColHeaderRow.jsx","components/cell/RowHeader.jsx","components/cell/CellResult.jsx","components/table/DataRow.jsx","components/table/keyboardNavMachine.js","components/table/Table.jsx","App.jsx","Root.jsx","serviceWorker.js","index.js"],"names":["BASE_CODE_POINT","codePointAt","clamp","value","min","max","Math","getColumnNames","cols","names","prevNames","remainCols","newNames","outerLoop","_i","_prevNames","length","colName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","letter","push","concat","err","return","Object","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getColumnLabel","num","label","basePoint","curr","codePoint","String","fromCodePoint","floor","reverse","join","parseLocation","location","_location$split","split","_location$split2","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","col","row","reduce","prev","charCodeAt","isNumber","numStr","isPeriodsAndDigits","Boolean","match","periodCount","debounce","time","fn","timeout","apply","arguments","setTimeout","clearTimeout","__webpack_require__","d","__webpack_exports__","DEFAULT_COL_WIDTH","MIN_COL_WIDTH","MAX_COL_WIDTH","TokenSanitizer","tokens","classCallCheck","this","_this","map","token","type","t","NUMBER","number","CELL","cell","FUNCTION","function","STRING","string","text","parseFloat","UNKNOWN","getCellLabel","getFunction","slice","index","toUpperCase","fnName","fnNode","formulaFuncs","LexerRule","regex","groupIndex","category","lastIndex","input","exec","TOKENS","EOF","EQUALS","COMMA","COLON","LPAREN","RPAREN","PLUS","MINUS","MULT","DIV","TEXT","GRAMMAR","Lexer","char","initChar","markers","nextToken","sanitizer","sanitize","Token","isFormula","tokenTEXTorNUMBER","whitespaceLen","getWhitespaceLen","_GRAMMAR","rule","setIndex","test","consume","tokenUNKNOWN","whitespace","chars","isEOF","isSeparator","isWhitespace","count","testArgsAllNumbers","args","forEach","arg","TypeError","Fn","AVERAGE","_Fn$SUM","_Fn$COUNT","Error","SUM","COUNT","definition","example","summary","CONCAT","_len","Array","_key","MAX","_len2","_key2","MIN","_len3","_key3","POWER","_len4","_key4","base","exp","pow","SQRT","_len5","_key5","sqrt","_len6","_key6","AVG","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","POW","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","html","InputContext","react__WEBPACK_IMPORTED_MODULE_0__","n","React","createContext","createReducer","activeCell","cellInputter","rows","columns","SET_ACTIVE_CELL","state","_ref","payload","SET_CELL_INPUTTER","_ref2","UNSET_CELL_INPUTTER","SET_CELL_DATA","data","DELETE_CELL_DATA","colWidths","SET_COL_WIDTH","colLabel","width","objectSpread","defineProperty","appStore","configureStore","reducer","global","globalReducer","tableData","tableDataReducer","tableMeta","tableMetaReducer","setActiveCell","displayCellInputter","closeCellInputter","redux_starter_kit__WEBPACK_IMPORTED_MODULE_0__","createAction","ReduxConnect","store","globalState","getState","result","entered","dispatch","replaceCellData","clearCellData","keys","AST","name","_name","TextNode","textNode","possibleConstructorReturn","getPrototypeOf","call","node","StringNode","_this2","NumberNode","_this3","CellNode","_this4","CellRange","leftCell","rightCell","_this5","UnaryOp","opNode","expr","_this6","evaluatedExpr","FuncOp","funcNode","argNodes","_this7","evaluatedArgs","toConsumableArray","BinaryOp","leftNode","rightNode","_this8","left","right","Parser","ast","peekType","equals","operator","term","includes","factor","enclosedExpr","unaryOp","func","lparen","rparen","isCellRange","_this$invertCellRange","invertCellRange","_this$invertCellRange2","slicedToArray","temp","list","listNode","cellRange","DQUOTE","stepsAhead","Interpreter","error","cache","lexer","parser","vertex","graph","addVertex","getTokens","parse","recalculate","errorResponse","getVertex","visitNode","nodeName","constructor","eval","getCellResult","_parseLocation","_parseLocation2","leftColIndex","leftRowIndex","_parseLocation3","_parseLocation4","rightColIndex","rightRowIndex","colIndexStart","colIndexEnd","rowIndexStart","rowIndexEnd","rowI","colI","otherLocation","isLocationValid","visitCell","childNode","_parseLocation5","_parseLocation6","colIndex","rowIndex","errorMsg","message","Vertex","Graph","adj","pending","visited","setPendingNodes","dfs","updateStore","Set","add","size","visitAST","delete","hasVertex","testPathCycle","has","locationKeys","locations","_Object$entries","entries","_ref3","clearCell","testMissingLocation","setCellData","interpret","delVertex","Promise","resolve","tableDataActions_replaceCellData","Root","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_8__","target","styles","Input","props","theme","colors","shadow","HiddenInput","CellInputter","_React$PureComponent","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","isFuncSelectorVisible","inputValue","keyEvent","key","cursorPos","refInput","createRef","refHiddenInput","handleOnKeyDown","bind","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","handleOnBlur","handleOnChange","setIsFuncSelectorVisible","setInputValue","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_7__","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","willReplaceValue","focusInputTag","prevProps","prevState","setFocus","keyActions","tokenizeInputValue","setState","current","selectionEnd","setCellValue","inputEl","setImmediate","focus","selectionStart","el","elId","nextRowIndex","rowLabel","endLocation","document","querySelector","activeElement","cellValue","event","preventDefault","height","_this$props$cellRect","cellRect","top","cellWidth","cellHeight","hiddenInputEl","textWidth","scrollWidth","getBoundingClientRect","_this$props$cellRect2","_emotion_core__WEBPACK_IMPORTED_MODULE_10__","_InputContext__WEBPACK_IMPORTED_MODULE_16__","Provider","inputRect","css","getRootStyle","ref","defaultValue","_emotion_css__WEBPACK_IMPORTED_MODULE_0__","data-cell","data-location","onChange","onKeyDown","onBlur","_Suggestions__WEBPACK_IMPORTED_MODULE_15__","PureComponent","mapDispatchToProps","connect","_state$global","_state$global$cellInp","styled_base_browser_esm","dropdown","normal","active","Pre","Subtitle","P","Hr","FuncDescription","currScope","_this$props","fnScopes","scope","startIndex","endIndex","getFnScope","context","bottom","getFnNode","core_browser_esm","css_browser_esm","FuncDescription_ref","contextType","Li","DropdownItem","item","isActive","onMouseEnter","tabIndex","defaultProps","Ul","InteractiveList","items","react_default","a","createElement","InteractiveListItem","style","li","ul","renderListItems","propsTypes","PropTypes","array","isRequired","shape","object","Dialog","baseItemStyle","ItemBaseRoot","ItemActiveRoot","FuncSelector","listItems","itemIndex","isVisible","handleOnClick","assertThisInitialized","setListItems","nextProps","nextState","updateContextData","updateListItems","keyEventSetIndex","updateInputValue","currInputValue","rightChunkIndex","leftChunk","rightChunk","newInputValue","filter","startsWith","sort","itemBase","itemActive","FuncSelector_Pre","FuncSelector_Subtitle","marginTop","boxShadow","border","_this$state","open","onClick","library_InteractiveList","round","getListStyles","Component","withTheme","Suggestions","setFnScopes","stack","pop","b","getCurrTokenIndex","_this$getCompareToken","getCompareTokens","_this$getCompareToken2","tokenBefore","tokenCurr","tokenAfter","option1","option2","cellInputter_FuncSelector","renderedFuncSelector","getFuncSelector","cellInputter_FuncDescription","breaks","xs","sm","md","lg","breakBump","queries","from","breakPoint","upTo","borderDark","labelBkg","primary","strong","live","field","background","globalStyles","Header","InnerBorder","BtnWidth","ColHeader","pageX","btnRight","isResizing","debSetColWidth","delta","handleBtnWidthOnMouseDown","handleDocumentMouseMove","handleDocumentMouseUp","newRight","minRight","setColWidthDelta","removeEventListener","addEventListener","data-col","className","getBtnWidthStyle","onMouseDown","onMouseMove","handleBtnWidthOnMouseMove","onMouseUp","handleBtnWidthOnMouseUp","ownProps","Row","ColHeaderRow","colLabels","data-row","ColHeaderRow_InnerBorder","fill","_","i","cell_ColHeader","Wrapper","RowHeader","Cell","ResultCell","refCell","handleCellOnKeyDown","handleCellOnDoubleClick","handleCellOnClick","handleWrapperOnClick","inherits","createClass","cellDomRect","JSON","stringify","whiteSpace","textOverflow","overflow","stopPropagation","CellResult_Wrapper","getStyle","onDoubleClick","_ownProps$location$sp","_ownProps$location$sp2","DataRow","rowNumber","DataRow_Row","cell_RowHeader","CellResult","id","initial","wasFocused","states","idle","on","MOVE_FOCUS","actions","focusTarget","invoke","src","ctx","onDone","assign","setNewContext","calcTargetLocation","getTargetLocation","getKeyboardNavMachine","newContext","Machine","Grid","Table","keyboardNavMachine","focusService","handleTableOnClick","handleTableOnKeyDown","start","stop","dataset","moveFocus","send","table_ColHeaderRow","table_DataRow","renderColHeaderRow","renderDataRows","data-table","renderRows","Container","Main","data-dummy-focus-stop","header_Header","table_Table","es","react_router_dom","emotion_theming_browser_esm","src_App","window","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05bd9891.chunk.js","sourcesContent":["const BASE_CODE_POINT = 'A'.codePointAt(0)\n\nexport function buildUrl(baseUrl, query={}) {\n  const urlQuery = Object.entries(query).map(([key, val]) => `${key}=${val}`).join('&')\n  return [baseUrl.trim(), urlQuery].join('?')\n}\n\nexport function clamp(value, min, max) {\n  return Math.min( Math.max(value, min), max )\n}\n\nexport function getRangeArray(min, max, isString=false) {\n  const range = []\n\n  for (let num = min; num <= max; num++) {\n    range.push( isString ? num.toString() : num )\n  }\n\n  return range\n}\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms))\n\nexport function getColumnNames(cols) {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let names = []\n  let prevNames = ['']\n  let remainCols = cols\n\n  while (remainCols > 0) {\n    const newNames = []\n\n    outerLoop:\n    for (let colName of prevNames) {  \n      for (let letter of alphabet) {\n        if (remainCols === 0)  { break outerLoop }\n        newNames.push(`${colName}${letter}`)\n        remainCols -= 1\n      }\n    }\n\n    prevNames = newNames\n    names = [...names, ...newNames]\n  }\n\n  return names\n}\n\nexport function getCellNames(rows, cols) {\n  const names = []\n  let colNames = getColumnNames(cols)\n\n  for (let row=1; row <= rows; row++) {\n    for (let col of colNames) {\n      names.push(`${col}-${row}`)\n    }\n  }\n\n  return names\n}\n\nexport function getColumnPosition(colLabel) {\n  const letters = colLabel.split('')\n  const oneBase = letters.reduce((prev, letter) => (\n    prev * 26 + letter.charCodeAt(0) - BASE_CODE_POINT + 1\n  ), 0)\n\n  return oneBase - 1\n}\n\nexport function getColumnLabel(num) {\n  const label = []\n  const basePoint = BASE_CODE_POINT\n  let curr = num + 1\n\n  do {\n    curr -= 1\n    const letterPosition = curr % 26\n    const codePoint = basePoint + letterPosition\n    const letter = String.fromCodePoint(codePoint)\n    label.push(letter)\n\n    curr = Math.floor(curr / 26)\n  } while (curr > 0)\n\n  return label.reverse().join('')\n}\n\nexport function parseLocation(location) {\n  let [col, row] = location.split('-')\n  const colIndex = getColumnPosition(col)\n  const rowIndex = +row - 1\n\n  return [colIndex, rowIndex]\n}\n\nexport function isNumber(numStr) {\n  const isPeriodsAndDigits = Boolean(numStr.match(/^[.\\d]+$/))\n  const periodCount = (numStr.match(/\\./g) || []).length\n\n  if (!isPeriodsAndDigits) { return false }\n  if (periodCount > 1) { return false }\n  if (numStr.length === 1 && numStr[0] === '.') { return false }\n  return true\n}\n\nexport function debounce(time, fn) {\n  let timeout\n\n  return (...args) => {\n    if (timeout) { return }\n\n    fn(...args)\n\n    timeout = setTimeout(() => {\n      clearTimeout(timeout)\n      timeout = null\n    }, time)\n  }\n}\n\n","export const DEFAULT_COL_WIDTH = 140\nexport const MIN_COL_WIDTH = 12\nexport const MAX_COL_WIDTH = 1000\n\n","import { TOKENS as t } from './Lexer'\nimport formulaFuncs from './formulaFunctions'\nimport { isNumber } from '~/library/utils'\n\n\nclass TokenSanitizer {\n  constructor(tokens) {\n    this.tokens = tokens\n  }\n\n  sanitize() {\n    return this.tokens.map(token => {\n      switch(token.type) {\n        case t.NUMBER:\n          return this.number(token)\n        case t.CELL:\n          return this.cell(token)\n        case t.FUNCTION:\n          return this.function(token)\n        case t.STRING:\n          return this.string(token)\n        default:\n          return token\n      }\n    })\n  }\n\n  number(token) {\n    if (!isNumber(token.text)) {\n      token.type = t.UNKNOWN\n      return token\n    }\n\n    token.value = parseFloat(token.text)\n    return token\n  }\n\n  cell(token) {\n    token.value = this.getCellLabel(token)\n    return token\n  }\n\n  function(token) {\n    const fn = this.getFunction(token)\n    \n    if (fn) {\n      token.value = fn\n    } else {\n      token.type = t.UNKNOWN\n    }\n\n    return token\n  }\n\n  string(token) {\n    token.value = token.text.slice(1, -1)\n    return token\n  }\n\n  getCellLabel(token) {\n    const { text } = token\n    const { index } = text.match(/\\d+/)\n    const col = text.slice(0, index).toUpperCase()\n    const row = text.slice(index)\n    return `${col}-${row}`\n  }\n\n  getFunction(token) {\n    const fnName = token.text.toUpperCase()\n    const fnNode = formulaFuncs[fnName]\n    return fnNode && fnNode.fn\n  }\n}\n\nexport default TokenSanitizer\n","class LexerRule {\n  constructor(regex, groupIndex, token, category) {\n    this.regex = regex\n    this.groupIndex = groupIndex\n    this.token = token\n    this.category = category\n  }\n\n  setIndex(index) {\n    this.regex.lastIndex = index\n  }\n\n  test(input) {\n    return this.regex.exec(input)\n  }\n}\n\nexport default LexerRule\n","import Token from './Token'\nimport TokenSanitizer from './TokenSanitizer'\nimport LexerRule from './LexerRule'\nimport { isNumber } from '~/library/utils'\n\n\nconst TOKENS = {\n  // internal\n  EOF: 'EOF',\n  // structure\n  EQUALS: 'EQUALS',\n  COMMA: 'COMMA',\n  COLON: 'COLON',\n  LPAREN: 'LPAREN',\n  RPAREN: 'RPAREN',\n  // operators\n  PLUS: 'PLUS',\n  MINUS: 'MINUS',\n  MULT: 'MULT',\n  DIV: 'DIV',\n  // entities\n  TEXT: 'TEXT',\n  CELL: 'CELL',\n  STRING: 'STRING',\n  NUMBER: 'NUMBER',\n  FUNCTION: 'FUNCTION',\n  UNKNOWN: 'UNKNOWN',\n}\n\nconst t = TOKENS\n\nconst GRAMMAR = [\n  // structure\n  new LexerRule(/=/g, 0, t.EQUALS, 'structure'),\n  new LexerRule(/,/g, 0, t.COMMA, 'structure'),\n  new LexerRule(/:/g, 0, t.COLON, 'structure'),\n  new LexerRule(/\\(/g, 0, t.LPAREN, 'structure'),\n  new LexerRule(/\\)/g, 0, t.RPAREN, 'structure'),\n  // operators\n  new LexerRule(/\\+/g, 0, t.PLUS, 'operator'),\n  new LexerRule(/\\-/g, 0, t.MINUS, 'operator'), // eslint-disable-line\n  new LexerRule(/\\*/g, 0, t.MULT, 'operator'),\n  new LexerRule(/\\//g, 0, t.DIV, 'operator'),\n  // multi-character\n  new LexerRule(/(\"[^\"]+\")/g, 1, t.STRING, 'entity'), // eslint-disable-line\n  new LexerRule(/[\\d\\.]+/g, 0, t.NUMBER, 'entity'), // eslint-disable-line\n  new LexerRule(/[a-z]+[\\d]+/gi, 0, t.CELL, 'entity'),\n  new LexerRule(/([a-z]+)\\(/gi, 1, t.FUNCTION, 'entity'),\n]\n\n\nclass Lexer {\n  constructor(input) {\n    this.input = input\n    this.index = 0\n    this.char = this.initChar(input)\n    this.markers = []\n    this.tokens = []\n  }\n\n  getTokens() {\n    while (this.char !== t.EOF) {\n      const token = this.nextToken()\n      this.tokens.push(token)\n    }\n\n    const sanitizer = new TokenSanitizer(this.tokens)\n    this.tokens = sanitizer.sanitize()\n    return this.tokens\n  }\n\n  nextToken() {\n    if (this.char === t.EOF) {\n      return new Token(t.EOF, t.EOF, 0, 'eof', this.index)\n    }\n\n    if (!this.isFormula()) {\n      return this.tokenTEXTorNUMBER()\n    }\n\n    const whitespaceLen = this.getWhitespaceLen()\n    let token\n\n    for (let rule of GRAMMAR) {\n      rule.setIndex(this.index)\n      const match = rule.test(this.input)\n\n      if (match && match.index === this.index) {\n        const text = match[rule.groupIndex]\n        token = new Token(rule.token, text, whitespaceLen, rule.category, this.index)\n        this.index += text.length - 1\n        this.consume()\n        break\n      }\n    }\n\n    if (!token) {\n      token = this.tokenUNKNOWN(whitespaceLen)\n    }\n\n    return token\n  }\n\n  initChar(input) {\n    if (this.input.length === 0) {\n      this.input = '0'\n      this.index = -1\n    }\n\n    return input[this.index]\n  }\n\n  tokenUNKNOWN(whitespace) {\n    const chars = []\n\n    while (!(this.isEOF() || this.isSeparator() || this.isWhitespace())) {\n      chars.push(this.char)\n      this.consume()\n    }\n\n    const text = chars.join('')\n    return new Token(t.UNKNOWN, text, whitespace, 'entity', this.index - text.length)\n  }\n\n  tokenTEXTorNUMBER() {\n    let token\n\n    if (isNumber(this.input)) {\n      token = new Token(t.NUMBER, this.input, 0, 'entity', this.index)\n    } else {\n      token = new Token(t.TEXT, this.input, 0, 'entity', this.index)\n    }\n\n    this.index = this.input.length - 1\n    this.consume()\n    return token\n  }\n\n  consume() {\n    this.index++\n\n    if (this.index < this.input.length) {\n      this.char = this.input[this.index]\n    } else {\n      this.char = t.EOF\n    }\n  }\n\n  isFormula() {\n    return this.input[0] === '='\n  }\n\n  isEOF() {\n    return this.char === t.EOF\n  }\n\n  isWhitespace() {\n    return !this.isEOF() && Boolean(this.char.match(/\\s/))\n  }\n\n  isSeparator() {\n    return Boolean(this.char.match(/[\\(\\)\\+\\-\\/\\*]/)) // eslint-disable-line\n  }\n\n  getWhitespaceLen() {\n    let count = 0\n\n    while (this.isWhitespace()) {\n      count++\n      this.consume()\n    }\n\n    return count\n  }\n}\n\nexport default Lexer\nexport { GRAMMAR, TOKENS, Lexer }\n","function testArgsAllNumbers(args) {\n  args.forEach(arg => {\n    if (typeof arg !== 'number') {\n      throw new TypeError(`Function argument not a number: ${arg}`)\n    }\n  })\n}\n\nconst Fn = {\n  AVERAGE: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      return Fn.SUM.fn(...args) / Fn.COUNT.fn(...args)\n    },\n    definition: 'AVERAGE(value1, value2, ...)',\n    example: 'AVERAGE(A1:B3, 3)',\n    summary: 'Returns the average from a series of numbers.',\n  },\n\n  CONCAT: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      return args.reduce((prev, curr) => (prev + curr), '')\n    },\n    definition: 'CONCAT(\"text1\", \"text2\", ...)',\n    example: 'CONCAT(\"one\", \"two\")',\n    summary: 'Returns a single concatenated string from a series of strings.',\n  },\n\n  COUNT: {\n    fn: (...args) => args.length,\n    definition: 'COUNT(element1, element2, ...)',\n    example: 'COUNT(A1:B3, 2, C4)',\n    summary: 'Returns the number of non-empty elements in a set.',\n  },\n\n  MAX: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      testArgsAllNumbers(args)\n      return Math.max(...args)\n    },\n    definition: 'MAX(value1, value2, ...)',\n    example: 'MAX(A1:B3, 4, C3)',\n    summary: 'Returns the maximum value from a series of numbers',\n  },\n\n  MIN: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      testArgsAllNumbers(args)\n      return Math.min(...args)\n    },\n    definition: 'MIN(value1, value2, ...)',\n    example: 'MIN(A1:B3, 4, C3)',\n    summary: 'Returns the minimum value from a series of numbers.',\n  },\n\n  POWER: {\n    fn: (...args) => {\n      if (args.length !== 2) {\n        throw new Error('Formula takes only two elements')\n      }\n\n      testArgsAllNumbers(args)\n      const [base, exp] = args\n      return Math.pow(base, exp)\n    },\n    definition: 'POWER(base, exponent)',\n    example: 'POWER(A3,2)',\n    summary: 'Returns a number raised to an exponent.'\n  },\n\n  SQRT: {\n    fn: (...args) => {\n      if (args.length !== 1) {\n        throw new Error(`Formula takes only one element`)\n      }\n\n      testArgsAllNumbers(args)\n      return Math.sqrt(args[0])\n    },\n    definition: 'SQRT(value)',\n    example: 'SQRT(9) or SQRT(A3)',\n    summary: 'Returns the square root of a number.'\n  },\n\n  SUM: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      testArgsAllNumbers(args)\n      return args.reduce((prev, curr) => (curr + prev), 0)\n    },\n    definition: 'SUM(value1, value2, ...)',\n    example: 'SUM(A1:B3, 3, C5)',\n    summary: 'Retuns the sum from a series of numbers.',\n  }\n}\n\n// aliases\nFn.AVG = {\n  ...Fn.AVERAGE,\n  definition: 'AVG(value1, value2, ...)',\n  example: 'AVG(A1:B3, 3)',\n}\n\nFn.POW = {\n  ...Fn.POWER,\n  definition: 'POW(base, exponent)',\n  example: 'POW(A3,2)',\n}\n\nexport default Fn\n","class Token {\n  constructor(type, text, whitespace, category, index) {\n    this.type = type\n    this.category = category\n    this.text = text\n    this.whitespace = whitespace\n    this.index = index\n    this.value = null\n    this.html = null\n  }\n}\n\nexport default Token\n","import React from 'react'\n\n\nexport const InputContext = React.createContext()\n","import { createReducer } from 'redux-starter-kit'\n\nexport const INITIAL_STATE = {\n  activeCell: null,\n  cellInputter: null,\n  rows: 14,\n  columns: 6,\n}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_ACTIVE_CELL': (state, { payload }) => {\n    state.activeCell = payload\n  },\n  'SET_CELL_INPUTTER': (state, { payload }) => {\n    state.cellInputter = payload\n  },\n  'UNSET_CELL_INPUTTER': (state) => {\n    state.cellInputter = null\n  },\n})\n","import { createReducer } from 'redux-starter-kit'\n\n\nconst INITIAL_STATE = {}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_CELL_DATA': (state, { payload }) => {\n    const { location, data } = payload\n    state[location] = data\n  },\n\n  'DELETE_CELL_DATA': (state, { payload }) => {\n    delete state[payload]\n  }\n})\n","import { createReducer } from 'redux-starter-kit'\nimport { DEFAULT_COL_WIDTH } from '~/library/constants'\n\n\nconst INITIAL_STATE = {\n  colWidths: {},\n}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_COL_WIDTH': (state, { payload }) => {\n    const { colLabel, width } = payload\n    const { colWidths } = state\n    \n    if (width === DEFAULT_COL_WIDTH) {\n      delete state.colWidths[colLabel]\n    } else {\n      state.colWidths = { ...colWidths, [colLabel]: width }\n    }\n  },\n})\n","import { configureStore } from 'redux-starter-kit'\n\nimport globalReducer from './globalReducer'\nimport tableDataReducer from './tableDataReducer'\nimport tableMetaReducer from './tableMetaReducer'\n\n\nconst appStoreGen = () => (\n  configureStore({\n    reducer: {\n      global: globalReducer,\n      tableData: tableDataReducer,\n      tableMeta: tableMetaReducer,\n    }\n  })\n)\n\nconst appStore = appStoreGen()\n\n\nexport default appStore\nexport { appStoreGen }\n","import { createAction } from 'redux-starter-kit'\n\n\nexport const setActiveCell = createAction('SET_ACTIVE_CELL')\nexport const displayCellInputter = createAction('SET_CELL_INPUTTER')\nexport const closeCellInputter = createAction('UNSET_CELL_INPUTTER')\n","import appStore from '~/reducers/'\nimport { clearCellData, replaceCellData } from '~/actions/tableDataActions'\n\n\nclass ReduxConnect {\n  constructor(store=appStore) {\n    const { global: globalState } = store.getState()\n    this.store = store\n    this.rows = globalState.rows\n    this.columns = globalState.columns\n  }\n\n  get tableData() {\n    return this.store.getState().tableData\n  }\n\n  get locations() {\n    return Object.keys(this.tableData)\n  }\n\n  getCellResult(location) {\n    const data = this.tableData[location]\n    return data && data.result\n  }\n\n  replaceCellData(location, entered, result) {\n    this.store.dispatch(replaceCellData(location, entered, result))\n  }\n\n  clearCell(location) {\n    this.store.dispatch(clearCellData(location))\n  }\n}\n\nexport default ReduxConnect\nexport { appStore }\n","import { TOKENS as t } from './Lexer'\n\n\nclass AST {\n  constructor(name) {\n    this._name = name\n  }\n\n  eval() {\n    throw new Error('Implement method.')\n  }\n}\n\nclass TextNode extends AST {\n  constructor(textNode) {\n    super('TextNode')\n    this.node = textNode\n  }\n\n  eval() {\n    return this.node.text\n  }\n}\n\nclass StringNode extends AST {\n  constructor(node) {\n    super('StringNode')\n    this.node = node\n  }\n\n  eval() {\n    return this.node.value\n  }\n}\n\nclass NumberNode extends AST {\n  constructor(node) {\n    super('NumberNode')\n    this.node = node\n  }\n\n  eval() {\n    return this.node.value\n  }\n}\n\nclass CellNode extends AST {\n  constructor(token) {\n    super('CellNode')\n    this.cell = token\n  }\n\n  get location() {\n    return this.cell.value\n  }\n}\n\nclass CellRange extends AST {\n  constructor(leftCell, rightCell) {\n    super('CellRange')\n    this.leftCell = leftCell\n    this.rightCell = rightCell\n  }\n}\n\nclass UnaryOp extends AST {\n  constructor(opNode, expr) {\n    super('UnaryOp')\n    this.opNode = opNode\n    this.expr = expr\n  }\n\n  eval(evaluatedExpr) {\n    if (this.opNode.type === t.PLUS) {\n      return evaluatedExpr\n    } else if (this.opNode.type === t.MINUS) {\n      return -evaluatedExpr\n    }\n  }\n}\n\nclass FuncOp extends AST {\n  constructor(funcNode, argNodes) {\n    super('FuncOp')\n    this.funcNode = funcNode\n    this.argNodes = argNodes\n  }\n\n  eval(evaluatedArgs) {\n    const fn = this.funcNode.value\n    return fn(...evaluatedArgs)\n  }\n}\n\nclass BinaryOp extends AST {\n  constructor(leftNode, opNode, rightNode) {\n    super('BinaryOp')\n    this.leftNode = leftNode\n    this.opNode = opNode\n    this.rightNode = rightNode\n  }\n\n  eval(left, right) {\n    switch(this.opNode.type) {\n      case t.PLUS:\n        return left + right\n      case t.MINUS:\n        return left - right\n      case t.DIV:\n        if (right === 0) {\n          throw new Error(`Division by zero: ${left}/${right}`)\n        } else {\n          return left / right\n        }\n      case t.MULT:\n        return left * right\n      default:\n        throw new Error(`Unsupported operator \"${this.token.text}\"`)\n    }\n  }\n}\n\nexport {\n  TextNode,\n  StringNode,\n  NumberNode,\n  CellNode,\n  CellRange,\n  BinaryOp,\n  UnaryOp,\n  FuncOp,\n}\n","import { TOKENS as t } from './Lexer'\nimport {\n  TextNode,\n  StringNode,\n  NumberNode,\n  CellNode,\n  CellRange,\n  BinaryOp,\n  UnaryOp,\n  FuncOp\n} from './ast'\n\n\nclass Parser {\n  constructor(tokens) {\n    this.index = 0\n    this.tokens = tokens\n    this.curr = this.tokens[0]\n    this.ast = null\n  }\n\n  parse() {\n    switch (this.peekType()) {\n      case t.TEXT:\n        this.ast = this.text()\n        break\n      case t.NUMBER:\n        this.ast = this.number()\n        break\n      default:\n        this.equals()\n        this.ast = this.expr()\n        break\n    }\n\n    if (this.curr !== null) {\n      throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n    }\n\n    return this.ast\n  }\n\n  expr() {\n    // expr : term ( ( PLUS | MINUS ) term ) *\n    let node, operator, right\n\n    node = this.term()\n\n    while ( [t.PLUS, t.MINUS].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.term()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  term() {\n    // term : factor ( ( MULT | DIV ) factor ) *\n    let node, operator, right\n\n    node = this.factor()\n\n    while ( [t.MULT, t.DIV].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.factor()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  factor() {\n    // factor : ( PLUS | MINUS ) ( NUMBER | CELL )\n    //          | LPAREN expr RPAREN\n    //          | FUNCTION LPAREN list RPAREN\n    switch (this.peekType()) {\n      case t.LPAREN:\n        return this.enclosedExpr()\n      case t.PLUS:\n      case t.MINUS:\n        return this.unaryOp()\n      case t.NUMBER:\n        return this.number()\n      case t.CELL:\n        return this.cell()\n      case t.FUNCTION:\n        return this.func()\n      case t.RPAREN:\n        throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n      default:\n        throw new Error('Missing factor')\n    }\n  }\n\n  enclosedExpr() {\n    this.lparen()\n    const node = this.expr()\n    this.rparen()\n    return node\n  }\n\n  cell() {\n    if (this.peekType() !== t.CELL) {\n      throw new Error('Missing cell node')\n    }\n\n    const node = new CellNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  cellRange() {\n    let left, right\n\n    if (!this.isCellRange()) {\n      throw new Error('Missing cell range')\n    }\n\n    left = new CellNode(this.curr)\n    this.consume() // skip colon\n    this.consume()\n    right = new CellNode(this.curr)\n    this.consume()\n\n    if (right.location < left.location) {\n      [left, right] = this.invertCellRange(left, right)\n    }\n\n    return new CellRange(left, right)\n  }\n\n  invertCellRange(left, right) {\n    this.tokens[this.index - 2] = right.cell\n    this.tokens[this.index] = left.cell\n    let temp = left\n    left = right\n    right = temp\n    return [left, right]\n  }\n\n  func() {\n    if (this.peekType() !== t.FUNCTION) {\n      throw new Error('Missing function')\n    }\n\n    const func = this.curr\n    this.consume()\n    this.lparen()\n    const args = this.list()\n    this.rparen()\n    return new FuncOp(func, args)\n  }\n\n  list() {\n    const list = []\n    let node\n\n    node = this.listNode()\n    list.push(node)\n\n    while (this.peekType() === t.COMMA) {\n      this.consume() // skip comma token\n      node = this.listNode()\n      list.push(node)\n    }\n\n    return list\n  }\n\n  listNode() {\n    if (this.isCellRange()) {\n      return this.cellRange()\n    } else if (this.peekType() === t.STRING) {\n      return this.string()\n    } else {\n      return this.expr()\n    }\n  }\n\n  text() {\n    let node\n\n    if (this.peekType() !== t.TEXT) {\n      throw new Error('Missing string')\n    }\n\n    node = new TextNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  string() {\n    const node = new StringNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  number() {\n    if (this.peekType() === t.NUMBER) {\n      const node = new NumberNode(this.curr)\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing number')\n    }\n  }\n\n  operator() {\n    if ([t.PLUS, t.MINUS, t.MULT, t.DIV].includes(this.peekType())) {\n      const node = this.curr\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing operator')\n    }\n  }\n\n  equals() {\n    if (this.peekType() !== t.EQUALS) {\n      throw new Error('Missing equals sign')\n    }\n\n    this.consume()\n  }\n\n  lparen() {\n    if (this.peekType() !== t.LPAREN) {\n      throw new Error('Missing left parenthesis')\n    }\n\n    this.consume()\n  }\n\n  rparen() {\n    if (this.peekType() !== t.RPAREN) {\n      throw new Error('Missing right parenthesis')\n    }\n\n    this.consume()\n  }\n\n  unaryOp() {\n    if (![t.PLUS, t.MINUS].includes(this.peekType())) {\n      throw new Error('Missing unary operator')\n    }\n\n    const curr = this.curr\n    this.consume()\n    const node = new UnaryOp(curr, this.factor())\n    return node\n  }\n\n  consume() {\n    if (this.index < this.tokens.length - 1) {\n      this.index++\n      this.curr = this.tokens[this.index]\n    } else {\n      this.curr = null\n    }\n  }\n\n  isCellRange() {\n    return (\n      this.peekType(0) === t.CELL\n      && this.peekType(1) === t.COLON\n      && this.peekType(2) === t.CELL\n    )\n  }\n\n  isString() {\n    return (\n      this.peekType(0) === t.DQUOTE\n      && this.peekType(1) === t.TEXT\n      && this.peekType(2) === t.DQUOTE\n    )\n  }\n\n  peekType(stepsAhead) {\n    if (stepsAhead) {\n      if (stepsAhead < 0) {\n        throw new Error('peak ahead index must be positive')\n      }\n\n      const index = this.index + stepsAhead\n\n      if (index < this.tokens.length) {\n        return this.tokens[index].type\n      }\n    } else {\n      return this.curr && this.curr.type\n    }\n  }\n}\n\nexport default Parser\n","import { Lexer } from './Lexer'\nimport { parseLocation, getColumnLabel } from '~/library/utils'\nimport graph from '~/formulas/graph'\nimport Parser from './Parser'\nimport ReduxConnect from './ReduxConnect'\n\n\nconst ERR_DIVISION_BY_ZERO = '#DIV/0!'\nconst ERR_CIRCULAR_REFERENCE = '#REF!'\nconst ERR_GENERIC = '#ERROR!'\n\nclass Interpreter {\n  constructor(location) {\n    this.location = location\n    this.error = null\n    this.cache = {}\n    this.result = null\n    this.state = new ReduxConnect()\n  }\n\n  interpret(input) {\n    const vertex = graph.addVertex(this.location, input)\n    let lexer, parser\n\n    try {\n      lexer = new Lexer(input)\n      parser = new Parser( lexer.getTokens() )\n      vertex.ast = parser.parse()\n      graph.recalculate(this.location)\n      this.result = vertex.result\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      return this.result\n    }\n\n    this.error = vertex.error\n    return this.result\n  }\n\n  visitAST(location) {\n    const vertex = graph.getVertex(location)\n\n    if (!vertex.ast) {\n      return vertex.result\n    }\n\n    try {\n      this.result = vertex.result = this.visitNode(vertex.ast)\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      throw error\n    }\n\n    return this.result\n  }\n\n  visitNode(node) {\n    switch (node._name) {\n      case 'NumberNode':\n        return this.NumberNode(node)\n      case 'CellNode':\n        return this.CellNode(node)\n      case 'TextNode':\n        return this.TextNode(node)\n      case 'StringNode':\n        return this.StringNode(node)\n      case 'CellRange':\n        return this.CellRange(node)\n      case 'FuncOp':\n        return this.FuncOp(node)\n      case 'BinaryOp':\n        return this.BinaryOp(node)\n      case 'UnaryOp':\n        return this.UnaryOp(node)\n      default:\n        const nodeName = node._name || (node.constructor || {}).name\n        throw new Error(`Unrecognized AST node ${nodeName}`)\n    }\n  }\n  \n  /* ***************************************\n   * Nodes that don't require processing\n   ****************************************/\n\n  TextNode(node) {\n    return node.eval()\n  }\n\n  StringNode(node) {\n    return node.eval()\n  }\n\n  NumberNode(node) {\n    return node.eval()\n  }\n\n  /* ***************************************\n   * Nodes requiring processing\n   ****************************************/\n\n  UnaryOp(node) {\n    const result = this.visitNode(node.expr)\n    return node.eval(result)\n  }\n\n  CellNode(node) {\n    const result = this.getCellResult(node.location)\n    return result === undefined\n      ? 0\n      : result\n  }\n\n  BinaryOp(node) {\n    const left = this.visitNode(node.leftNode)\n    const right = this.visitNode(node.rightNode)\n    return node.eval(left, right)\n  }\n\n  CellRange(node) {\n    const [leftColIndex, leftRowIndex] = parseLocation(node.leftCell.location)\n    const [rightColIndex, rightRowIndex] = parseLocation(node.rightCell.location)\n    const colIndexStart = Math.min(leftColIndex, rightColIndex)\n    const colIndexEnd = Math.max(leftColIndex, rightColIndex)\n    const rowIndexStart = Math.min(leftRowIndex, rightRowIndex)\n    const rowIndexEnd = Math.max(leftRowIndex, rightRowIndex)\n    const list = []\n\n    for (let rowI = rowIndexStart; rowI <= rowIndexEnd; rowI++) {\n      for (let colI = colIndexStart; colI <= colIndexEnd; colI++) {\n        const location = `${getColumnLabel(colI)}-${rowI + 1}`\n        const result = this.getCellResult(location)\n\n        if (result !== undefined) {\n          list.push(result)\n        }\n      }\n    }\n\n    return list\n  }\n\n  getCellResult(otherLocation) {\n    let result\n\n    if (!this.isLocationValid(otherLocation)) {\n      throw new Error('Location out of bounds')\n    }\n\n    if (this.cache[otherLocation] !== undefined) {\n      return this.cache[otherLocation]\n    }\n\n    result = graph.visitCell(otherLocation)\n    this.cache[otherLocation] = result\n    return result\n  }\n\n  FuncOp(node) {\n    const evaluatedArgs = []\n\n    for (let childNode of node.argNodes) {\n      const result = this.visitNode(childNode)\n\n      if (childNode._name === 'CellRange') {\n        evaluatedArgs.push(...result)\n      } else {\n        evaluatedArgs.push(result)\n      }\n    }\n\n    return node.eval(evaluatedArgs)\n  }\n\n  isLocationValid(location) {\n    const [colIndex, rowIndex] = parseLocation(location)\n\n    if (Math.min(colIndex, rowIndex) < 0) { return false }\n    if (colIndex >= this.state.columns) { return false }\n    if (rowIndex >= this.state.rows) { return false }\n    return true\n  }\n\n  errorResponse() {\n    const { message: errorMsg } = this.error\n\n    if (errorMsg.match(/division by zero/i)) {\n      return ERR_DIVISION_BY_ZERO\n    } else if (errorMsg.match(/circular reference/i)) {\n      return ERR_CIRCULAR_REFERENCE\n    } else {\n      return ERR_GENERIC\n    }\n  }\n}\n\nexport default Interpreter\nexport {\n  ERR_DIVISION_BY_ZERO,\n  ERR_CIRCULAR_REFERENCE,\n  ERR_GENERIC,\n}\n","import ReduxConnect from './ReduxConnect'\nimport Interpreter from './Interpreter'\n\n\nclass Vertex {\n  constructor(entered) {\n    this.entered = entered\n    this.error = null\n    this.result = null\n    this.ast = null\n  }\n}\n\nclass Graph {\n  constructor() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  recalculate(location) {\n    this.setPendingNodes()\n    this.dfs(location)\n    this.updateStore()\n  }\n\n  setPendingNodes() {\n    this.pending = new Set()\n\n    Object.keys(this.adj).forEach(vertex => {\n      this.pending.add(vertex)\n    })\n  }\n\n  dfs(location) {\n    while (this.pending.size > 0) {\n      if (!location) {\n        location = [...this.pending][0]\n      }\n\n      try {\n        this.visited = new Set([location])\n        const interpreter = new Interpreter(location)\n        interpreter.visitAST(location)\n      } catch (error) {}\n\n      this.visited.forEach(location => this.pending.delete(location))\n      location = null\n    }\n\n    this.visited = null\n    this.pending = null\n  }\n\n  visitCell(location) {\n    if (!this.hasVertex(location)) {\n      return\n    }\n\n    this.testPathCycle(location)\n    this.pending.delete(location)\n    this.visited.add(location)\n    const interpreter = new Interpreter(location)\n    const result = interpreter.visitAST(location)\n    this.visited.delete(location)\n    return result\n  }\n\n  getCellResult(location) {\n    if (location in this.adj) {\n      return graph.adj[location].result\n    } else {\n      return ''\n    }\n  }\n\n  testPathCycle(location) {\n    if (this.visited.has(location)) {\n      throw new Error('Circular reference')\n    }\n  }\n\n  updateStore() {\n    const locationKeys = new Set(this.store.locations)\n\n    for (let [location, vertex] of Object.entries(this.adj)) {\n      const { entered, result } = vertex\n\n      locationKeys.delete(location)\n\n      if (result !== this.store.getCellResult(location)) {\n        this.store.replaceCellData(location, entered, result)\n      }\n    }\n\n    for (let location of locationKeys) {\n      this.store.clearCell(location)\n    }\n  }\n\n  addVertex(location, entered) {\n    const vertex = new Vertex(entered)\n    this.adj[location] = vertex\n    return vertex\n  }\n\n  hasVertex(location) {\n    return location in this.adj\n  }\n\n  getVertex(location) {\n    this.testMissingLocation(location)\n    return this.adj[location]\n  }\n\n  delVertex(location) {\n    if (location in this.adj) {\n      delete this.adj[location]\n      this.recalculate()\n    }\n  }\n\n  resetAll() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  testMissingLocation(location) {\n    if (!this.hasVertex(location)) {\n      throw new Error('Missing location')\n    }\n  }\n}\n\nconst graph = new Graph()\n\n\nexport default graph\nexport {\n  Vertex,\n  Graph,\n}\n","import graph from '~/formulas/graph'\nimport Interpreter from '../formulas/Interpreter'\n\n\nexport function setCellData(location, entered) {\n  const interpreter = new Interpreter(location)\n  const result = interpreter.interpret(entered)\n\n\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function replaceCellData(location, entered, result) {\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function clearCellData(location) {\n  return (dispatch, getState) => {\n    const value = getState().tableData[location]\n\n    graph.delVertex(location)\n\n    if (value === undefined) {\n      return Promise.resolve()\n    }\n\n\n    return Promise.resolve(dispatch({\n      type: 'DELETE_CELL_DATA',\n      payload: location,\n    }))\n  }\n}\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { css, jsx } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { setCellData, clearCellData } from '~/actions/tableDataActions'\nimport { parseLocation, getColumnLabel } from '~/library/utils'\nimport Lexer from '~/formulas/Lexer'\nimport Suggestions from './Suggestions'\nimport { InputContext } from './InputContext'\nimport { closeCellInputter } from '~/actions/globalActions'\n\n\nconst INPUT_PADDING_RIGHT = 15\n\nconst Root = styled.div`\n  position: fixed;\n`\n\nconst Input = styled.input`\n  align-items: center;\n  background-color: white;\n  border: 2px solid salmon;\n  box-shadow: 0 0 5px ${props => props.theme.colors.shadow};\n  box-sizing: border-box;\n  display: flex;\n  font-size: 13px;\n  height: 100%;\n  outline: none;\n  padding: 2px;\n  width: 100%;\n`\n\nconst HiddenInput = styled(Input)`\n  position: absolute;\n  margin-top: -100vh;\n  visibility: hidden;\n`\n\nexport class CellInputter extends React.PureComponent {\n\n  static propTypes = {\n    // redux\n    cellRect: PropTypes.object.isRequired,\n    clearCellData: PropTypes.func.isRequired,\n    closeCellInputter: PropTypes.func.isRequired,\n    columns: PropTypes.number.isRequired,\n    entered: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    rows: PropTypes.number.isRequired,\n    setCellData: PropTypes.func.isRequired,\n    willReplaceValue: PropTypes.bool.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.setIsFuncSelectorVisible = this.setIsFuncSelectorVisible.bind(this)\n    this.setInputValue = this.setInputValue.bind(this)\n  }\n\n  state = {\n    tokens: [],\n    isFuncSelectorVisible: false,\n    inputValue: '',\n    keyEvent: { key: '' },\n    cursorPos: 0,\n  }\n\n  refInput = React.createRef()\n  refHiddenInput = React.createRef()\n\n  componentDidMount() {\n    const entered = this.props.willReplaceValue ? '' : this.props.entered\n    this.focusInputTag()\n    this.setInputValue(entered)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.keyEvent !== this.state.keyEvent) {\n      this.setFocus(this.state.keyEvent.key)\n      this.keyActions()\n    }\n\n    if (prevState.inputValue !== this.state.inputValue) {\n      this.tokenizeInputValue()\n    }\n  }\n\n  keyActions() {\n    const { key } = this.state.keyEvent\n\n    if (this.state.isFuncSelectorVisible) {\n      switch (key) { // eslint-disable-line\n        case 'Escape':\n          this.props.closeCellInputter()\n          break\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          this.setState({ cursorPos: this.refInput.current.selectionEnd })\n      }\n    } else {\n      switch (key) { // eslint-disable-line\n        case 'Escape':\n          this.props.closeCellInputter()\n          break\n        case 'Enter':\n          this.setCellValue()\n          this.props.closeCellInputter()\n          break\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          this.setState({ cursorPos: this.refInput.current.selectionEnd })\n      }\n    }\n  }\n\n  tokenizeInputValue() {\n    const { inputValue } = this.state\n    const lexer = new Lexer(inputValue)\n    const tokens = lexer.getTokens()\n    this.setState({ tokens })\n  }\n\n  focusInputTag() {\n    const inputEl = this.refInput.current\n\n    setImmediate(() => {\n      inputEl.focus()\n      inputEl.selectionStart = inputEl.value.length\n    })\n  }\n\n  setFocus() {\n    const { keyEvent: { key } } = this.state\n    const { location } = this.props\n    const [colIndex, rowIndex] = parseLocation(location)\n    let el, elId\n\n    if (this.state.isFuncSelectorVisible) {\n      if (key === 'Escape') {\n        elId = `[data-cell=\"result\"][data-location=\"${location}\"]`\n      } else {\n        return\n      }\n    } else {\n      if (key === 'Tab') {\n        elId = `[data-cell=\"result\"][data-location=\"${location}\"]`\n      } else if (key === 'Enter') {\n        const nextRowIndex = Math.min(this.props.rows - 1, rowIndex + 1)\n        const colLabel = getColumnLabel(colIndex)\n        const rowLabel = '' + (nextRowIndex + 1)\n        const endLocation = `${colLabel}-${rowLabel}`\n        elId = `[data-cell=\"result\"][data-location=\"${endLocation}\"]`\n      } else if (key === 'Escape') {\n        elId = `[data-cell=\"result\"][data-location=\"${location}\"]`\n      } else {\n        elId = `[data-cell=\"input\"][data-location=\"${location}\"]`\n      }\n    }\n\n    el = document.querySelector(elId)\n    if (document.activeElement !== el) { el.focus() }\n  }\n\n  setCellValue() {\n    const { location } = this.props\n    const { inputValue } = this.state\n\n    if (this.isWhitespace(inputValue)) {\n      this.props.clearCellData(location)\n      return\n    }\n\n    const cellValue = inputValue.length > 0 && inputValue[0] === '='\n      // ? inputValue.toUpperCase()\n      ? inputValue\n      // NOTE: fix!!\n      : inputValue\n\n    this.props.setCellData(location, cellValue)\n  }\n\n  isWhitespace(text) {\n    return text.length === 0 || Boolean(text.match(/^\\s+$/))\n  }\n\n  setIsFuncSelectorVisible(isFuncSelectorVisible) {\n    this.setState({ isFuncSelectorVisible })\n  }\n\n  setInputValue(inputValue, cursorPos) {\n    const inputEl = this.refInput.current\n\n    this.setState({ inputValue, cursorPos: inputValue.length }, () => {\n      inputEl.focus()\n      inputEl.selectionStart = cursorPos\n      inputEl.selectionEnd = cursorPos\n    })\n  }\n\n  handleOnChange(event) {\n    const { target: { value } } = event\n    const cursorPos = event.target.selectionStart\n    this.setState({ inputValue: value, cursorPos })\n  }\n\n  handleOnKeyDown(event) {\n    const { key, target: { value } } = event\n\n    if (this.state.isFuncSelectorVisible && key === 'Tab') {\n      event.preventDefault()\n    }\n\n    this.setState({ keyEvent: { key }, inputValue: value })\n  }\n\n  handleOnBlur(event) {\n    if (this.state.isFuncSelectorVisible) { return }\n\n    this.setState({ inputValue: event.target.value }, () => {\n      this.setCellValue()\n      this.props.closeCellInputter()\n    })\n  }\n\n  getRootStyle() {\n    const { top, left, width: cellWidth, height: cellHeight } = this.props.cellRect\n    const { current: hiddenInputEl } = this.refHiddenInput\n    let width, height\n\n    if (hiddenInputEl) {\n      const textWidth = hiddenInputEl.scrollWidth\n      const hiddenRect = hiddenInputEl.getBoundingClientRect()\n      width = textWidth > hiddenRect.width\n        ? Math.max(cellWidth, textWidth + INPUT_PADDING_RIGHT)\n        : cellWidth\n      height = cellHeight\n    } else {\n      width = cellWidth\n      height = cellHeight\n    }\n\n\n    return {\n      top,\n      left,\n      height,\n      width,\n    }\n  }\n\n  render() {\n    const inputEl = this.refInput.current\n    const { width, height } = this.props.cellRect\n\n    if (!this.props.location) { return null }\n\n    return (\n      <InputContext.Provider\n        value={{\n          inputRect: inputEl && inputEl.getBoundingClientRect(),\n          setIsFuncSelectorVisible: this.setIsFuncSelectorVisible,\n          setInputValue: this.setInputValue,\n          keyEvent: this.state.keyEvent,\n          inputValue: this.state.inputValue,\n        }}\n      >\n        <Root\n          css={this.getRootStyle()}\n        >\n          <HiddenInput\n            ref={this.refHiddenInput}\n            defaultValue={this.state.inputValue}\n            css={{\n              width: width - INPUT_PADDING_RIGHT,\n              height,\n            }}\n          />\n          <Input\n            ref={this.refInput}\n            data-cell='input'\n            data-location={this.props.location}\n            value={this.state.inputValue}\n            onChange={this.handleOnChange}\n            onKeyDown={this.handleOnKeyDown}\n            onBlur={this.handleOnBlur}\n          />\n          <Suggestions\n            tokens={this.state.tokens}\n            cursorPos={this.state.cursorPos}\n          />\n        </Root>\n      </InputContext.Provider>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {\n    global: {\n      cellInputter: {\n        location, willReplaceValue, cellRect\n      },\n      rows,\n      columns,\n    }\n  } = state\n  const cell = state.tableData[location]\n  const entered = cell ? cell.entered : ''\n\n  return { location, willReplaceValue, cellRect, entered, rows, columns }\n}\n\nconst mapDispatchToProps = { setCellData, clearCellData, closeCellInputter }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CellInputter)\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport { InputContext } from './InputContext'\n\n\nconst Root = styled.div`\n  background: ${props => props.theme.colors.dropdown.normal};\n  margin-top: 1px;\n  box-shadow: 0 0 5px ${props => props.theme.colors.shadow};\n  border: 1px solid ${props => props.theme.colors.dropdown.active};\n  width: 300px;\n  padding: 6px 8px;\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  padding-top: 12px;\n  font-size: 12px;\n`\n\nconst P = styled.p`\n  line-height: 1em;\n  font-size: 13px;\n`\n\nconst Hr = styled.hr`\n  border: 0;\n  border-top: 1px solid ${props => props.theme.colors.dropdown.active};\n`\n\nclass FuncDescription extends React.PureComponent {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    cursorPos: PropTypes.number,\n    fnScopes: PropTypes.array,\n  }\n\n  getFnScope() {\n    const { fnScopes, cursorPos } = this.props\n    let currScope\n\n    for (let scope of fnScopes) {\n      if (cursorPos >= scope.startIndex + 1) {\n        currScope = scope\n      } else {\n        break\n      }\n    }\n\n    if (currScope && currScope.endIndex === null) { return currScope}\n    if (currScope && cursorPos - 1 < currScope.endIndex) { return currScope }\n    return null\n  }\n\n  getFnNode(scope) {\n    const key = scope.fnName.toUpperCase()\n    return formulaFuncs[key]\n  }\n\n  render() {\n    const scope = this.getFnScope()\n    const { inputRect } = this.context\n    if (!inputRect) { return null }\n    const { bottom: top, left } = inputRect\n    let fnNode\n\n    if (!scope) { return null }\n    fnNode = this.getFnNode(scope)\n\n    return (\n      <Root\n        css={{ top, left }}\n      >\n        <Pre\n          css={css`\n            padding-bottom: 6px;\n          `}\n        >\n          {fnNode.definition}\n        </Pre>\n        <Hr />\n        <Subtitle>Example</Subtitle>\n        <Pre>{fnNode.example}</Pre>\n        <Subtitle>Summary</Subtitle>\n        <P>{fnNode.summary}</P>\n      </Root>\n    )\n  }\n}\n\nFuncDescription.propTypes = {\n  cursorPos: PropTypes.number,\n  fnScopes: PropTypes.array,\n}\n\nexport default FuncDescription\n\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport styled from '@emotion/styled'\n\n\nconst NoOp = () => {}\n\nconst Li = styled.li`\n  outline: none;\n`\n\nfunction DropdownItem({ item, index, isActive, onMouseEnter }) {\n  return (\n    <Li\n      tabIndex={0}\n      onMouseEnter={() => onMouseEnter(index)}\n    >\n      {isActive && item.active ? item.active : item.base}\n    </Li>\n  )\n}\n\nDropdownItem.propTypes = {\n  item: PropTypes.shape({\n    base: PropTypes.node.isRequired,\n    active: PropTypes.node,\n  }),\n  index: PropTypes.number.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  onMouseEnter: PropTypes.func,\n}\n\nDropdownItem.defaultProps = {\n  onMouseEnter: NoOp,\n}\n\nexport default DropdownItem\n","\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport InteractiveListItem from './InteractiveListItem'\n\n\nconst Ul = styled.ul`\n  position: fixed;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`\n\nclass InteractiveList extends React.PureComponent {\n\n  static propsTypes = {\n    onMouseEnter: PropTypes.func,\n    items: PropTypes.array.isRequired,\n    top: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    styles: PropTypes.shape({\n      ul: PropTypes.object,\n      li: PropTypes.object,\n    }),\n  }\n\n  renderListItems() {\n    return this.props.items\n      .map((item, index) => (\n        <InteractiveListItem\n          key={index}\n          index={index}\n          item={item.item}\n          style={{...this.props.styles.li}}\n          isActive={item.isActive}\n          onMouseEnter={this.props.onMouseEnter}\n        />\n      ))\n  }\n\n  render() {\n    const { items, top, left, styles } = this.props\n\n    if (items.length === 0) { return null }\n\n    return (\n      <Ul\n        tabIndex={-1}\n        style={{ top, left, ...styles.ul }}\n      >\n        {this.renderListItems()}\n      </Ul>\n    )\n  }\n}\n\nexport default InteractiveList\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport InteractiveList from '~/library/InteractiveList'\nimport Token from '~/formulas/Token'\nimport { InputContext } from './InputContext'\nimport { withTheme } from 'emotion-theming'\n\n\nconst Dialog = styled.dialog`\n  border: 0;\n`\n\nconst baseItemStyle = css`\n  padding: 6px 8px;\n`\n\nconst ItemBaseRoot = styled.div`\n  ${baseItemStyle}\n  background: ${props => props.theme.colors.dropdown.normal};\n`\n\nconst ItemActiveRoot = styled.div`\n  ${baseItemStyle}\n  background: ${props => props.theme.colors.dropdown.active};\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  font-size: 12px;\n`\n\nclass FuncSelector extends React.Component {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    token: PropTypes.instanceOf(Token),\n    colors: PropTypes.object,\n    theme: PropTypes.object,\n  }\n\n  state = {\n    listItems: [],\n    itemIndex: 0,\n    keyEvent: null,\n    isVisible: false,\n  }\n\n  constructor() {\n    super()\n    this.handleOnClick = this.handleOnClick.bind(this)\n    this.setIndex = this.setIndex.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.state.listItems !== nextState.listItems\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.updateContextData(prevState)\n    this.updateListItems(prevProps)\n    this.keyActions()\n  }\n\n  componentWillUnmount() {\n    this.context.setIsFuncSelectorVisible(false)\n  }\n\n  updateListItems(prevProps) {\n    if (prevProps.token === this.props.token) { return }\n\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  updateContextData(prevState) {\n    const { keyEvent } = this.context\n\n    if (prevState.keyEvent !== keyEvent) {\n      this.setState({ keyEvent })\n      this.keyEventSetIndex(keyEvent)\n    }\n  }\n\n  keyActions() {\n    const { keyEvent } = this.context\n    if (this.state.keyEvent === keyEvent) { return }\n    if (['Enter', 'Tab'].includes(keyEvent.key) && this.state.isVisible) {\n      this.updateInputValue()\n    }\n  }\n\n  updateInputValue() {\n    const currInputValue = this.context.inputValue\n    const { token } = this.props\n    const { fnName } = this.state.listItems[this.state.itemIndex]\n    const rightChunkIndex = token.index + token.text.length\n    const leftChunk = currInputValue.slice(0, token.index)\n    const rightChunk = currInputValue.slice(rightChunkIndex)\n    const newInputValue = `${leftChunk}${fnName}(${rightChunk}`\n    const cursorPos = leftChunk.length + fnName.length + 1\n    this.context.setInputValue(newInputValue, cursorPos)\n  }\n\n  setListItems() {\n    const { token } = this.props\n    const text = token.text.toUpperCase()\n    const listItems = Object\n      .keys(formulaFuncs)\n      .filter(fnName => fnName.startsWith(text))\n      .sort()\n      .map(fnName => ({\n        item: {\n          base: this.itemBase(fnName),\n          active: this.itemActive(fnName),\n        },\n        isActive: false,\n        fnName,\n      }))\n    let isVisible = false\n    let itemIndex\n\n    itemIndex = Math.max(Math.min(listItems.length - 1, this.state.itemIndex), 0)\n\n    if (listItems.length > 0) {\n      listItems[itemIndex].isActive = isVisible = true\n    }\n\n    this.context.setIsFuncSelectorVisible(isVisible)\n    this.setState({ listItems, itemIndex, isVisible })\n  }\n\n  keyEventSetIndex(keyEvent) {\n    let itemIndex = this.state.itemIndex\n\n    switch (keyEvent.key) { // eslint-disable-line default-case\n      case 'ArrowUp':\n          itemIndex = this.state.itemIndex - 1\n        break\n      case 'ArrowDown':\n          itemIndex = this.state.itemIndex + 1\n        break\n    }\n\n    this.setState({ itemIndex }, () => {\n      this.setListItems()\n    })\n  }\n\n  setIndex(itemIndex) {\n    this.setState({ itemIndex }, () => {\n      this.setListItems()\n    })\n  }\n\n  itemBase(fnName) {\n    return (\n      <ItemBaseRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n      </ItemBaseRoot>\n    )\n  }\n\n  itemActive(fnName) {\n    return (\n      <ItemActiveRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n        <Subtitle>\n          {formulaFuncs[fnName].summary}\n        </Subtitle>\n      </ItemActiveRoot>\n    )\n  }\n\n  getListStyles() {\n    const { theme } = this.props\n\n    return {\n      ul: {\n        marginTop: 1,\n        boxShadow: `0 0 5px ${theme.colors.shadow}`,\n        border: `1px solid ${theme.colors.dropdown.active}`,\n        width: 300,\n      }\n    }\n  }\n\n  handleOnClick() {\n    this.updateInputValue()\n  }\n\n  render() {\n    const { listItems, isVisible } = this.state\n    const { inputRect } = this.context\n\n    return (\n      <Dialog\n        open={isVisible}\n        onClick={this.handleOnClick}\n      >\n        <InteractiveList\n          items={listItems}\n          top={Math.round(inputRect.bottom)}\n          left={Math.round(inputRect.left)}\n          styles={this.getListStyles()}\n          onMouseEnter={this.setIndex}\n        />\n      </Dialog>\n    )\n  }\n}\n\nexport default withTheme(FuncSelector)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { TOKENS as t } from '~/formulas/Lexer'\nimport FuncDescription from './FuncDescription'\nimport FuncSelector from './FuncSelector'\n\n\nclass Suggestions extends React.PureComponent {\n\n  static propTypes = {\n    tokens: PropTypes.array.isRequired,\n    cursorPos: PropTypes.number,\n  }\n\n  static defaultProps = {\n    cursorPos: 0,\n  }\n\n  state = {\n    fnScopes: [],\n  }\n\n  componentDidMount() {\n    this.setFnScopes()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.tokens !== this.props.tokens) {\n      this.setFnScopes()\n    }\n  }\n\n  setFnScopes() {\n    const stack = []\n    const fnScopes = []\n\n    for (let token of this.props.tokens) {\n      if (token.type === t.FUNCTION) {\n        const scope = { fnName: token.text, startIndex: token.index, endIndex: null }\n        stack.push(scope)\n        fnScopes.push(scope)\n      } else if (token.type === t.LPAREN) {\n        stack.push('(')\n      } else if (token.type === t.RPAREN) {\n        stack.pop()\n        if (stack.length > 0 && stack[stack.length - 1] !== '(') {\n          const scope = stack.pop()\n          scope.endIndex = token.index - 1\n        }\n      }\n    }\n\n    fnScopes.sort((a, b) => a.startIndex - b.startIndex)\n    this.setState({ fnScopes })\n  }\n\n  getCurrTokenIndex(tokens, cursorPos) {\n    let index\n\n    for (index = 0; index < tokens.length; index++) {\n      const token = tokens[index]\n      const endIndex = token.index + token.text.length\n\n      if (cursorPos > token.index && cursorPos <= endIndex) {\n        break\n      }\n    }\n\n    return index\n  }\n\n  getCompareTokens() {\n    const { tokens, cursorPos } = this.props\n    const index = this.getCurrTokenIndex(tokens, cursorPos)\n    const tokenBefore = index > 0 && tokens[index - 1]\n    const tokenCurr = tokens[index]\n    const tokenAfter = index < tokens.length - 2 && tokens[index + 1]\n    return [ tokenBefore, tokenCurr, tokenAfter ]\n  }\n\n  getFuncSelector() {\n    const [ tokenBefore, tokenCurr, tokenAfter ] = this.getCompareTokens()\n\n    if (this.props.tokens.length < 2) { return null }\n\n    const option1 = (\n      tokenBefore\n      && tokenCurr\n      && tokenAfter\n      && tokenBefore.category === 'operator'\n      && [t.UNKNOWN, t.FUNCTION].includes(tokenCurr.type)\n      && tokenAfter.type !== t.RPAREN\n    )\n\n    const option2 = (\n      tokenBefore\n      && tokenCurr\n      && !tokenAfter\n      && [t.UNKNOWN, t.FUNCTION].includes(tokenCurr.type)\n    )\n\n    if (option1 || option2) {\n      return (\n        <FuncSelector\n            token={tokenCurr}\n        />\n      )\n    }\n  }\n\n  render() {\n    const renderedFuncSelector = this.getFuncSelector()\n\n    if (renderedFuncSelector) {\n      return renderedFuncSelector\n    } else {\n      return (\n        <FuncDescription\n          cursorPos={this.props.cursorPos}\n          fnScopes={this.state.fnScopes}\n        />\n      )\n    }\n  }\n}\n\nexport default Suggestions\n","const colors = {\n  text: '#3D3D3D',\n  cell: {\n    border: '#dfdfdf',\n    borderDark: '#CCC',\n    labelBkg: '#F5F5F5'\n  },\n  dropdown: {\n    normal: '#fafafa',\n    active: '#ebebeb',\n  },\n  primary: {\n    strong: '#E10D75',\n    live: '#7e5f67',\n  },\n  field: {\n    background: '#F0F0F0',\n  },\n  shadow: '#939393',\n}\n\nconst breaks = {\n  xs: 0,\n  sm: 420,\n  md: 900,\n  lg: 1200,\n}\n\nconst breakBump = {\n  xs: 'sm',\n  sm: 'md',\n  md: 'lg',\n}\n\nconst queries = {\n  xs: `@media (max-width: ${breaks.sm - 1}px)`,\n  sm: `@media (min-width: ${breaks.sm}px) and (max-width: ${breaks.md - 1}px)`,\n  md: `@media (min-width: ${breaks.md}px) and (max-width: ${breaks.lg - 1}px)`,\n  lg: `@media (min-width: ${breaks.lg}px)`,\n  from: (breakPoint) => (`@media (min-width: ${breaks[breakPoint]}px)`),\n  upTo: (breakPoint) => (`@media (max-width: ${breaks[ breakBump[breakPoint] ] - 1}px)`),\n}\n\nconst theme = {\n  colors,\n  breaks,\n  queries,\n}\n\nexport default theme\n","/* @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nimport theme from './theme'\n\n\nconst globalStyles = css`\n  body {\n    color: ${theme.colors.text};\n    line-height: 1.3em;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  table, th, td {\n    border: 0;\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n\n  td {\n    padding: 0;\n    line-height: 1.2em;\n  }\n\n  pre, p, h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n`\n\nexport default globalStyles\n","import React from 'react'\nimport styled from '@emotion/styled'\n\n\nconst Root = styled.header`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0 30px;\n`\n\nfunction Header() {\n  return (\n    <Root>\n      <h3>Spreadsheet App</h3>\n    </Root>\n  )\n}\n\nexport default Header\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { setColWidthDelta } from '~/actions/tableMetaActions'\nimport { DEFAULT_COL_WIDTH, MIN_COL_WIDTH } from '~/library/constants'\nimport { debounce } from '~/library/utils'\n\n\nlet InnerBorder = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n  font-size: 12px;\n`\n\nconst BtnWidth = styled.button`\n  background: transparent;\n  cursor: col-resize;\n  outline: none;\n  position: absolute;\n  border: 3px solid transparent;\n  height: 100%;\n  margin: 0 -4px 0 0;\n  padding: 1px;\n  right: 0;\n  top: 0;\n  z-index: 1;\n`\n\nclass ColHeader extends React.PureComponent {\n\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    setColWidthDelta: PropTypes.func.isRequired,\n    width: PropTypes.number.isRequired,\n  }\n\n  static defaultProps = {\n    width: DEFAULT_COL_WIDTH,\n  }\n\n  constructor() {\n    super()\n    this.handleBtnWidthOnMouseDown = this.handleBtnWidthOnMouseDown.bind(this)\n    this.handleDocumentMouseMove = this.handleDocumentMouseMove.bind(this)\n    this.handleDocumentMouseUp = this.handleDocumentMouseUp.bind(this)\n    this.debSetColWidth = this.debSetColWidth.bind(this)\n  }\n\n  state = {\n    pageX: 0,\n    width: 0,\n    btnRight: 0,\n    isResizing: false,\n  }\n\n  getBtnWidthStyle() {\n    if (!this.state.isResizing) { return }\n\n    const newRight = this.state.btnRight + 4\n    const minRight = this.state.width - MIN_COL_WIDTH\n    const right = Math.min(newRight, minRight)\n\n    return (theme) => css`\n      right: ${right}px;\n      margin-top: -70px;\n      height: 95vh;\n      border: 0;\n      background: ${theme.colors.primary.live};\n    `\n  }\n\n  debSetColWidth = debounce(40, (event) => {\n    const delta = this.state.pageX - event.pageX\n    this.setState({ btnRight: delta, })\n  })\n\n  handleDocumentMouseMove(event) {\n    this.debSetColWidth(event)\n  }\n\n  handleDocumentMouseUp(event) {\n    const delta = event.pageX - this.state.pageX\n    const width = this.state.width + delta\n\n    this.props.setColWidthDelta(this.props.label, width)\n    this.setState({ btnRight: 0, isResizing: false })\n    document.removeEventListener('mousemove', this.handleDocumentMouseMove)\n    document.removeEventListener('mouseup', this.handleDocumentMouseUp)\n  }\n\n  handleBtnWidthOnMouseDown(event) {\n    event.preventDefault()\n\n    this.setState({\n      pageX: event.pageX,\n      width: this.props.width,\n      isResizing: true,\n    })\n\n    document.addEventListener('mousemove', this.handleDocumentMouseMove)\n    document.addEventListener('mouseup', this.handleDocumentMouseUp)\n  }\n  \n  // handleBtnWidthOnMouseMove(event) {\n  //   if (!this.state.isSettingWidth) { return }\n  //   document.addEventListener('mousemove', (event) => {\n\n  //   })\n  //   const { pageX, pageY } = event\n  //   console.log('handle', pageX, pageY)\n  // }\n\n  render() {\n    const { label, width } = this.props\n\n    return (\n      <InnerBorder\n        data-col={label}\n        className='col-label-height'\n        css={css`\n          width: ${width}px;\n        `}\n      >\n        {label}\n        <BtnWidth\n          css={this.getBtnWidthStyle()}\n          tabIndex='-1'\n          onMouseDown={this.handleBtnWidthOnMouseDown}\n          onMouseMove={this.handleBtnWidthOnMouseMove}\n          onMouseUp={this.handleBtnWidthOnMouseUp}\n        />\n      </InnerBorder>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const width = state.tableMeta.colWidths[ownProps.label]\n  return { width }\n}\n\nconst mapDispatchToProps = { setColWidthDelta }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColHeader)\n","import { clamp } from '~/library/utils'\nimport {\n  MIN_COL_WIDTH,\n  MAX_COL_WIDTH,\n} from '~/library/constants'\n\n\nexport function setColWidthDelta(colLabel, width) {\n  if (typeof width !== 'number') {\n    throw new Error('width is not a number')\n  }\n\n  return {\n    type: 'SET_COL_WIDTH',\n    payload: { colLabel, width: clamp(width, MIN_COL_WIDTH, MAX_COL_WIDTH) }\n  }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport ColHeader from '../cell/ColHeader'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction ColHeaderRow({ colLabels }) {\n  const renderCornerCell = () => (\n    <InnerBorder\n      className='row-label-width col-label-height'\n    />\n  )\n\n  const renderLabelCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => (\n      <ColHeader\n        key={i}\n        label={colLabels[i]}\n      />\n    )\n  ))\n\n  return (\n    <Row\n      data-row='header'\n    >\n      {renderCornerCell()}\n      {renderLabelCells()}\n    </Row>\n  )\n}\n\nColHeaderRow.propTypes = {\n  colLabels: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default ColHeaderRow\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst Wrapper = styled.div`\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction RowHeader({ label }) {\n  return (\n    <Wrapper\n      data-row={label}\n      className='row-label-width row-label-height'\n    >\n      {label}\n    </Wrapper>\n  )\n}\n\nRowHeader.propTypes = {\n  label: PropTypes.number,\n}\n\nexport default RowHeader\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { clearCellData } from '~/actions/tableDataActions'\nimport { displayCellInputter, setActiveCell } from '~/actions/globalActions'\nimport { DEFAULT_COL_WIDTH } from '~/library/constants'\n\n\nconst Wrapper = styled.div`\n  cursor: cell;\n  font-size: 13px;\n  border-right: 1px solid ${props => props.theme.colors.cell.border};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.border};\n`\n\nconst Cell = styled.div`\n  display: flex;\n  align-items: center;\n  outline: none;\n  border: 2px solid transparent;\n  line-height: 1.1em;\n  height: 100%;\n  width: 100%;\n  padding: 2px;\n\n  :focus, :focus-within {\n    border: 2px solid salmon;\n  }\n`\n\nexport class ResultCell extends React.PureComponent {\n  static propTypes = {\n    // props\n    // isFocused: PropTypes.bool,\n    location: PropTypes.string.isRequired,\n    // onDoubleClick: PropTypes.func.isRequired,\n    // onKeyDownEditable: PropTypes.func.isRequired,\n    displayCellInputter: PropTypes.func.isRequired,\n    // redux\n    clearCellData: PropTypes.func.isRequired,\n    width: PropTypes.number.isRequired,\n    // setActiveCell: PropTypes.func.isRequired,\n    result: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n  }\n\n  static defaultProps = {\n    width: DEFAULT_COL_WIDTH\n  }\n\n  constructor() {\n    super()\n    this.handleCellOnKeyDown = this.handleCellOnKeyDown.bind(this)\n    this.handleCellOnDoubleClick = this.handleCellOnDoubleClick.bind(this)\n    this.handleCellOnClick = this.handleCellOnClick.bind(this)\n    this.handleWrapperOnClick = this.handleWrapperOnClick.bind(this)\n  }\n\n  refCell = React.createRef()\n\n  // componentDidMount() {\n  //   this.focusCell()\n  // }\n\n  // focusCell() {\n  //   if (this.props.isFocused) { this.refCell.current.focus() }\n  // }\n\n  displayCellInputter(willReplaceValue) {\n    const { location } = this.props\n    const cellDomRect = this.refCell.current.getBoundingClientRect()\n    const cellRect = JSON.parse(JSON.stringify(cellDomRect))\n\n    this.props.displayCellInputter({\n      location,\n      willReplaceValue,\n      cellRect,\n    })\n  }\n\n  handleCellOnKeyDown({ key }) {\n    this.props.setActiveCell(this.props.location)\n\n    if (['Delete', 'Backspace'].includes(key)) {\n      const valueStr = '' + this.props.result\n\n      if (valueStr.length > 0) {\n        this.props.clearCellData(this.props.location)\n      }\n      // key pressed is a printable symbol, ex: 'a', '1', ','\n      // can be further refined, but for now it's fine\n    } else if (key.length === 1) {\n      this.displayCellInputter(true)\n    }\n  }\n\n  handleCellOnDoubleClick() {\n    this.displayCellInputter(false)\n  }\n\n  getStyle() {\n    let style = {}\n\n    if (typeof this.props.result === 'number') {\n      style = {\n        whiteSpace: 'nowrap',\n        textOverflow: 'clip',\n        overflow: 'hidden',\n      }\n    }\n\n    return style\n  }\n\n  handleWrapperOnClick() {\n    this.refCell.current.focus()\n  }\n\n  handleCellOnClick(event) {\n    event.stopPropagation()\n  }\n\n  render() {\n    return (\n      <Wrapper\n        className='row-label-height'\n        onClick={this.handleWrapperOnClick}\n        css={css`\n          width: ${this.props.width}px;\n        `}\n      >\n        <Cell\n          ref={this.refCell}\n          data-cell='result'\n          data-location={this.props.location}\n          css={this.getStyle()}\n          tabIndex='0'\n          onClick={this.handleCellOnClick}\n          onKeyDown={this.handleCellOnKeyDown}\n          onDoubleClick={this.handleCellOnDoubleClick}\n        >\n          {this.props.result}\n        </Cell>\n      </Wrapper>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const [colLabel, _] = ownProps.location.split('-')\n  const cell = state.tableData[ownProps.location]\n  const result = cell ? cell.result : ''\n  const width = state.tableMeta.colWidths[colLabel]\n  return { result, width }\n}\n\nconst mapDispatchToProps = { clearCellData, displayCellInputter, setActiveCell }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultCell)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport RowHeader from '../cell/RowHeader'\n// import CellData from '../cell/CellData'\nimport CellResult from '../cell/CellResult'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\n// function DataRow({ rowNumber, colLabels, activeCell }) {\nfunction DataRow({ rowNumber, colLabels }) {\n  const dataCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => {\n      const location = `${colLabels[i]}-${rowNumber}`\n\n      // return (\n      //   <CellData\n      //     key={i}\n      //     isActive={activeCell === location}\n      //     location={location}\n      //   />\n      // )\n      return (\n        <CellResult\n          key={i}\n          location={location}\n        />\n      )\n    })\n  )\n\n  return (\n    <Row\n      data-row={rowNumber}\n    >\n      <RowHeader\n        label={rowNumber}\n      />\n      {dataCells()}\n    </Row>\n  )\n}\n\nDataRow.propTypes = {\n  rowNumber: PropTypes.number,\n  colLabels: PropTypes.arrayOf(PropTypes.string),\n  // activeCell: PropTypes.string,\n}\n\nexport default DataRow\n\n","import { Machine, assign } from 'xstate'\n\nimport { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nfunction getTargetLocation({ rows, columns, rowIndex, colIndex, key }) {\n  switch (key) {\n    case 'ArrowUp':\n      rowIndex = Math.max(0, rowIndex - 1)\n      break\n    case 'ArrowRight':\n      colIndex = Math.min(columns - 1, colIndex + 1)\n      break\n    case 'ArrowDown':\n    case 'Enter':\n      rowIndex = Math.min(rows - 1, rowIndex + 1)\n      break\n    case 'ArrowLeft':\n      colIndex = Math.max(0, colIndex - 1)\n      break\n    default:\n      return null\n  }\n\n  const colLabel = getColumnLabel(colIndex)\n  const rowLabel = '' + (rowIndex + 1)\n\n  return `${colLabel}-${rowLabel}`\n}\n\nfunction focusTargetCell(ctx) {\n  if (!ctx.endLocation) { return Promise.resolve(false) }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const id = `[data-location=\"${ctx.endLocation}\"]`\n      const cell = document.querySelector(id)\n      if (cell) { cell.focus() }\n      resolve(true)\n    }, 0)\n  })\n}\n\nconst state = {\n  id: 'keyboardNav',\n  initial: 'idle',\n  context: {\n    columns: null,\n    rows: null,\n    key: null,\n    colIndex: null,\n    rowIndex: null,\n    endLocation: null,\n    wasFocused: false,\n  },\n  states: {\n    idle: {\n      on: {\n        'MOVE_FOCUS': {\n          actions: ['setNewContext', 'calcTargetLocation'],\n          target: 'focusTarget',\n        }\n      }\n    },\n    focusTarget: {\n      invoke: {\n        src: focusTargetCell,\n        onDone: {\n          actions: assign({ wasFocused: (ctx, event) => event.data }),\n          target: 'idle',\n        },\n      },\n    },\n  },\n}\n\nconst actions = {\n  actions: {\n    setNewContext: assign((ctx, { key, location }) => {\n      const [colIndex, rowIndex] = parseLocation(location)\n      return { colIndex, rowIndex, key }\n    }),\n    calcTargetLocation: assign({\n      endLocation: (ctx) => {\n        return getTargetLocation(ctx)\n      }\n    }),\n  },\n}\n\nfunction getKeyboardNavMachine(rows, columns) {\n  const newContext = {\n    ...state.context,\n    columns,\n    rows,\n  }\n\n  return Machine(state, actions, newContext)\n}\n\nexport {\n  state,\n  actions,\n  getTargetLocation,\n  focusTargetCell,\n}\n\nexport default getKeyboardNavMachine\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport { interpret } from 'xstate'\n\nimport ColHeaderRow from './ColHeaderRow'\nimport DataRow from './DataRow'\nimport { getColumnNames } from '~/library/utils'\nimport getKeyboardNavMachine from './keyboardNavMachine'\nimport { DEFAULT_COL_WIDTH } from '~/library/constants'\n\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n  border-top: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-left: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .row-label-width {\n    width: 34px;\n  }\n\n  .row-label-height {\n    min-height: 28px;\n  }\n\n  .col-label-width {\n    width: ${DEFAULT_COL_WIDTH}px;\n  }\n\n  .col-label-height {\n    min-height: 26px;\n  }\n`\n\nexport class Table extends React.PureComponent {\n  static propTypes = {\n    activeCell: PropTypes.string,\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleTableOnClick = this.handleTableOnClick.bind(this)\n    this.handleTableOnKeyDown = this.handleTableOnKeyDown.bind(this)\n    this.colLabels = getColumnNames(props.columns)\n  }\n\n  keyboardNavMachine = getKeyboardNavMachine(this.props.rows, this.props.columns)\n  focusService = interpret(this.keyboardNavMachine)\n\n  componentDidMount() {\n    this.focusService.start()\n  }\n\n  componentWillUnmount() {\n    this.focusService.stop()\n  }\n\n  handleTableOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleTableOnKeyDown(event) {\n    event.stopPropagation()\n    const { location } = event.target.dataset\n\n    if (location) {\n      this.moveFocus(event.key, event.target.dataset.location)\n    }\n  }\n\n  moveFocus(key, location) {\n    this.focusService.send({ type: 'MOVE_FOCUS', key, location })\n  }\n\n  renderColHeaderRow(i) {\n    return (\n      <ColHeaderRow\n        key={i}\n        rows={this.props.rows}\n        colLabels={this.colLabels}\n      />\n    )\n  }\n\n  renderDataRows(rowNumber) {\n    return (\n      <DataRow\n        key={rowNumber}\n        rowNumber={rowNumber}\n        colLabels={this.colLabels}\n        activeCell={this.props.activeCell}\n      />\n    )\n  }\n\n  renderRows() {\n    return new Array(this.props.rows + 1).fill(0).map((_, i) => {\n      if (i === 0) {\n        return this.renderColHeaderRow(i)\n      } else {\n        return this.renderDataRows(i)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Grid\n        data-table='app'\n        onClick={this.handleTableOnClick}\n        onKeyDown={this.handleTableOnKeyDown}\n      >\n        {this.renderRows()}\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { activeCell, rows, columns } = state.global\n  return { activeCell, rows, columns }\n}\n\nexport default connect(mapStateToProps)(Table)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\n\nimport Header from './components/header/Header'\nimport Table from './components/table/Table'\nimport CellInputter from './components/cellInputter/CellInputter'\n\n\nconst Container = styled.div`\n  display: grid;\n  grid:\n    \"left-blank main right-blank\" 100vh\n    / auto minmax(auto, 1000px) auto;\n`\n\nconst Main = styled.main`\n  grid-area: main;\n`\n\nfunction App({ cellInputter }) {\n  return (\n    <Container>\n      <Main>\n        {cellInputter &&  <CellInputter />}\n        <div data-dummy-focus-stop tabIndex=\"0\" />\n        <Header />\n        <Table />\n      </Main>\n    </Container>\n  )\n}\n\nApp.propTypes = {\n  cellInputter: PropTypes.object,\n  setActiveCell: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({ cellInputter: state.global.cellInputter })\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from 'emotion-theming'\nimport { Global } from '@emotion/core'\nimport 'sanitize.css'\n\nimport appStore from './reducers/'\nimport globalStyles from './styles/globalStyles'\nimport theme from './styles/theme'\nimport App from './App'\n\n\nfunction Root() {\n  return (\n    <Provider store={appStore}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Global styles={globalStyles} />\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default Root\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
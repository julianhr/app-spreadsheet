{"version":3,"sources":["library/utils.js","formulas/formulaFunctions.js","formulas/TokenSanitizer.js","formulas/LexerRule.js","formulas/Lexer.js","formulas/Token.js","components/cellInputter/InputContext.js","reducers/globalReducer.js","reducers/tableReducer.js","reducers/index.js","actions/globalActions.js","formulas/ReduxConnect.js","formulas/ast.js","formulas/Parser.js","formulas/Interpreter.js","formulas/graph.js","actions/tableActions.js","components/cellInputter/CellInputter.jsx","components/cellInputter/FuncDescription.jsx","library/InteractiveListItem.jsx","library/InteractiveList.jsx","components/cellInputter/FuncSelector.jsx","components/cellInputter/Suggestions.jsx","styles/theme.js","styles/globalStyles.js","components/header/Header.jsx","components/cell/ColLabel.jsx","components/table/ColLabelRow.jsx","components/cell/RowLabel.jsx","components/cell/CellResult.jsx","components/table/DataRow.jsx","components/table/keyboardNavMachine.js","components/table/Table.jsx","App.jsx","Root.jsx","serviceWorker.js","index.js"],"names":["BASE_CODE_POINT","codePointAt","getColumnNames","cols","names","prevNames","remainCols","newNames","outerLoop","_i","_prevNames","length","colName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","letter","value","push","concat","err","return","Object","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getColumnLabel","num","label","basePoint","curr","codePoint","String","fromCodePoint","Math","floor","reverse","join","parseLocation","location","_location$split","split","_location$split2","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","col","row","reduce","prev","charCodeAt","isNumber","numStr","isPeriodsAndDigits","Boolean","match","periodCount","testArgsAllNumbers","args","forEach","arg","TypeError","Fn","AVERAGE","fn","_Fn$SUM","_Fn$COUNT","arguments","Error","SUM","apply","COUNT","definition","example","summary","CONCAT","_len","Array","_key","MAX","_len2","_key2","max","MIN","_len3","_key3","min","POWER","_len4","_key4","base","exp","pow","SQRT","_len5","_key5","sqrt","_len6","_key6","AVG","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","POW","TokenSanitizer","tokens","classCallCheck","this","_this","map","token","type","t","NUMBER","number","CELL","cell","FUNCTION","function","STRING","string","text","parseFloat","UNKNOWN","getCellLabel","getFunction","slice","index","toUpperCase","fnName","fnNode","formulaFuncs","LexerRule","regex","groupIndex","category","lastIndex","input","exec","TOKENS","EOF","EQUALS","COMMA","COLON","LPAREN","RPAREN","PLUS","MINUS","MULT","DIV","TEXT","GRAMMAR","Lexer","char","initChar","markers","nextToken","sanitizer","sanitize","Token","isFormula","tokenTEXTorNUMBER","whitespaceLen","getWhitespaceLen","_GRAMMAR","rule","setIndex","test","consume","tokenUNKNOWN","whitespace","chars","isEOF","isSeparator","isWhitespace","count","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","html","__webpack_require__","d","__webpack_exports__","InputContext","react__WEBPACK_IMPORTED_MODULE_0__","n","React","createContext","createReducer","activeCell","cellInputter","rows","columns","SET_ACTIVE_CELL","state","_ref","payload","SET_CELL_INPUTTER","_ref2","UNSET_CELL_INPUTTER","SET_CELL_DATA","data","DELETE_CELL_DATA","appStore","configureStore","reducer","global","globalReducer","table","tableReducer","setActiveCell","displayCellInputter","closeCellInputter","redux_starter_kit__WEBPACK_IMPORTED_MODULE_0__","createAction","ReduxConnect","store","globalState","getState","result","entered","dispatch","replaceCellData","clearCellData","keys","AST","name","_name","TextNode","textNode","possibleConstructorReturn","getPrototypeOf","call","node","StringNode","_this2","NumberNode","_this3","CellNode","_this4","CellRange","leftCell","rightCell","_this5","UnaryOp","opNode","expr","_this6","evaluatedExpr","FuncOp","funcNode","argNodes","_this7","evaluatedArgs","toConsumableArray","BinaryOp","leftNode","rightNode","_this8","left","right","Parser","ast","peekType","equals","operator","term","includes","factor","enclosedExpr","unaryOp","func","lparen","rparen","isCellRange","_this$invertCellRange","invertCellRange","_this$invertCellRange2","slicedToArray","temp","list","listNode","cellRange","DQUOTE","stepsAhead","Interpreter","error","cache","lexer","parser","vertex","graph","addVertex","getTokens","parse","recalculate","errorResponse","getVertex","visitNode","nodeName","constructor","eval","getCellResult","_parseLocation","_parseLocation2","leftColIndex","leftRowIndex","_parseLocation3","_parseLocation4","rightColIndex","rightRowIndex","colIndexStart","colIndexEnd","rowIndexStart","rowIndexEnd","rowI","colI","otherLocation","isLocationValid","visitCell","childNode","_parseLocation5","_parseLocation6","colIndex","rowIndex","errorMsg","message","Vertex","Graph","adj","pending","visited","setPendingNodes","dfs","updateStore","Set","add","size","visitAST","delete","hasVertex","testPathCycle","has","locationKeys","locations","_Object$entries","entries","_ref3","clearCell","testMissingLocation","setCellData","interpret","delVertex","Promise","resolve","tableActions_replaceCellData","Root","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_8__","target","styles","Input","props","theme","colors","shadow","HiddenInput","CellInputter","_React$PureComponent","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","isFuncSelectorVisible","inputValue","keyEvent","key","cursorPos","refInput","createRef","refHiddenInput","handleOnKeyDown","bind","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","handleOnBlur","handleOnChange","setIsFuncSelectorVisible","setInputValue","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_7__","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","willReplaceValue","focusInputTag","prevProps","prevState","setFocus","keyActions","tokenizeInputValue","setState","current","selectionEnd","setCellValue","inputEl","setImmediate","focus","selectionStart","el","elId","nextRowIndex","colLabel","rowLabel","endLocation","document","querySelector","activeElement","cellValue","event","preventDefault","width","height","_this$props$cellRect","cellRect","top","cellWidth","cellHeight","hiddenInputEl","textWidth","scrollWidth","getBoundingClientRect","_this$props$cellRect2","_emotion_core__WEBPACK_IMPORTED_MODULE_10__","_InputContext__WEBPACK_IMPORTED_MODULE_16__","Provider","inputRect","css","getRootStyle","ref","defaultValue","_emotion_css__WEBPACK_IMPORTED_MODULE_0__","data-cell","data-location","onChange","onKeyDown","onBlur","_Suggestions__WEBPACK_IMPORTED_MODULE_15__","PureComponent","mapDispatchToProps","connect","_state$global","_state$global$cellInp","styled_base_browser_esm","dropdown","normal","active","Pre","Subtitle","P","Hr","FuncDescription","currScope","_this$props","fnScopes","scope","startIndex","endIndex","getFnScope","context","bottom","getFnNode","core_browser_esm","css_browser_esm","FuncDescription_ref","contextType","Li","DropdownItem","item","isActive","onMouseEnter","tabIndex","defaultProps","Ul","InteractiveList","items","react_default","a","createElement","InteractiveListItem","style","objectSpread","li","ul","renderListItems","propsTypes","PropTypes","array","isRequired","shape","object","Dialog","baseItemStyle","ItemBaseRoot","ItemActiveRoot","FuncSelector","listItems","itemIndex","isVisible","handleOnClick","assertThisInitialized","setListItems","nextProps","nextState","updateContextData","updateListItems","keyEventSetIndex","updateInputValue","currInputValue","rightChunkIndex","leftChunk","rightChunk","newInputValue","filter","startsWith","sort","itemBase","itemActive","FuncSelector_Pre","FuncSelector_Subtitle","marginTop","boxShadow","border","_this$state","open","onClick","library_InteractiveList","round","getListStyles","Component","withTheme","Suggestions","setFnScopes","stack","pop","b","getCurrTokenIndex","_this$getCompareToken","getCompareTokens","_this$getCompareToken2","tokenBefore","tokenCurr","tokenAfter","option1","option2","cellInputter_FuncSelector","renderedFuncSelector","getFuncSelector","cellInputter_FuncDescription","breaks","xs","sm","md","lg","breakBump","queries","from","breakPoint","upTo","borderDark","labelBkg","primary","strong","field","background","globalStyles","Header","InnerBorder","ColLabel","data-col","className","Row","ColLabelRow","colLabels","data-row","ColLabelRow_InnerBorder","fill","_","i","cell_ColLabel","Wrapper","RowLabel","Cell","ResultCell","refCell","handleCellOnKeyDown","handleCellOnDoubleClick","handleCellOnClick","handleWrapperOnClick","inherits","createClass","cellDomRect","JSON","stringify","whiteSpace","textOverflow","overflow","stopPropagation","CellResult_Wrapper","getStyle","onDoubleClick","ownProps","DataRow","rowNumber","DataRow_Row","cell_RowLabel","CellResult","id","initial","wasFocused","states","idle","on","MOVE_FOCUS","actions","focusTarget","invoke","src","ctx","setTimeout","onDone","assign","setNewContext","calcTargetLocation","getTargetLocation","getKeyboardNavMachine","newContext","Machine","Grid","Table","keyboardNavMachine","focusService","handleTableOnClick","handleTableOnKeyDown","start","stop","moveFocus","dataset","send","table_ColLabelRow","table_DataRow","renderColLabelRow","renderDataRows","data-table","renderRows","Container","Main","data-dummy-focus-stop","header_Header","table_Table","es","react_router_dom","emotion_theming_browser_esm","src_App","window","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f90893c.chunk.js","sourcesContent":["const BASE_CODE_POINT = 'A'.codePointAt(0)\n\nexport function buildUrl(baseUrl, query={}) {\n  const urlQuery = Object.entries(query).map(([key, val]) => `${key}=${val}`).join('&')\n  return [baseUrl.trim(), urlQuery].join('?')\n}\n\nexport function clamp(value, min, max) {\n  return Math.min( Math.max(value, min), max )\n}\n\nexport function getRangeArray(min, max, isString=false) {\n  const range = []\n\n  for (let num = min; num <= max; num++) {\n    range.push( isString ? num.toString() : num )\n  }\n\n  return range\n}\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms))\n\nexport function getColumnNames(cols) {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let names = []\n  let prevNames = ['']\n  let remainCols = cols\n\n  while (remainCols > 0) {\n    const newNames = []\n\n    outerLoop:\n    for (let colName of prevNames) {  \n      for (let letter of alphabet) {\n        if (remainCols === 0)  { break outerLoop }\n        newNames.push(`${colName}${letter}`)\n        remainCols -= 1\n      }\n    }\n\n    prevNames = newNames\n    names = [...names, ...newNames]\n  }\n\n  return names\n}\n\nexport function getCellNames(rows, cols) {\n  const names = []\n  let colNames = getColumnNames(cols)\n\n  for (let row=1; row <= rows; row++) {\n    for (let col of colNames) {\n      names.push(`${col}-${row}`)\n    }\n  }\n\n  return names\n}\n\nexport function getColumnPosition(colLabel) {\n  const letters = colLabel.split('')\n  const oneBase = letters.reduce((prev, letter) => (\n    prev * 26 + letter.charCodeAt(0) - BASE_CODE_POINT + 1\n  ), 0)\n\n  return oneBase - 1\n}\n\nexport function getColumnLabel(num) {\n  const label = []\n  const basePoint = BASE_CODE_POINT\n  let curr = num + 1\n\n  do {\n    curr -= 1\n    const letterPosition = curr % 26\n    const codePoint = basePoint + letterPosition\n    const letter = String.fromCodePoint(codePoint)\n    label.push(letter)\n\n    curr = Math.floor(curr / 26)\n  } while (curr > 0)\n\n  return label.reverse().join('')\n}\n\nexport function parseLocation(location) {\n  let [col, row] = location.split('-')\n  const colIndex = getColumnPosition(col)\n  const rowIndex = +row - 1\n\n  return [colIndex, rowIndex]\n}\n\nexport function isNumber(numStr) {\n  const isPeriodsAndDigits = Boolean(numStr.match(/^[.\\d]+$/))\n  const periodCount = (numStr.match(/\\./g) || []).length\n\n  if (!isPeriodsAndDigits) { return false }\n  if (periodCount > 1) { return false }\n  if (numStr.length === 1 && numStr[0] === '.') { return false }\n  return true\n}\n\n","function testArgsAllNumbers(args) {\n  args.forEach(arg => {\n    if (typeof arg !== 'number') {\n      throw new TypeError(`Function argument not a number: ${arg}`)\n    }\n  })\n}\n\nconst Fn = {\n  AVERAGE: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      return Fn.SUM.fn(...args) / Fn.COUNT.fn(...args)\n    },\n    definition: 'AVERAGE(value1, value2, ...)',\n    example: 'AVERAGE(A1:B3, 3)',\n    summary: 'Returns the average from a series of numbers.',\n  },\n\n  CONCAT: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      return args.reduce((prev, curr) => (prev + curr), '')\n    },\n    definition: 'CONCAT(\"text1\", \"text2\", ...)',\n    example: 'CONCAT(\"one\", \"two\")',\n    summary: 'Returns a single concatenated string from a series of strings.',\n  },\n\n  COUNT: {\n    fn: (...args) => args.length,\n    definition: 'COUNT(element1, element2, ...)',\n    example: 'COUNT(A1:B3, 2, C4)',\n    summary: 'Returns the number of non-empty elements in a set.',\n  },\n\n  MAX: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      testArgsAllNumbers(args)\n      return Math.max(...args)\n    },\n    definition: 'MAX(value1, value2, ...)',\n    example: 'MAX(A1:B3, 4, C3)',\n    summary: 'Returns the maximum value from a series of numbers',\n  },\n\n  MIN: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      testArgsAllNumbers(args)\n      return Math.min(...args)\n    },\n    definition: 'MIN(value1, value2, ...)',\n    example: 'MIN(A1:B3, 4, C3)',\n    summary: 'Returns the minimum value from a series of numbers.',\n  },\n\n  POWER: {\n    fn: (...args) => {\n      if (args.length !== 2) {\n        throw new Error('Formula takes only two elements')\n      }\n\n      testArgsAllNumbers(args)\n      const [base, exp] = args\n      return Math.pow(base, exp)\n    },\n    definition: 'POWER(base, exponent)',\n    example: 'POWER(A3,2)',\n    summary: 'Returns a number raised to an exponent.'\n  },\n\n  SQRT: {\n    fn: (...args) => {\n      if (args.length !== 1) {\n        throw new Error(`Formula takes only one element`)\n      }\n\n      testArgsAllNumbers(args)\n      return Math.sqrt(args[0])\n    },\n    definition: 'SQRT(value)',\n    example: 'SQRT(9) or SQRT(A3)',\n    summary: 'Returns the square root of a number.'\n  },\n\n  SUM: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      testArgsAllNumbers(args)\n      return args.reduce((prev, curr) => (curr + prev), 0)\n    },\n    definition: 'SUM(value1, value2, ...)',\n    example: 'SUM(A1:B3, 3, C5)',\n    summary: 'Retuns the sum from a series of numbers.',\n  }\n}\n\n// aliases\nFn.AVG = {\n  ...Fn.AVERAGE,\n  definition: 'AVG(value1, value2, ...)',\n  example: 'AVG(A1:B3, 3)',\n}\n\nFn.POW = {\n  ...Fn.POWER,\n  definition: 'POW(base, exponent)',\n  example: 'POW(A3,2)',\n}\n\nexport default Fn\n","import { TOKENS as t } from './Lexer'\nimport formulaFuncs from './formulaFunctions'\nimport { isNumber } from '~/library/utils'\n\n\nclass TokenSanitizer {\n  constructor(tokens) {\n    this.tokens = tokens\n  }\n\n  sanitize() {\n    return this.tokens.map(token => {\n      switch(token.type) {\n        case t.NUMBER:\n          return this.number(token)\n        case t.CELL:\n          return this.cell(token)\n        case t.FUNCTION:\n          return this.function(token)\n        case t.STRING:\n          return this.string(token)\n        default:\n          return token\n      }\n    })\n  }\n\n  number(token) {\n    if (!isNumber(token.text)) {\n      token.type = t.UNKNOWN\n      return token\n    }\n\n    token.value = parseFloat(token.text)\n    return token\n  }\n\n  cell(token) {\n    token.value = this.getCellLabel(token)\n    return token\n  }\n\n  function(token) {\n    const fn = this.getFunction(token)\n    \n    if (fn) {\n      token.value = fn\n    } else {\n      token.type = t.UNKNOWN\n    }\n\n    return token\n  }\n\n  string(token) {\n    token.value = token.text.slice(1, -1)\n    return token\n  }\n\n  getCellLabel(token) {\n    const { text } = token\n    const { index } = text.match(/\\d+/)\n    const col = text.slice(0, index).toUpperCase()\n    const row = text.slice(index)\n    return `${col}-${row}`\n  }\n\n  getFunction(token) {\n    const fnName = token.text.toUpperCase()\n    const fnNode = formulaFuncs[fnName]\n    return fnNode && fnNode.fn\n  }\n}\n\nexport default TokenSanitizer\n","class LexerRule {\n  constructor(regex, groupIndex, token, category) {\n    this.regex = regex\n    this.groupIndex = groupIndex\n    this.token = token\n    this.category = category\n  }\n\n  setIndex(index) {\n    this.regex.lastIndex = index\n  }\n\n  test(input) {\n    return this.regex.exec(input)\n  }\n}\n\nexport default LexerRule\n","import Token from './Token'\nimport TokenSanitizer from './TokenSanitizer'\nimport LexerRule from './LexerRule'\nimport { isNumber } from '~/library/utils'\n\n\nconst TOKENS = {\n  // internal\n  EOF: 'EOF',\n  // structure\n  EQUALS: 'EQUALS',\n  COMMA: 'COMMA',\n  COLON: 'COLON',\n  LPAREN: 'LPAREN',\n  RPAREN: 'RPAREN',\n  // operators\n  PLUS: 'PLUS',\n  MINUS: 'MINUS',\n  MULT: 'MULT',\n  DIV: 'DIV',\n  // entities\n  TEXT: 'TEXT',\n  CELL: 'CELL',\n  STRING: 'STRING',\n  NUMBER: 'NUMBER',\n  FUNCTION: 'FUNCTION',\n  UNKNOWN: 'UNKNOWN',\n}\n\nconst t = TOKENS\n\nconst GRAMMAR = [\n  // structure\n  new LexerRule(/=/g, 0, t.EQUALS, 'structure'),\n  new LexerRule(/,/g, 0, t.COMMA, 'structure'),\n  new LexerRule(/:/g, 0, t.COLON, 'structure'),\n  new LexerRule(/\\(/g, 0, t.LPAREN, 'structure'),\n  new LexerRule(/\\)/g, 0, t.RPAREN, 'structure'),\n  // operators\n  new LexerRule(/\\+/g, 0, t.PLUS, 'operator'),\n  new LexerRule(/\\-/g, 0, t.MINUS, 'operator'), // eslint-disable-line\n  new LexerRule(/\\*/g, 0, t.MULT, 'operator'),\n  new LexerRule(/\\//g, 0, t.DIV, 'operator'),\n  // multi-character\n  new LexerRule(/(\"[^\"]+\")/g, 1, t.STRING, 'entity'), // eslint-disable-line\n  new LexerRule(/[\\d\\.]+/g, 0, t.NUMBER, 'entity'), // eslint-disable-line\n  new LexerRule(/[a-z]+[\\d]+/gi, 0, t.CELL, 'entity'),\n  new LexerRule(/([a-z]+)\\(/gi, 1, t.FUNCTION, 'entity'),\n]\n\n\nclass Lexer {\n  constructor(input) {\n    this.input = input\n    this.index = 0\n    this.char = this.initChar(input)\n    this.markers = []\n    this.tokens = []\n  }\n\n  getTokens() {\n    while (this.char !== t.EOF) {\n      const token = this.nextToken()\n      this.tokens.push(token)\n    }\n\n    const sanitizer = new TokenSanitizer(this.tokens)\n    this.tokens = sanitizer.sanitize()\n    return this.tokens\n  }\n\n  nextToken() {\n    if (this.char === t.EOF) {\n      return new Token(t.EOF, t.EOF, 0, 'eof', this.index)\n    }\n\n    if (!this.isFormula()) {\n      return this.tokenTEXTorNUMBER()\n    }\n\n    const whitespaceLen = this.getWhitespaceLen()\n    let token\n\n    for (let rule of GRAMMAR) {\n      rule.setIndex(this.index)\n      const match = rule.test(this.input)\n\n      if (match && match.index === this.index) {\n        const text = match[rule.groupIndex]\n        token = new Token(rule.token, text, whitespaceLen, rule.category, this.index)\n        this.index += text.length - 1\n        this.consume()\n        break\n      }\n    }\n\n    if (!token) {\n      token = this.tokenUNKNOWN(whitespaceLen)\n    }\n\n    return token\n  }\n\n  initChar(input) {\n    if (this.input.length === 0) {\n      this.input = '0'\n      this.index = -1\n    }\n\n    return input[this.index]\n  }\n\n  tokenUNKNOWN(whitespace) {\n    const chars = []\n\n    while (!(this.isEOF() || this.isSeparator() || this.isWhitespace())) {\n      chars.push(this.char)\n      this.consume()\n    }\n\n    const text = chars.join('')\n    return new Token(t.UNKNOWN, text, whitespace, 'entity', this.index - text.length)\n  }\n\n  tokenTEXTorNUMBER() {\n    let token\n\n    if (isNumber(this.input)) {\n      token = new Token(t.NUMBER, this.input, 0, 'entity', this.index)\n    } else {\n      token = new Token(t.TEXT, this.input, 0, 'entity', this.index)\n    }\n\n    this.index = this.input.length - 1\n    this.consume()\n    return token\n  }\n\n  consume() {\n    this.index++\n\n    if (this.index < this.input.length) {\n      this.char = this.input[this.index]\n    } else {\n      this.char = t.EOF\n    }\n  }\n\n  isFormula() {\n    return this.input[0] === '='\n  }\n\n  isEOF() {\n    return this.char === t.EOF\n  }\n\n  isWhitespace() {\n    return !this.isEOF() && Boolean(this.char.match(/\\s/))\n  }\n\n  isSeparator() {\n    return Boolean(this.char.match(/[\\(\\)\\+\\-\\/\\*]/)) // eslint-disable-line\n  }\n\n  getWhitespaceLen() {\n    let count = 0\n\n    while (this.isWhitespace()) {\n      count++\n      this.consume()\n    }\n\n    return count\n  }\n}\n\nexport default Lexer\nexport { GRAMMAR, TOKENS, Lexer }\n","class Token {\n  constructor(type, text, whitespace, category, index) {\n    this.type = type\n    this.category = category\n    this.text = text\n    this.whitespace = whitespace\n    this.index = index\n    this.value = null\n    this.html = null\n  }\n}\n\nexport default Token\n","import React from 'react'\n\n\nexport const InputContext = React.createContext()\n","import { createReducer } from 'redux-starter-kit'\n\nexport const INITIAL_STATE = {\n  activeCell: null,\n  cellInputter: null,\n  rows: 14,\n  columns: 6,\n}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_ACTIVE_CELL': (state, { payload }) => {\n    state.activeCell = payload\n  },\n  'SET_CELL_INPUTTER': (state, { payload }) => {\n    state.cellInputter = payload\n  },\n  'UNSET_CELL_INPUTTER': (state) => {\n    state.cellInputter = null\n  },\n})\n","import { createReducer } from 'redux-starter-kit'\n\n\nconst INITIAL_STATE = {}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_CELL_DATA': (state, { payload }) => {\n    const { location, data } = payload\n    state[location] = data\n  },\n\n  'DELETE_CELL_DATA': (state, { payload }) => {\n    delete state[payload]\n  }\n})\n","import { configureStore } from 'redux-starter-kit'\n\nimport globalReducer from './globalReducer'\nimport tableReducer from './tableReducer'\n\n\nconst appStoreGen = () => (\n  configureStore({\n    reducer: {\n      global: globalReducer,\n      table: tableReducer,\n    }\n  })\n)\n\nconst appStore = appStoreGen()\n\n\nexport default appStore\nexport { appStoreGen }\n","import { createAction } from 'redux-starter-kit'\n\n\nexport const setActiveCell = createAction('SET_ACTIVE_CELL')\nexport const displayCellInputter = createAction('SET_CELL_INPUTTER')\nexport const closeCellInputter = createAction('UNSET_CELL_INPUTTER')\n","import appStore from '~/reducers/'\nimport { clearCellData, replaceCellData } from '~/actions/tableActions'\n\n\nclass ReduxConnect {\n  constructor(store=appStore) {\n    const { global: globalState } = store.getState()\n    this.store = store\n    this.rows = globalState.rows\n    this.columns = globalState.columns\n  }\n\n  get table() {\n    return this.store.getState().table\n  }\n\n  get locations() {\n    return Object.keys(this.table)\n  }\n\n  getCellResult(location) {\n    const data = this.table[location]\n    return data && data.result\n  }\n\n  replaceCellData(location, entered, result) {\n    this.store.dispatch(replaceCellData(location, entered, result))\n  }\n\n  clearCell(location) {\n    this.store.dispatch(clearCellData(location))\n  }\n}\n\nexport default ReduxConnect\nexport { appStore }\n","import { TOKENS as t } from './Lexer'\n\n\nclass AST {\n  constructor(name) {\n    this._name = name\n  }\n\n  eval() {\n    throw new Error('Implement method.')\n  }\n}\n\nclass TextNode extends AST {\n  constructor(textNode) {\n    super('TextNode')\n    this.node = textNode\n  }\n\n  eval() {\n    return this.node.text\n  }\n}\n\nclass StringNode extends AST {\n  constructor(node) {\n    super('StringNode')\n    this.node = node\n  }\n\n  eval() {\n    return this.node.value\n  }\n}\n\nclass NumberNode extends AST {\n  constructor(node) {\n    super('NumberNode')\n    this.node = node\n  }\n\n  eval() {\n    return this.node.value\n  }\n}\n\nclass CellNode extends AST {\n  constructor(token) {\n    super('CellNode')\n    this.cell = token\n  }\n\n  get location() {\n    return this.cell.value\n  }\n}\n\nclass CellRange extends AST {\n  constructor(leftCell, rightCell) {\n    super('CellRange')\n    this.leftCell = leftCell\n    this.rightCell = rightCell\n  }\n}\n\nclass UnaryOp extends AST {\n  constructor(opNode, expr) {\n    super('UnaryOp')\n    this.opNode = opNode\n    this.expr = expr\n  }\n\n  eval(evaluatedExpr) {\n    if (this.opNode.type === t.PLUS) {\n      return evaluatedExpr\n    } else if (this.opNode.type === t.MINUS) {\n      return -evaluatedExpr\n    }\n  }\n}\n\nclass FuncOp extends AST {\n  constructor(funcNode, argNodes) {\n    super('FuncOp')\n    this.funcNode = funcNode\n    this.argNodes = argNodes\n  }\n\n  eval(evaluatedArgs) {\n    const fn = this.funcNode.value\n    return fn(...evaluatedArgs)\n  }\n}\n\nclass BinaryOp extends AST {\n  constructor(leftNode, opNode, rightNode) {\n    super('BinaryOp')\n    this.leftNode = leftNode\n    this.opNode = opNode\n    this.rightNode = rightNode\n  }\n\n  eval(left, right) {\n    switch(this.opNode.type) {\n      case t.PLUS:\n        return left + right\n      case t.MINUS:\n        return left - right\n      case t.DIV:\n        if (right === 0) {\n          throw new Error(`Division by zero: ${left}/${right}`)\n        } else {\n          return left / right\n        }\n      case t.MULT:\n        return left * right\n      default:\n        throw new Error(`Unsupported operator \"${this.token.text}\"`)\n    }\n  }\n}\n\nexport {\n  TextNode,\n  StringNode,\n  NumberNode,\n  CellNode,\n  CellRange,\n  BinaryOp,\n  UnaryOp,\n  FuncOp,\n}\n","import { TOKENS as t } from './Lexer'\nimport {\n  TextNode,\n  StringNode,\n  NumberNode,\n  CellNode,\n  CellRange,\n  BinaryOp,\n  UnaryOp,\n  FuncOp\n} from './ast'\n\n\nclass Parser {\n  constructor(tokens) {\n    this.index = 0\n    this.tokens = tokens\n    this.curr = this.tokens[0]\n    this.ast = null\n  }\n\n  parse() {\n    switch (this.peekType()) {\n      case t.TEXT:\n        this.ast = this.text()\n        break\n      case t.NUMBER:\n        this.ast = this.number()\n        break\n      default:\n        this.equals()\n        this.ast = this.expr()\n        break\n    }\n\n    if (this.curr !== null) {\n      throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n    }\n\n    return this.ast\n  }\n\n  expr() {\n    // expr : term ( ( PLUS | MINUS ) term ) *\n    let node, operator, right\n\n    node = this.term()\n\n    while ( [t.PLUS, t.MINUS].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.term()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  term() {\n    // term : factor ( ( MULT | DIV ) factor ) *\n    let node, operator, right\n\n    node = this.factor()\n\n    while ( [t.MULT, t.DIV].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.factor()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  factor() {\n    // factor : ( PLUS | MINUS ) ( NUMBER | CELL )\n    //          | LPAREN expr RPAREN\n    //          | FUNCTION LPAREN list RPAREN\n    switch (this.peekType()) {\n      case t.LPAREN:\n        return this.enclosedExpr()\n      case t.PLUS:\n      case t.MINUS:\n        return this.unaryOp()\n      case t.NUMBER:\n        return this.number()\n      case t.CELL:\n        return this.cell()\n      case t.FUNCTION:\n        return this.func()\n      case t.RPAREN:\n        throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n      default:\n        throw new Error('Missing factor')\n    }\n  }\n\n  enclosedExpr() {\n    this.lparen()\n    const node = this.expr()\n    this.rparen()\n    return node\n  }\n\n  cell() {\n    if (this.peekType() !== t.CELL) {\n      throw new Error('Missing cell node')\n    }\n\n    const node = new CellNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  cellRange() {\n    let left, right\n\n    if (!this.isCellRange()) {\n      throw new Error('Missing cell range')\n    }\n\n    left = new CellNode(this.curr)\n    this.consume() // skip colon\n    this.consume()\n    right = new CellNode(this.curr)\n    this.consume()\n\n    if (right.location < left.location) {\n      [left, right] = this.invertCellRange(left, right)\n    }\n\n    return new CellRange(left, right)\n  }\n\n  invertCellRange(left, right) {\n    this.tokens[this.index - 2] = right.cell\n    this.tokens[this.index] = left.cell\n    let temp = left\n    left = right\n    right = temp\n    return [left, right]\n  }\n\n  func() {\n    if (this.peekType() !== t.FUNCTION) {\n      throw new Error('Missing function')\n    }\n\n    const func = this.curr\n    this.consume()\n    this.lparen()\n    const args = this.list()\n    this.rparen()\n    return new FuncOp(func, args)\n  }\n\n  list() {\n    const list = []\n    let node\n\n    node = this.listNode()\n    list.push(node)\n\n    while (this.peekType() === t.COMMA) {\n      this.consume() // skip comma token\n      node = this.listNode()\n      list.push(node)\n    }\n\n    return list\n  }\n\n  listNode() {\n    if (this.isCellRange()) {\n      return this.cellRange()\n    } else if (this.peekType() === t.STRING) {\n      return this.string()\n    } else {\n      return this.expr()\n    }\n  }\n\n  text() {\n    let node\n\n    if (this.peekType() !== t.TEXT) {\n      throw new Error('Missing string')\n    }\n\n    node = new TextNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  string() {\n    const node = new StringNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  number() {\n    if (this.peekType() === t.NUMBER) {\n      const node = new NumberNode(this.curr)\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing number')\n    }\n  }\n\n  operator() {\n    if ([t.PLUS, t.MINUS, t.MULT, t.DIV].includes(this.peekType())) {\n      const node = this.curr\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing operator')\n    }\n  }\n\n  equals() {\n    if (this.peekType() !== t.EQUALS) {\n      throw new Error('Missing equals sign')\n    }\n\n    this.consume()\n  }\n\n  lparen() {\n    if (this.peekType() !== t.LPAREN) {\n      throw new Error('Missing left parenthesis')\n    }\n\n    this.consume()\n  }\n\n  rparen() {\n    if (this.peekType() !== t.RPAREN) {\n      throw new Error('Missing right parenthesis')\n    }\n\n    this.consume()\n  }\n\n  unaryOp() {\n    if (![t.PLUS, t.MINUS].includes(this.peekType())) {\n      throw new Error('Missing unary operator')\n    }\n\n    const curr = this.curr\n    this.consume()\n    const node = new UnaryOp(curr, this.factor())\n    return node\n  }\n\n  consume() {\n    if (this.index < this.tokens.length - 1) {\n      this.index++\n      this.curr = this.tokens[this.index]\n    } else {\n      this.curr = null\n    }\n  }\n\n  isCellRange() {\n    return (\n      this.peekType(0) === t.CELL\n      && this.peekType(1) === t.COLON\n      && this.peekType(2) === t.CELL\n    )\n  }\n\n  isString() {\n    return (\n      this.peekType(0) === t.DQUOTE\n      && this.peekType(1) === t.TEXT\n      && this.peekType(2) === t.DQUOTE\n    )\n  }\n\n  peekType(stepsAhead) {\n    if (stepsAhead) {\n      if (stepsAhead < 0) {\n        throw new Error('peak ahead index must be positive')\n      }\n\n      const index = this.index + stepsAhead\n\n      if (index < this.tokens.length) {\n        return this.tokens[index].type\n      }\n    } else {\n      return this.curr && this.curr.type\n    }\n  }\n}\n\nexport default Parser\n","import { Lexer } from './Lexer'\nimport { parseLocation, getColumnLabel } from '~/library/utils'\nimport graph from '~/formulas/graph'\nimport Parser from './Parser'\nimport ReduxConnect from './ReduxConnect'\n\n\nconst ERR_DIVISION_BY_ZERO = '#DIV/0!'\nconst ERR_CIRCULAR_REFERENCE = '#REF!'\nconst ERR_GENERIC = '#ERROR!'\n\nclass Interpreter {\n  constructor(location) {\n    this.location = location\n    this.error = null\n    this.cache = {}\n    this.result = null\n    this.state = new ReduxConnect()\n  }\n\n  interpret(input) {\n    const vertex = graph.addVertex(this.location, input)\n    let lexer, parser\n\n    try {\n      lexer = new Lexer(input)\n      parser = new Parser( lexer.getTokens() )\n      vertex.ast = parser.parse()\n      graph.recalculate(this.location)\n      this.result = vertex.result\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      return this.result\n    }\n\n    this.error = vertex.error\n    return this.result\n  }\n\n  visitAST(location) {\n    const vertex = graph.getVertex(location)\n\n    if (!vertex.ast) {\n      return vertex.result\n    }\n\n    try {\n      this.result = vertex.result = this.visitNode(vertex.ast)\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      throw error\n    }\n\n    return this.result\n  }\n\n  visitNode(node) {\n    switch (node._name) {\n      case 'NumberNode':\n        return this.NumberNode(node)\n      case 'CellNode':\n        return this.CellNode(node)\n      case 'TextNode':\n        return this.TextNode(node)\n      case 'StringNode':\n        return this.StringNode(node)\n      case 'CellRange':\n        return this.CellRange(node)\n      case 'FuncOp':\n        return this.FuncOp(node)\n      case 'BinaryOp':\n        return this.BinaryOp(node)\n      case 'UnaryOp':\n        return this.UnaryOp(node)\n      default:\n        const nodeName = node._name || (node.constructor || {}).name\n        throw new Error(`Unrecognized AST node ${nodeName}`)\n    }\n  }\n  \n  /* ***************************************\n   * Nodes that don't require processing\n   ****************************************/\n\n  TextNode(node) {\n    return node.eval()\n  }\n\n  StringNode(node) {\n    return node.eval()\n  }\n\n  NumberNode(node) {\n    return node.eval()\n  }\n\n  /* ***************************************\n   * Nodes requiring processing\n   ****************************************/\n\n  UnaryOp(node) {\n    const result = this.visitNode(node.expr)\n    return node.eval(result)\n  }\n\n  CellNode(node) {\n    const result = this.getCellResult(node.location)\n    return result === undefined\n      ? 0\n      : result\n  }\n\n  BinaryOp(node) {\n    const left = this.visitNode(node.leftNode)\n    const right = this.visitNode(node.rightNode)\n    return node.eval(left, right)\n  }\n\n  CellRange(node) {\n    const [leftColIndex, leftRowIndex] = parseLocation(node.leftCell.location)\n    const [rightColIndex, rightRowIndex] = parseLocation(node.rightCell.location)\n    const colIndexStart = Math.min(leftColIndex, rightColIndex)\n    const colIndexEnd = Math.max(leftColIndex, rightColIndex)\n    const rowIndexStart = Math.min(leftRowIndex, rightRowIndex)\n    const rowIndexEnd = Math.max(leftRowIndex, rightRowIndex)\n    const list = []\n\n    for (let rowI = rowIndexStart; rowI <= rowIndexEnd; rowI++) {\n      for (let colI = colIndexStart; colI <= colIndexEnd; colI++) {\n        const location = `${getColumnLabel(colI)}-${rowI + 1}`\n        const result = this.getCellResult(location)\n\n        if (result !== undefined) {\n          list.push(result)\n        }\n      }\n    }\n\n    return list\n  }\n\n  getCellResult(otherLocation) {\n    let result\n\n    if (!this.isLocationValid(otherLocation)) {\n      throw new Error('Location out of bounds')\n    }\n\n    if (this.cache[otherLocation] !== undefined) {\n      return this.cache[otherLocation]\n    }\n\n    result = graph.visitCell(otherLocation)\n    this.cache[otherLocation] = result\n    return result\n  }\n\n  FuncOp(node) {\n    const evaluatedArgs = []\n\n    for (let childNode of node.argNodes) {\n      const result = this.visitNode(childNode)\n\n      if (childNode._name === 'CellRange') {\n        evaluatedArgs.push(...result)\n      } else {\n        evaluatedArgs.push(result)\n      }\n    }\n\n    return node.eval(evaluatedArgs)\n  }\n\n  isLocationValid(location) {\n    const [colIndex, rowIndex] = parseLocation(location)\n\n    if (Math.min(colIndex, rowIndex) < 0) { return false }\n    if (colIndex >= this.state.columns) { return false }\n    if (rowIndex >= this.state.rows) { return false }\n    return true\n  }\n\n  errorResponse() {\n    const { message: errorMsg } = this.error\n\n    if (errorMsg.match(/division by zero/i)) {\n      return ERR_DIVISION_BY_ZERO\n    } else if (errorMsg.match(/circular reference/i)) {\n      return ERR_CIRCULAR_REFERENCE\n    } else {\n      return ERR_GENERIC\n    }\n  }\n}\n\nexport default Interpreter\nexport {\n  ERR_DIVISION_BY_ZERO,\n  ERR_CIRCULAR_REFERENCE,\n  ERR_GENERIC,\n}\n","import ReduxConnect from './ReduxConnect'\nimport Interpreter from './Interpreter'\n\n\nclass Vertex {\n  constructor(entered) {\n    this.entered = entered\n    this.error = null\n    this.result = null\n    this.ast = null\n  }\n}\n\nclass Graph {\n  constructor() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  recalculate(location) {\n    this.setPendingNodes()\n    this.dfs(location)\n    this.updateStore()\n  }\n\n  setPendingNodes() {\n    this.pending = new Set()\n\n    Object.keys(this.adj).forEach(vertex => {\n      this.pending.add(vertex)\n    })\n  }\n\n  dfs(location) {\n    while (this.pending.size > 0) {\n      if (!location) {\n        location = [...this.pending][0]\n      }\n\n      try {\n        this.visited = new Set([location])\n        const interpreter = new Interpreter(location)\n        interpreter.visitAST(location)\n      } catch (error) {}\n\n      this.visited.forEach(location => this.pending.delete(location))\n      location = null\n    }\n\n    this.visited = null\n    this.pending = null\n  }\n\n  visitCell(location) {\n    if (!this.hasVertex(location)) {\n      return\n    }\n\n    this.testPathCycle(location)\n    this.pending.delete(location)\n    this.visited.add(location)\n    const interpreter = new Interpreter(location)\n    const result = interpreter.visitAST(location)\n    this.visited.delete(location)\n    return result\n  }\n\n  getCellResult(location) {\n    if (location in this.adj) {\n      return graph.adj[location].result\n    } else {\n      return ''\n    }\n  }\n\n  testPathCycle(location) {\n    if (this.visited.has(location)) {\n      throw new Error('Circular reference')\n    }\n  }\n\n  updateStore() {\n    const locationKeys = new Set(this.store.locations)\n\n    for (let [location, vertex] of Object.entries(this.adj)) {\n      const { entered, result } = vertex\n\n      locationKeys.delete(location)\n\n      if (result !== this.store.getCellResult(location)) {\n        this.store.replaceCellData(location, entered, result)\n      }\n    }\n\n    for (let location of locationKeys) {\n      this.store.clearCell(location)\n    }\n  }\n\n  addVertex(location, entered) {\n    const vertex = new Vertex(entered)\n    this.adj[location] = vertex\n    return vertex\n  }\n\n  hasVertex(location) {\n    return location in this.adj\n  }\n\n  getVertex(location) {\n    this.testMissingLocation(location)\n    return this.adj[location]\n  }\n\n  delVertex(location) {\n    if (location in this.adj) {\n      delete this.adj[location]\n      this.recalculate()\n    }\n  }\n\n  resetAll() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  testMissingLocation(location) {\n    if (!this.hasVertex(location)) {\n      throw new Error('Missing location')\n    }\n  }\n}\n\nconst graph = new Graph()\n\n\nexport default graph\nexport {\n  Vertex,\n  Graph,\n}\n","import graph from '~/formulas/graph'\nimport Interpreter from '../formulas/Interpreter'\n\n\nexport function setCellData(location, entered) {\n  const interpreter = new Interpreter(location)\n  const result = interpreter.interpret(entered)\n\n\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function replaceCellData(location, entered, result) {\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function clearCellData(location) {\n  return (dispatch, getState) => {\n    const value = getState().table[location]\n\n    graph.delVertex(location)\n\n    if (value === undefined) {\n      return Promise.resolve()\n    }\n\n\n    return Promise.resolve(dispatch({\n      type: 'DELETE_CELL_DATA',\n      payload: location,\n    }))\n  }\n}\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { css, jsx } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { setCellData, clearCellData } from '~/actions/tableActions'\nimport { parseLocation, getColumnLabel } from '~/library/utils'\nimport Lexer from '~/formulas/Lexer'\nimport Suggestions from './Suggestions'\nimport { InputContext } from './InputContext'\nimport { closeCellInputter } from '~/actions/globalActions'\n\n\nconst INPUT_PADDING_RIGHT = 15\n\nconst Root = styled.div`\n  position: fixed;\n`\n\nconst Input = styled.input`\n  align-items: center;\n  background-color: white;\n  border: 2px solid salmon;\n  box-shadow: 0 0 5px ${props => props.theme.colors.shadow};\n  box-sizing: border-box;\n  display: flex;\n  font-size: 13px;\n  height: 100%;\n  outline: none;\n  padding: 2px;\n  width: 100%;\n`\n\nconst HiddenInput = styled(Input)`\n  position: absolute;\n  margin-top: -100vh;\n  visibility: hidden;\n`\n\nexport class CellInputter extends React.PureComponent {\n\n  static propTypes = {\n    // redux\n    cellRect: PropTypes.object.isRequired,\n    clearCellData: PropTypes.func.isRequired,\n    closeCellInputter: PropTypes.func.isRequired,\n    columns: PropTypes.number.isRequired,\n    entered: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    rows: PropTypes.number.isRequired,\n    setCellData: PropTypes.func.isRequired,\n    willReplaceValue: PropTypes.bool.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.setIsFuncSelectorVisible = this.setIsFuncSelectorVisible.bind(this)\n    this.setInputValue = this.setInputValue.bind(this)\n  }\n\n  state = {\n    tokens: [],\n    isFuncSelectorVisible: false,\n    inputValue: '',\n    keyEvent: { key: '' },\n    cursorPos: 0,\n  }\n\n  refInput = React.createRef()\n  refHiddenInput = React.createRef()\n\n  componentDidMount() {\n    const entered = this.props.willReplaceValue ? '' : this.props.entered\n    this.focusInputTag()\n    this.setInputValue(entered)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.keyEvent !== this.state.keyEvent) {\n      this.setFocus(this.state.keyEvent.key)\n      this.keyActions()\n    }\n\n    if (prevState.inputValue !== this.state.inputValue) {\n      this.tokenizeInputValue()\n    }\n  }\n\n  keyActions() {\n    const { key } = this.state.keyEvent\n\n    if (this.state.isFuncSelectorVisible) {\n      switch (key) { // eslint-disable-line\n        case 'Escape':\n          this.props.closeCellInputter()\n          break\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          this.setState({ cursorPos: this.refInput.current.selectionEnd })\n      }\n    } else {\n      switch (key) { // eslint-disable-line\n        case 'Escape':\n          this.props.closeCellInputter()\n          break\n        case 'Enter':\n          this.setCellValue()\n          this.props.closeCellInputter()\n          break\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          this.setState({ cursorPos: this.refInput.current.selectionEnd })\n      }\n    }\n  }\n\n  tokenizeInputValue() {\n    const { inputValue } = this.state\n    const lexer = new Lexer(inputValue)\n    const tokens = lexer.getTokens()\n    this.setState({ tokens })\n  }\n\n  focusInputTag() {\n    const inputEl = this.refInput.current\n\n    setImmediate(() => {\n      inputEl.focus()\n      inputEl.selectionStart = inputEl.value.length\n    })\n  }\n\n  setFocus() {\n    const { keyEvent: { key } } = this.state\n    const { location } = this.props\n    const [colIndex, rowIndex] = parseLocation(location)\n    let el, elId\n\n    if (this.state.isFuncSelectorVisible) {\n      if (key === 'Escape') {\n        elId = `[data-cell=\"result\"][data-location=\"${location}\"]`\n      } else {\n        return\n      }\n    } else {\n      if (key === 'Tab') {\n        elId = `[data-cell=\"result\"][data-location=\"${location}\"]`\n      } else if (key === 'Enter') {\n        const nextRowIndex = Math.min(this.props.rows - 1, rowIndex + 1)\n        const colLabel = getColumnLabel(colIndex)\n        const rowLabel = '' + (nextRowIndex + 1)\n        const endLocation = `${colLabel}-${rowLabel}`\n        elId = `[data-cell=\"result\"][data-location=\"${endLocation}\"]`\n      } else if (key === 'Escape') {\n        elId = `[data-cell=\"result\"][data-location=\"${location}\"]`\n      } else {\n        elId = `[data-cell=\"input\"][data-location=\"${location}\"]`\n      }\n    }\n\n    el = document.querySelector(elId)\n    if (document.activeElement !== el) { el.focus() }\n  }\n\n  setCellValue() {\n    const { location } = this.props\n    const { inputValue } = this.state\n\n    if (this.isWhitespace(inputValue)) {\n      this.props.clearCellData(location)\n      return\n    }\n\n    const cellValue = inputValue.length > 0 && inputValue[0] === '='\n      // ? inputValue.toUpperCase()\n      ? inputValue\n      // NOTE: fix!!\n      : inputValue\n\n    this.props.setCellData(location, cellValue)\n  }\n\n  isWhitespace(text) {\n    return text.length === 0 || Boolean(text.match(/^\\s+$/))\n  }\n\n  setIsFuncSelectorVisible(isFuncSelectorVisible) {\n    this.setState({ isFuncSelectorVisible })\n  }\n\n  setInputValue(inputValue, cursorPos) {\n    const inputEl = this.refInput.current\n\n    this.setState({ inputValue, cursorPos: inputValue.length }, () => {\n      inputEl.focus()\n      inputEl.selectionStart = cursorPos\n      inputEl.selectionEnd = cursorPos\n    })\n  }\n\n  handleOnChange(event) {\n    const { target: { value } } = event\n    const cursorPos = event.target.selectionStart\n    this.setState({ inputValue: value, cursorPos })\n  }\n\n  handleOnKeyDown(event) {\n    const { key, target: { value } } = event\n\n    if (this.state.isFuncSelectorVisible && key === 'Tab') {\n      event.preventDefault()\n    }\n\n    this.setState({ keyEvent: { key }, inputValue: value })\n  }\n\n  handleOnBlur(event) {\n    if (this.state.isFuncSelectorVisible) { return }\n\n    this.setState({ inputValue: event.target.value }, () => {\n      this.setCellValue()\n      this.props.closeCellInputter()\n    })\n  }\n\n  getRootStyle() {\n    const { top, left, width: cellWidth, height: cellHeight } = this.props.cellRect\n    const { current: hiddenInputEl } = this.refHiddenInput\n    let width, height\n\n    if (hiddenInputEl) {\n      const textWidth = hiddenInputEl.scrollWidth\n      const hiddenRect = hiddenInputEl.getBoundingClientRect()\n      width = textWidth > hiddenRect.width\n        ? Math.max(cellWidth, textWidth + INPUT_PADDING_RIGHT)\n        : cellWidth\n      height = cellHeight\n    } else {\n      width = cellWidth\n      height = cellHeight\n    }\n\n\n    return {\n      top,\n      left,\n      height,\n      width,\n    }\n  }\n\n  render() {\n    const inputEl = this.refInput.current\n    const { width, height } = this.props.cellRect\n\n    if (!this.props.location) { return null }\n\n    return (\n      <InputContext.Provider\n        value={{\n          inputRect: inputEl && inputEl.getBoundingClientRect(),\n          setIsFuncSelectorVisible: this.setIsFuncSelectorVisible,\n          setInputValue: this.setInputValue,\n          keyEvent: this.state.keyEvent,\n          inputValue: this.state.inputValue,\n        }}\n      >\n        <Root\n          css={this.getRootStyle()}\n        >\n          <HiddenInput\n            ref={this.refHiddenInput}\n            defaultValue={this.state.inputValue}\n            css={{\n              width: width - INPUT_PADDING_RIGHT,\n              height,\n            }}\n          />\n          <Input\n            ref={this.refInput}\n            data-cell='input'\n            data-location={this.props.location}\n            value={this.state.inputValue}\n            onChange={this.handleOnChange}\n            onKeyDown={this.handleOnKeyDown}\n            onBlur={this.handleOnBlur}\n          />\n          <Suggestions\n            tokens={this.state.tokens}\n            cursorPos={this.state.cursorPos}\n          />\n        </Root>\n      </InputContext.Provider>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {\n    global: {\n      cellInputter: {\n        location, willReplaceValue, cellRect\n      },\n      rows,\n      columns,\n    }\n  } = state\n  const cell = state.table[location]\n  const entered = cell ? cell.entered : ''\n\n  return { location, willReplaceValue, cellRect, entered, rows, columns }\n}\n\nconst mapDispatchToProps = { setCellData, clearCellData, closeCellInputter }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CellInputter)\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport { InputContext } from './InputContext'\n\n\nconst Root = styled.div`\n  background: ${props => props.theme.colors.dropdown.normal};\n  margin-top: 1px;\n  box-shadow: 0 0 5px ${props => props.theme.colors.shadow};\n  border: 1px solid ${props => props.theme.colors.dropdown.active};\n  width: 300px;\n  padding: 6px 8px;\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  padding-top: 12px;\n  font-size: 12px;\n`\n\nconst P = styled.p`\n  line-height: 1em;\n  font-size: 13px;\n`\n\nconst Hr = styled.hr`\n  border: 0;\n  border-top: 1px solid ${props => props.theme.colors.dropdown.active};\n`\n\nclass FuncDescription extends React.PureComponent {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    cursorPos: PropTypes.number,\n    fnScopes: PropTypes.array,\n  }\n\n  getFnScope() {\n    const { fnScopes, cursorPos } = this.props\n    let currScope\n\n    for (let scope of fnScopes) {\n      if (cursorPos >= scope.startIndex + 1) {\n        currScope = scope\n      } else {\n        break\n      }\n    }\n\n    if (currScope && currScope.endIndex === null) { return currScope}\n    if (currScope && cursorPos - 1 < currScope.endIndex) { return currScope }\n    return null\n  }\n\n  getFnNode(scope) {\n    const key = scope.fnName.toUpperCase()\n    return formulaFuncs[key]\n  }\n\n  render() {\n    const scope = this.getFnScope()\n    const { inputRect } = this.context\n    if (!inputRect) { return null }\n    const { bottom: top, left } = inputRect\n    let fnNode\n\n    if (!scope) { return null }\n    fnNode = this.getFnNode(scope)\n\n    return (\n      <Root\n        css={{ top, left }}\n      >\n        <Pre\n          css={css`\n            padding-bottom: 6px;\n          `}\n        >\n          {fnNode.definition}\n        </Pre>\n        <Hr />\n        <Subtitle>Example</Subtitle>\n        <Pre>{fnNode.example}</Pre>\n        <Subtitle>Summary</Subtitle>\n        <P>{fnNode.summary}</P>\n      </Root>\n    )\n  }\n}\n\nFuncDescription.propTypes = {\n  cursorPos: PropTypes.number,\n  fnScopes: PropTypes.array,\n}\n\nexport default FuncDescription\n\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport styled from '@emotion/styled'\n\n\nconst NoOp = () => {}\n\nconst Li = styled.li`\n  outline: none;\n`\n\nfunction DropdownItem({ item, index, isActive, onMouseEnter }) {\n  return (\n    <Li\n      tabIndex={0}\n      onMouseEnter={() => onMouseEnter(index)}\n    >\n      {isActive && item.active ? item.active : item.base}\n    </Li>\n  )\n}\n\nDropdownItem.propTypes = {\n  item: PropTypes.shape({\n    base: PropTypes.node.isRequired,\n    active: PropTypes.node,\n  }),\n  index: PropTypes.number.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  onMouseEnter: PropTypes.func,\n}\n\nDropdownItem.defaultProps = {\n  onMouseEnter: NoOp,\n}\n\nexport default DropdownItem\n","\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport InteractiveListItem from './InteractiveListItem'\n\n\nconst Ul = styled.ul`\n  position: fixed;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`\n\nclass InteractiveList extends React.PureComponent {\n\n  static propsTypes = {\n    onMouseEnter: PropTypes.func,\n    items: PropTypes.array.isRequired,\n    top: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    styles: PropTypes.shape({\n      ul: PropTypes.object,\n      li: PropTypes.object,\n    }),\n  }\n\n  renderListItems() {\n    return this.props.items\n      .map((item, index) => (\n        <InteractiveListItem\n          key={index}\n          index={index}\n          item={item.item}\n          style={{...this.props.styles.li}}\n          isActive={item.isActive}\n          onMouseEnter={this.props.onMouseEnter}\n        />\n      ))\n  }\n\n  render() {\n    const { items, top, left, styles } = this.props\n\n    if (items.length === 0) { return null }\n\n    return (\n      <Ul\n        tabIndex={-1}\n        style={{ top, left, ...styles.ul }}\n      >\n        {this.renderListItems()}\n      </Ul>\n    )\n  }\n}\n\nexport default InteractiveList\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport InteractiveList from '~/library/InteractiveList'\nimport Token from '~/formulas/Token'\nimport { InputContext } from './InputContext'\nimport { withTheme } from 'emotion-theming'\n\n\nconst Dialog = styled.dialog`\n  border: 0;\n`\n\nconst baseItemStyle = css`\n  padding: 6px 8px;\n`\n\nconst ItemBaseRoot = styled.div`\n  ${baseItemStyle}\n  background: ${props => props.theme.colors.dropdown.normal};\n`\n\nconst ItemActiveRoot = styled.div`\n  ${baseItemStyle}\n  background: ${props => props.theme.colors.dropdown.active};\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  font-size: 12px;\n`\n\nclass FuncSelector extends React.Component {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    token: PropTypes.instanceOf(Token),\n    colors: PropTypes.object,\n    theme: PropTypes.object,\n  }\n\n  state = {\n    listItems: [],\n    itemIndex: 0,\n    keyEvent: null,\n    isVisible: false,\n  }\n\n  constructor() {\n    super()\n    this.handleOnClick = this.handleOnClick.bind(this)\n    this.setIndex = this.setIndex.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.state.listItems !== nextState.listItems\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.updateContextData(prevState)\n    this.updateListItems(prevProps)\n    this.keyActions()\n  }\n\n  componentWillUnmount() {\n    this.context.setIsFuncSelectorVisible(false)\n  }\n\n  updateListItems(prevProps) {\n    if (prevProps.token === this.props.token) { return }\n\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  updateContextData(prevState) {\n    const { keyEvent } = this.context\n\n    if (prevState.keyEvent !== keyEvent) {\n      this.setState({ keyEvent })\n      this.keyEventSetIndex(keyEvent)\n    }\n  }\n\n  keyActions() {\n    const { keyEvent } = this.context\n    if (this.state.keyEvent === keyEvent) { return }\n    if (['Enter', 'Tab'].includes(keyEvent.key) && this.state.isVisible) {\n      this.updateInputValue()\n    }\n  }\n\n  updateInputValue() {\n    const currInputValue = this.context.inputValue\n    const { token } = this.props\n    const { fnName } = this.state.listItems[this.state.itemIndex]\n    const rightChunkIndex = token.index + token.text.length\n    const leftChunk = currInputValue.slice(0, token.index)\n    const rightChunk = currInputValue.slice(rightChunkIndex)\n    const newInputValue = `${leftChunk}${fnName}(${rightChunk}`\n    const cursorPos = leftChunk.length + fnName.length + 1\n    this.context.setInputValue(newInputValue, cursorPos)\n  }\n\n  setListItems() {\n    const { token } = this.props\n    const text = token.text.toUpperCase()\n    const listItems = Object\n      .keys(formulaFuncs)\n      .filter(fnName => fnName.startsWith(text))\n      .sort()\n      .map(fnName => ({\n        item: {\n          base: this.itemBase(fnName),\n          active: this.itemActive(fnName),\n        },\n        isActive: false,\n        fnName,\n      }))\n    let isVisible = false\n    let itemIndex\n\n    itemIndex = Math.max(Math.min(listItems.length - 1, this.state.itemIndex), 0)\n\n    if (listItems.length > 0) {\n      listItems[itemIndex].isActive = isVisible = true\n    }\n\n    this.context.setIsFuncSelectorVisible(isVisible)\n    this.setState({ listItems, itemIndex, isVisible })\n  }\n\n  keyEventSetIndex(keyEvent) {\n    let itemIndex = this.state.itemIndex\n\n    switch (keyEvent.key) { // eslint-disable-line default-case\n      case 'ArrowUp':\n          itemIndex = this.state.itemIndex - 1\n        break\n      case 'ArrowDown':\n          itemIndex = this.state.itemIndex + 1\n        break\n    }\n\n    this.setState({ itemIndex }, () => {\n      this.setListItems()\n    })\n  }\n\n  setIndex(itemIndex) {\n    this.setState({ itemIndex }, () => {\n      this.setListItems()\n    })\n  }\n\n  itemBase(fnName) {\n    return (\n      <ItemBaseRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n      </ItemBaseRoot>\n    )\n  }\n\n  itemActive(fnName) {\n    return (\n      <ItemActiveRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n        <Subtitle>\n          {formulaFuncs[fnName].summary}\n        </Subtitle>\n      </ItemActiveRoot>\n    )\n  }\n\n  getListStyles() {\n    const { theme } = this.props\n\n    return {\n      ul: {\n        marginTop: 1,\n        boxShadow: `0 0 5px ${theme.colors.shadow}`,\n        border: `1px solid ${theme.colors.dropdown.active}`,\n        width: 300,\n      }\n    }\n  }\n\n  handleOnClick() {\n    this.updateInputValue()\n  }\n\n  render() {\n    const { listItems, isVisible } = this.state\n    const { inputRect } = this.context\n\n    return (\n      <Dialog\n        open={isVisible}\n        onClick={this.handleOnClick}\n      >\n        <InteractiveList\n          items={listItems}\n          top={Math.round(inputRect.bottom)}\n          left={Math.round(inputRect.left)}\n          styles={this.getListStyles()}\n          onMouseEnter={this.setIndex}\n        />\n      </Dialog>\n    )\n  }\n}\n\nexport default withTheme(FuncSelector)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { TOKENS as t } from '~/formulas/Lexer'\nimport FuncDescription from './FuncDescription'\nimport FuncSelector from './FuncSelector'\n\n\nclass Suggestions extends React.PureComponent {\n\n  static propTypes = {\n    tokens: PropTypes.array.isRequired,\n    cursorPos: PropTypes.number,\n  }\n\n  static defaultProps = {\n    cursorPos: 0,\n  }\n\n  state = {\n    fnScopes: [],\n  }\n\n  componentDidMount() {\n    this.setFnScopes()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.tokens !== this.props.tokens) {\n      this.setFnScopes()\n    }\n  }\n\n  setFnScopes() {\n    const stack = []\n    const fnScopes = []\n\n    for (let token of this.props.tokens) {\n      if (token.type === t.FUNCTION) {\n        const scope = { fnName: token.text, startIndex: token.index, endIndex: null }\n        stack.push(scope)\n        fnScopes.push(scope)\n      } else if (token.type === t.LPAREN) {\n        stack.push('(')\n      } else if (token.type === t.RPAREN) {\n        stack.pop()\n        if (stack.length > 0 && stack[stack.length - 1] !== '(') {\n          const scope = stack.pop()\n          scope.endIndex = token.index - 1\n        }\n      }\n    }\n\n    fnScopes.sort((a, b) => a.startIndex - b.startIndex)\n    this.setState({ fnScopes })\n  }\n\n  getCurrTokenIndex(tokens, cursorPos) {\n    let index\n\n    for (index = 0; index < tokens.length; index++) {\n      const token = tokens[index]\n      const endIndex = token.index + token.text.length\n\n      if (cursorPos > token.index && cursorPos <= endIndex) {\n        break\n      }\n    }\n\n    return index\n  }\n\n  getCompareTokens() {\n    const { tokens, cursorPos } = this.props\n    const index = this.getCurrTokenIndex(tokens, cursorPos)\n    const tokenBefore = index > 0 && tokens[index - 1]\n    const tokenCurr = tokens[index]\n    const tokenAfter = index < tokens.length - 2 && tokens[index + 1]\n    return [ tokenBefore, tokenCurr, tokenAfter ]\n  }\n\n  getFuncSelector() {\n    const [ tokenBefore, tokenCurr, tokenAfter ] = this.getCompareTokens()\n\n    if (this.props.tokens.length < 2) { return null }\n\n    const option1 = (\n      tokenBefore\n      && tokenCurr\n      && tokenAfter\n      && tokenBefore.category === 'operator'\n      && [t.UNKNOWN, t.FUNCTION].includes(tokenCurr.type)\n      && tokenAfter.type !== t.RPAREN\n    )\n\n    const option2 = (\n      tokenBefore\n      && tokenCurr\n      && !tokenAfter\n      && [t.UNKNOWN, t.FUNCTION].includes(tokenCurr.type)\n    )\n\n    if (option1 || option2) {\n      return (\n        <FuncSelector\n            token={tokenCurr}\n        />\n      )\n    }\n  }\n\n  render() {\n    const renderedFuncSelector = this.getFuncSelector()\n\n    if (renderedFuncSelector) {\n      return renderedFuncSelector\n    } else {\n      return (\n        <FuncDescription\n          cursorPos={this.props.cursorPos}\n          fnScopes={this.state.fnScopes}\n        />\n      )\n    }\n  }\n}\n\nexport default Suggestions\n","const colors = {\n  text: '#3D3D3D',\n  cell: {\n    border: '#dfdfdf',\n    borderDark: '#CCC',\n    labelBkg: '#F5F5F5'\n  },\n  dropdown: {\n    normal: '#fafafa',\n    active: '#ebebeb',\n  },\n  primary: {\n    strong: '#E10D75'\n  },\n  field: {\n    background: '#F0F0F0',\n  },\n  shadow: '#939393',\n}\n\nconst breaks = {\n  xs: 0,\n  sm: 420,\n  md: 900,\n  lg: 1200,\n}\n\nconst breakBump = {\n  xs: 'sm',\n  sm: 'md',\n  md: 'lg',\n}\n\nconst queries = {\n  xs: `@media (max-width: ${breaks.sm - 1}px)`,\n  sm: `@media (min-width: ${breaks.sm}px) and (max-width: ${breaks.md - 1}px)`,\n  md: `@media (min-width: ${breaks.md}px) and (max-width: ${breaks.lg - 1}px)`,\n  lg: `@media (min-width: ${breaks.lg}px)`,\n  from: (breakPoint) => (`@media (min-width: ${breaks[breakPoint]}px)`),\n  upTo: (breakPoint) => (`@media (max-width: ${breaks[ breakBump[breakPoint] ] - 1}px)`),\n}\n\nconst theme = {\n  colors,\n  breaks,\n  queries,\n}\n\nexport default theme\n","/* @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nimport theme from './theme'\n\n\nconst globalStyles = css`\n  body {\n    color: ${theme.colors.text};\n    line-height: 1.3em;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  table, th, td {\n    border: 0;\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n\n  td {\n    padding: 0;\n    line-height: 1.2em;\n  }\n\n  pre, p, h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n`\n\nexport default globalStyles\n","import React from 'react'\nimport styled from '@emotion/styled'\n\n\nconst Root = styled.header`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0 30px;\n`\n\nfunction Header() {\n  return (\n    <Root>\n      <h3>Spreadsheet App</h3>\n    </Root>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n  font-size: 12px;\n`\n\nfunction ColLabel({ label }) {\n  return (\n    <InnerBorder\n      data-col={label}\n      className='col-label-width col-label-height'\n    >\n      {label}\n    </InnerBorder>\n  )\n}\n\nColLabel.propTypes = {\n  label: PropTypes.string,\n}\n\nexport default ColLabel\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport ColLabel from '../cell/ColLabel'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction ColLabelRow({ colLabels }) {\n  const renderCornerCell = () => (\n    <InnerBorder\n      className='row-label-width col-label-height'\n    />\n  )\n\n  const renderLabelCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => (\n      <ColLabel\n        key={i}\n        label={colLabels[i]}\n      />\n    )\n  ))\n\n  return (\n    <Row\n      data-row='header'\n    >\n      {renderCornerCell()}\n      {renderLabelCells()}\n    </Row>\n  )\n}\n\nColLabelRow.propTypes = {\n  colLabels: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default ColLabelRow\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst Wrapper = styled.div`\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction RowLabel({ label }) {\n  return (\n    <Wrapper\n      data-row={label}\n      className='row-label-width row-label-height'\n    >\n      {label}\n    </Wrapper>\n  )\n}\n\nRowLabel.propTypes = {\n  label: PropTypes.number,\n}\n\nexport default RowLabel\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { clearCellData } from '~/actions/tableActions'\nimport { displayCellInputter, setActiveCell } from '~/actions/globalActions'\n\n\nconst Wrapper = styled.div`\n  cursor: cell;\n  font-size: 13px;\n  border-right: 1px solid ${props => props.theme.colors.cell.border};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.border};\n`\n\nconst Cell = styled.div`\n  display: flex;\n  align-items: center;\n  outline: none;\n  border: 2px solid transparent;\n  line-height: 1.1em;\n  height: 100%;\n  width: 100%;\n  padding: 2px;\n\n  :focus, :focus-within {\n    border: 2px solid salmon;\n  }\n`\n\nexport class ResultCell extends React.PureComponent {\n  static propTypes = {\n    // props\n    // isFocused: PropTypes.bool,\n    location: PropTypes.string.isRequired,\n    // onDoubleClick: PropTypes.func.isRequired,\n    // onKeyDownEditable: PropTypes.func.isRequired,\n    displayCellInputter: PropTypes.func.isRequired,\n    // redux\n    clearCellData: PropTypes.func.isRequired,\n    // setActiveCell: PropTypes.func.isRequired,\n    result: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleCellOnKeyDown = this.handleCellOnKeyDown.bind(this)\n    this.handleCellOnDoubleClick = this.handleCellOnDoubleClick.bind(this)\n    this.handleCellOnClick = this.handleCellOnClick.bind(this)\n    this.handleWrapperOnClick = this.handleWrapperOnClick.bind(this)\n  }\n\n  refCell = React.createRef()\n\n  // componentDidMount() {\n  //   this.focusCell()\n  // }\n\n  // focusCell() {\n  //   if (this.props.isFocused) { this.refCell.current.focus() }\n  // }\n\n  displayCellInputter(willReplaceValue) {\n    const { location } = this.props\n    const cellDomRect = this.refCell.current.getBoundingClientRect()\n    const cellRect = JSON.parse(JSON.stringify(cellDomRect))\n\n    this.props.displayCellInputter({\n      location,\n      willReplaceValue,\n      cellRect,\n    })\n  }\n\n  handleCellOnKeyDown({ key }) {\n    this.props.setActiveCell(this.props.location)\n\n    if (['Delete', 'Backspace'].includes(key)) {\n      const valueStr = '' + this.props.result\n\n      if (valueStr.length > 0) {\n        this.props.clearCellData(this.props.location)\n      }\n      // key pressed is a printable symbol, ex: 'a', '1', ','\n      // can be further refined, but for now it's fine\n    } else if (key.length === 1) {\n      this.displayCellInputter(true)\n    }\n  }\n\n  handleCellOnDoubleClick() {\n    this.displayCellInputter(false)\n  }\n\n  getStyle() {\n    let style = {}\n\n    if (typeof this.props.result === 'number') {\n      style = {\n        whiteSpace: 'nowrap',\n        textOverflow: 'clip',\n        overflow: 'hidden',\n      }\n    }\n\n    return style\n  }\n\n  handleWrapperOnClick() {\n    this.refCell.current.focus()\n  }\n\n  handleCellOnClick(event) {\n    event.stopPropagation()\n  }\n\n  render() {\n    return (\n      <Wrapper\n        className='row-label-height col-label-width'\n        onClick={this.handleWrapperOnClick}\n      >\n        <Cell\n          ref={this.refCell}\n          data-cell='result'\n          data-location={this.props.location}\n          css={this.getStyle()}\n          tabIndex='0'\n          onClick={this.handleCellOnClick}\n          onKeyDown={this.handleCellOnKeyDown}\n          onDoubleClick={this.handleCellOnDoubleClick}\n        >\n          {this.props.result}\n        </Cell>\n      </Wrapper>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const result = cell ? cell.result : ''\n  return { result }\n}\n\nconst mapDispatchToProps = { clearCellData, displayCellInputter, setActiveCell }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultCell)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport RowLabel from '../cell/RowLabel'\n// import CellData from '../cell/CellData'\nimport CellResult from '../cell/CellResult'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\n// function DataRow({ rowNumber, colLabels, activeCell }) {\nfunction DataRow({ rowNumber, colLabels }) {\n  const dataCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => {\n      const location = `${colLabels[i]}-${rowNumber}`\n\n      // return (\n      //   <CellData\n      //     key={i}\n      //     isActive={activeCell === location}\n      //     location={location}\n      //   />\n      // )\n      return (\n        <CellResult\n          key={i}\n          location={location}\n        />\n      )\n    })\n  )\n\n  return (\n    <Row\n      data-row={rowNumber}\n    >\n      <RowLabel\n        label={rowNumber}\n      />\n      {dataCells()}\n    </Row>\n  )\n}\n\nDataRow.propTypes = {\n  rowNumber: PropTypes.number,\n  colLabels: PropTypes.arrayOf(PropTypes.string),\n  // activeCell: PropTypes.string,\n}\n\nexport default DataRow\n\n","import { Machine, assign } from 'xstate'\n\nimport { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nfunction getTargetLocation({ rows, columns, rowIndex, colIndex, key }) {\n  switch (key) {\n    case 'ArrowUp':\n      rowIndex = Math.max(0, rowIndex - 1)\n      break\n    case 'ArrowRight':\n      colIndex = Math.min(columns - 1, colIndex + 1)\n      break\n    case 'ArrowDown':\n    case 'Enter':\n      rowIndex = Math.min(rows - 1, rowIndex + 1)\n      break\n    case 'ArrowLeft':\n      colIndex = Math.max(0, colIndex - 1)\n      break\n    default:\n      return null\n  }\n\n  const colLabel = getColumnLabel(colIndex)\n  const rowLabel = '' + (rowIndex + 1)\n\n  return `${colLabel}-${rowLabel}`\n}\n\nfunction focusTargetCell(ctx) {\n  if (!ctx.endLocation) { return Promise.resolve(false) }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const id = `[data-location=\"${ctx.endLocation}\"]`\n      const cell = document.querySelector(id)\n      if (cell) { cell.focus() }\n      resolve(true)\n    }, 0)\n  })\n}\n\nconst state = {\n  id: 'keyboardNav',\n  initial: 'idle',\n  context: {\n    columns: null,\n    rows: null,\n    key: null,\n    colIndex: null,\n    rowIndex: null,\n    endLocation: null,\n    wasFocused: false,\n  },\n  states: {\n    idle: {\n      on: {\n        'MOVE_FOCUS': {\n          actions: ['setNewContext', 'calcTargetLocation'],\n          target: 'focusTarget',\n        }\n      }\n    },\n    focusTarget: {\n      invoke: {\n        src: focusTargetCell,\n        onDone: {\n          actions: assign({ wasFocused: (ctx, event) => event.data }),\n          target: 'idle',\n        },\n      },\n    },\n  },\n}\n\nconst actions = {\n  actions: {\n    setNewContext: assign((ctx, { key, location }) => {\n      const [colIndex, rowIndex] = parseLocation(location)\n      return { colIndex, rowIndex, key }\n    }),\n    calcTargetLocation: assign({\n      endLocation: (ctx) => {\n        return getTargetLocation(ctx)\n      }\n    }),\n  },\n}\n\nfunction getKeyboardNavMachine(rows, columns) {\n  const newContext = {\n    ...state.context,\n    columns,\n    rows,\n  }\n\n  return Machine(state, actions, newContext)\n}\n\nexport {\n  state,\n  actions,\n  getTargetLocation,\n  focusTargetCell,\n}\n\nexport default getKeyboardNavMachine\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport { interpret } from 'xstate'\n\nimport ColLabelRow from './ColLabelRow'\nimport DataRow from './DataRow'\nimport { getColumnNames } from '~/library/utils'\nimport getKeyboardNavMachine from './keyboardNavMachine'\n\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n  border-top: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-left: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .row-label-width {\n    width: 34px;\n  }\n\n  .row-label-height {\n    min-height: 28px;\n  }\n\n  .col-label-width {\n    width: 140px;\n  }\n\n  .col-label-height {\n    min-height: 26px;\n  }\n`\n\nexport class Table extends React.PureComponent {\n  static propTypes = {\n    activeCell: PropTypes.string,\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleTableOnClick = this.handleTableOnClick.bind(this)\n    this.handleTableOnKeyDown = this.handleTableOnKeyDown.bind(this)\n    this.colLabels = getColumnNames(props.columns)\n  }\n\n  keyboardNavMachine = getKeyboardNavMachine(this.props.rows, this.props.columns)\n  focusService = interpret(this.keyboardNavMachine)\n\n  componentDidMount() {\n    this.focusService.start()\n  }\n\n  componentWillUnmount() {\n    this.focusService.stop()\n  }\n\n  handleTableOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleTableOnKeyDown(event) {\n    event.stopPropagation()\n    this.moveFocus(event.key, event.target.dataset.location)\n  }\n\n  moveFocus(key, location) {\n    this.focusService.send({ type: 'MOVE_FOCUS', key, location })\n  }\n\n  renderColLabelRow(i) {\n    return (\n      <ColLabelRow\n        key={i}\n        rows={this.props.rows}\n        colLabels={this.colLabels}\n      />\n    )\n  }\n\n  renderDataRows(rowNumber) {\n    return (\n      <DataRow\n      key={rowNumber}\n        rowNumber={rowNumber}\n        colLabels={this.colLabels}\n        activeCell={this.props.activeCell}\n      />\n    )\n  }\n\n  renderRows() {\n    return new Array(this.props.rows + 1).fill(0).map((_, i) => {\n      if (i === 0) {\n        return this.renderColLabelRow(i)\n      } else {\n        return this.renderDataRows(i)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Grid\n        data-table='app'\n        onClick={this.handleTableOnClick}\n        onKeyDown={this.handleTableOnKeyDown}\n      >\n        {this.renderRows()}\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { activeCell, rows, columns } = state.global\n  return { activeCell, rows, columns }\n}\n\nexport default connect(mapStateToProps)(Table)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\n\nimport Header from './components/header/Header'\nimport Table from './components/table/Table'\nimport CellInputter from './components/cellInputter/CellInputter'\n\n\nconst Container = styled.div`\n  display: grid;\n  grid:\n    \"left-blank main right-blank\" 100vh\n    / auto minmax(auto, 1000px) auto;\n`\n\nconst Main = styled.main`\n  grid-area: main;\n`\n\nfunction App({ cellInputter }) {\n  return (\n    <Container>\n      <Main>\n        {cellInputter &&  <CellInputter />}\n        <div data-dummy-focus-stop tabIndex=\"0\" />\n        <Header />\n        <Table />\n      </Main>\n    </Container>\n  )\n}\n\nApp.propTypes = {\n  cellInputter: PropTypes.object,\n  setActiveCell: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({ cellInputter: state.global.cellInputter })\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from 'emotion-theming'\nimport { Global } from '@emotion/core'\nimport 'sanitize.css'\n\nimport appStore from './reducers/'\nimport globalStyles from './styles/globalStyles'\nimport theme from './styles/theme'\nimport App from './App'\n\n\nfunction Root() {\n  return (\n    <Provider store={appStore}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Global styles={globalStyles} />\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default Root\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
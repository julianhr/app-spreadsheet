{"version":3,"sources":["reducers/globalReducer.js","reducers/tableReducer.js","reducers/index.js","styles/theme.js","styles/globalStyles.js","actions/globalActions.js","components/header/Header.jsx","components/cells/ColLabel.jsx","components/table/ColLabelRow.jsx","components/cells/RowLabel.jsx","components/cells/displayMachine.js","actions/tableActions.js","formulas/Token.js","formulas/Lexer.js","formulas/formulaFunctions.js","formulas/ast.js","formulas/Parser.js","formulas/index.js","formulas/Interpreter.js","components/cells/InputData.jsx","components/cells/EvaluatedData.jsx","components/cells/CellData.jsx","components/table/DataRow.jsx","library/utils.js","components/table/keyboardNavMachine.js","components/table/Table.jsx","App.jsx","Root.jsx","serviceWorker.js","index.js"],"names":["createReducer","activeCell","rows","columns","SET_ACTIVE_CELL","state","_ref","payload","SET_CELL_VALUE","location","value","formula","DELETE_CELL_VALUE","_ref2","appStoreFn","configureStore","reducer","global","globalReducer","table","tableReducer","breaks","xs","sm","md","lg","breakBump","queries","concat","from","breakPoint","upTo","theme","colors","text","cell","border","borderDark","labelBkg","primary","strong","field","background","globalStyles","css","setActiveCell","createAction","Root","Object","styled_base_browser_esm","target","name","styles","Header","react_default","a","createElement","InnerBorder","props","ColLabel","label","className","ColLabelRow","colLabels","ColLabelRow_InnerBorder","Array","length","fill","map","_","i","cells_ColLabel","key","Wrapper","RowLabel","displayMachine","Machine","id","initial","states","static","focused","notFocused","on","EDITABLE_MODIFY","EDITABLE_REPLACE","editable","modify","replace","STATIC_FOCUSED","STATIC","setCellValue","clearCellValue","dispatch","getState","undefined","Promise","resolve","action","type","Token","whitespace","arguments","classCallCheck","this","html","entries","reduce","prev","curr","TOKENS","EOF","UNKNOWN","EQUALS","COMMA","COLON","LPAREN","RPAREN","PLUS","MINUS","MULT","DIV","NUMBER","CELL","FUNCTION","t","Rule","regex","groupIndex","token","index","lastIndex","input","exec","GRAMMAR","Lexer","grammar","char","markers","tokens","nextToken","push","getWhitespace","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","rule","setIndex","match","test","consume","err","return","tokenUNKNOWN","chars","isEOF","isSeparator","isWhitespace","word","join","Boolean","count","fn","AVERAGE","Error","SUM","apply","COUNT","CONCAT","_len","args","_key","MAX","_len2","_key2","forEach","arg","TypeError","Math","max","MIN","_len3","_key3","min","POWER","_len4","_key4","base","exp","pow","SQRT","sqrt","_len5","_key5","POW","AST","NumberNode","numberNode","_this","possibleConstructorReturn","getPrototypeOf","call","_name","testPeriodCount","setTokenValue","periodCount","parseFloat","isNaN","UnaryOp","opNode","expr","_this2","evaluatedExpr","FuncOp","funcNode","argNodes","_this3","evaluatedArgs","getFunction","toConsumableArray","formulaFn","toUpperCase","BinaryOp","leftNode","rightNode","_this4","left","right","Parser","depth","equals","root","node","operator","term","includes","peekType","factor","unaryOp","number","enclosedExpr","func","lparen","rparen","Interpreter","ast","result","error","lexer","getTokens","parser","parse","visit","nodeName","constructor","eval","childNode","Input","InputData","_React$PureComponent","refInput","React","createRef","handleOnKeyDown","bind","assertThisInitialized","handleOnBlur","inherits","createClass","focusInputTag","current","focus","scrollLeft","scrollWidth","rawValue","trim","cellValue","isFormula","evaluateFormula","interpreter","interpret","message","event","onEscape","setNewValue","onCommit","stopPropagation","defaultValue","replaceValue","ref","onKeyDown","onBlur","PureComponent","mapDispatchToProps","connect","ownProps","DataTag","EvaluatedData","refDataTag","focusDataTag","isFocused","onKeyDownEditable","style","whiteSpace","textOverflow","core_browser_esm","getStyle","tabIndex","onDoubleClick","CellData","displayState","initialState","displayService","onTransition","setState","evaluatedOnDoubleClick","evaluatedOnKeyDownEditable","inputOnEscape","inputOnCommit","start","stop","send","matches","cells_InputData","cells_EvaluatedData","CellData_Wrapper","renderData","DataRow","rowNumber","cells_RowLabel","cells_CellData","isActive","BASE_CODE_POINT","codePointAt","getColumnNames","cols","names","prevNames","remainCols","newNames","outerLoop","_i","_prevNames","colName","letter","parseLocation","_location$split","split","_location$split2","slicedToArray","c","r","_label$split","_label$split2","col","charCodeAt","getColumnPosition","getTargetLocation","rowIndex","colIndex","colLabel","num","basePoint","codePoint","String","fromCodePoint","floor","reverse","getColumnLabel","rowLabel","context","endLocation","wasFocused","idle","MOVE_FOCUS","actions","focusTarget","invoke","src","ctx","setTimeout","document","querySelector","onDone","assign","data","setNewContext","_parseLocation","_parseLocation2","calcTargetLocation","getKeyboardNavMachine","newContext","objectSpread","RootTable","Table","keyboardNavMachine","focusService","handleTableOnClick","handleTableOnKeyDown","moveFocus","table_ColLabelRow","table_DataRow","renderColLabelRow","renderDataRows","onClick","renderRows","_state$global","Container","Main","header_Header","table_Table","APP_STORE","es","store","react_router_dom","emotion_theming_browser_esm","src_App","window","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2966e9ac.chunk.js","sourcesContent":["import { createReducer } from 'redux-starter-kit'\n\nexport const INITIAL_STATE = {\n  activeCell: null,\n  rows: 3,\n  columns: 4,\n}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_ACTIVE_CELL': (state, { payload }) => {\n    state.activeCell = payload\n  },\n})\n","import { createReducer } from 'redux-starter-kit'\n\n\nconst INITIAL_STATE = {}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_CELL_VALUE': (state, { payload }) => {\n    const { location, value, formula } = payload\n    state[location] = { value, formula }\n  },\n\n  'DELETE_CELL_VALUE': (state, { payload }) => {\n    delete state[payload]\n  }\n})\n","import { configureStore } from 'redux-starter-kit'\n\nimport globalReducer from './globalReducer'\nimport tableReducer from './tableReducer'\n\n\nconst appStoreFn = () => (\n  configureStore({\n    reducer: {\n      global: globalReducer,\n      table: tableReducer,\n    }\n  })\n)\n\n\nexport default appStoreFn\n","const colors = {\n  text: '#3D3D3D',\n  cell: {\n    border: '#dfdfdf',\n    borderDark: '#CCC',\n    labelBkg: '#F5F5F5'\n  },\n  primary: {\n    strong: '#E10D75'\n  },\n  field: {\n    background: '#F0F0F0',\n  },\n}\n\nconst breaks = {\n  xs: 0,\n  sm: 420,\n  md: 900,\n  lg: 1200,\n}\n\nconst breakBump = {\n  xs: 'sm',\n  sm: 'md',\n  md: 'lg',\n}\n\nconst queries = {\n  xs: `@media (max-width: ${breaks.sm - 1}px)`,\n  sm: `@media (min-width: ${breaks.sm}px) and (max-width: ${breaks.md - 1}px)`,\n  md: `@media (min-width: ${breaks.md}px) and (max-width: ${breaks.lg - 1}px)`,\n  lg: `@media (min-width: ${breaks.lg}px)`,\n  from: (breakPoint) => (`@media (min-width: ${breaks[breakPoint]}px)`),\n  upTo: (breakPoint) => (`@media (max-width: ${breaks[ breakBump[breakPoint] ] - 1}px)`),\n}\n\nconst theme = {\n  colors,\n  breaks,\n  queries,\n}\n\nexport default theme\n","/* @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nimport theme from './theme'\n\n\nconst globalStyles = css`\n  body {\n    color: ${theme.colors.text};\n    line-height: 1.3em;\n  }\n\n  table, th, td {\n    border: 0;\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n\n  td {\n    padding: 0;\n    line-height: 1.2em;\n  }\n\n  p, h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n`\n\nexport default globalStyles\n","import { createAction } from 'redux-starter-kit'\n\n\nexport const setActiveCell = createAction('SET_ACTIVE_CELL')\n","import React from 'react'\nimport styled from '@emotion/styled'\n\n\nconst Root = styled.header`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0 30px;\n`\n\nfunction Header() {\n  return (\n    <Root>\n      <h3>Spreadsheet App</h3>\n    </Root>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n  font-size: 12px;\n`\n\nfunction ColLabel({ label }) {\n  return (\n    <td>\n      <InnerBorder\n        className='col-label-width col-label-height'\n      >\n        {label}\n      </InnerBorder>\n    </td>\n  )\n}\n\nColLabel.propTypes = {\n  label: PropTypes.string,\n}\n\nexport default ColLabel\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport ColLabel from '../cells/ColLabel'\n\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction ColLabelRow({ colLabels }) {\n  const renderCornerCell = () => (\n    <td>\n      <InnerBorder\n        className='row-label-width col-label-height'\n      />\n    </td>\n  )\n\n  const renderLabelCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => (\n      <ColLabel\n        key={i}\n        label={colLabels[i]}\n      />\n    )\n  ))\n\n  return (\n    <tr>\n      {renderCornerCell()}\n      {renderLabelCells()}\n    </tr>\n  )\n}\n\nColLabelRow.propTypes = {\n  colLabels: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default ColLabelRow\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst Wrapper = styled.div`\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction RowLabel({ label }) {\n  return (\n    <td>\n      <Wrapper\n        className='row-label-width row-label-height'\n      >\n        {label}\n      </Wrapper>\n    </td>\n  )\n}\n\nRowLabel.propTypes = {\n  label: PropTypes.number,\n}\n\nexport default RowLabel\n","import { Machine } from 'xstate'\n\n\nconst displayMachine = Machine({\n  id: 'cell',\n  initial: 'static',\n  states: {\n    static: {\n      initial: 'notFocused',\n      states: {\n        focused: {},\n        notFocused: {}\n      },\n      on: {\n        EDITABLE_MODIFY: {\n          target: 'editable.modify'\n        },\n        EDITABLE_REPLACE: {\n          target: 'editable.replace'\n        },\n      },\n    },\n    editable: {\n      states: {\n        modify: {},\n        replace: {},\n      },\n      on: {\n        STATIC_FOCUSED: {\n          target: 'static.focused'\n        },\n        STATIC: {\n          target: 'static'\n        },\n      },\n    },\n  }\n})\n\nexport default displayMachine\n","import { createAction } from 'redux-starter-kit'\n\n\nexport const setCellValue = createAction('SET_CELL_VALUE')\n\nexport function clearCellValue(location) {\n  return (dispatch, getState) => {\n    const value = getState().table[location]\n\n    if (value === undefined) { return Promise.resolve() }\n\n    let action = {\n      type: 'DELETE_CELL_VALUE',\n      payload: location,\n    }\n\n    return Promise.resolve(dispatch(action))\n  }\n}\n","class Token {\n  constructor(type, text, whitespace='') {\n    this.type = type\n    this.text = text\n    this.value = null\n    this.html = null\n    this.whitespace = whitespace\n  }\n\n  _repr() {\n    return Object\n      .entries(this)\n      .reduce((prev, curr) => {\n        if (curr[1] !== null) {\n          prev[curr[0]] = curr[1]\n        }\n\n        return prev\n      }, {})\n  }\n}\n\nexport default Token\n","import Token from './Token'\n\nconst TOKENS = {\n  // internal\n  EOF: 'EOF',\n  UNKNOWN: 'UNKNOWN',\n  // structure\n  EQUALS: 'EQUALS',\n  COMMA: 'COMMA',\n  COLON: 'COLON',\n  LPAREN: 'LPAREN',\n  RPAREN: 'RPAREN',\n  // operators\n  PLUS: 'PLUS',\n  MINUS: 'MINUS',\n  MULT: 'MULT',\n  DIV: 'DIV',\n  // entities\n  NUMBER: 'NUMBER',\n  CELL: 'CELL',\n  FUNCTION: 'FUNCTION',\n}\n\nconst t = TOKENS\n\nclass Rule {\n  constructor(regex, groupIndex, token) {\n    this.regex = regex\n    this.groupIndex = groupIndex\n    this.token = token\n  }\n\n  setIndex(index) {\n    this.regex.lastIndex = index\n  }\n\n  test(input) {\n    return this.regex.exec(input)\n  }\n}\n\nconst GRAMMAR = [\n  // internal\n  new Rule(/=/g, 0, t.EQUALS),\n  new Rule(/,/g, 0, t.COMMA),\n  new Rule(/:/g, 0, t.COLON),\n  new Rule(/\\(/g, 0, t.LPAREN),\n  new Rule(/\\)/g, 0, t.RPAREN),\n  // operators\n  new Rule(/\\+/g, 0, t.PLUS),\n  new Rule(/\\-/g, 0, t.MINUS), // eslint-disable-line\n  new Rule(/\\*/g, 0, t.MULT),\n  new Rule(/\\//g, 0, t.DIV),\n  // multi-character\n  new Rule(/[\\d\\.]+/g, 0, t.NUMBER), // eslint-disable-line\n  new Rule(/[a-z]+[\\d]+/gi, 0, t.CELL),\n  new Rule(/([a-z]+)\\(/gi, 1, t.FUNCTION),\n]\n\n\nclass Lexer {\n  constructor(input, grammar) {\n    this.input = input\n    this.grammar = grammar\n    this.index = 0\n    this.char = input[this.index]\n    this.markers = []\n    this.tokens = []\n  }\n\n  getTokens() {\n    while (this.char !== t.EOF) {\n      const token = this.nextToken()\n      this.tokens.push(token)\n    }\n\n    return this.tokens\n  }\n\n  nextToken() {\n    if (this.char === t.EOF) {\n      return new Token(t.EOF, t.EOF)\n    }\n\n    // console.log('before whitespace', this.char, this.index)\n    const whitespace = this.getWhitespace()\n    let token\n\n    for (let rule of this.grammar) {\n      rule.setIndex(this.index)\n      const match = rule.test(this.input)\n\n      if (match && match.index === this.index) {\n        const text = match[rule.groupIndex]\n        token = new Token(rule.token, text, whitespace)\n        this.index += text.length - 1\n        this.consume()\n        break\n      }\n    }\n\n    if (!token) {\n      token = this.tokenUNKNOWN(whitespace)\n    }\n\n    return token\n  }\n\n  tokenUNKNOWN(whitespace) {\n    const chars = []\n\n    while (!(this.isEOF() || this.isSeparator() || this.isWhitespace())) {\n      chars.push(this.char)\n      this.consume()\n    }\n    \n    const word = chars.join('')\n    return new Token(t.UNKNOWN, word, whitespace)\n  }\n\n  consume() {\n    this.index++\n\n    if (this.index < this.input.length) {\n      this.char = this.input[this.index]\n    } else {\n      this.char = t.EOF\n    }\n  }\n\n  isEOF() {\n    return this.char === t.EOF\n  }\n\n  isWhitespace() {\n    return !this.isEOF() && Boolean(this.char.match(/\\s/))\n  }\n\n  isSeparator() {\n    return !this.isEOF() && Boolean(this.char.match(/[()+-/*]{1}/))\n  }\n\n  getWhitespace() {\n    let count = 0\n\n    while (this.isWhitespace()) {\n      count++\n      this.consume()\n    }\n\n    return Array(count).fill(' ').join('')\n  }\n}\n\nexport default Lexer\nexport { Rule, GRAMMAR, TOKENS, Lexer }\n","const fn = {\n  AVERAGE: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    return this.SUM(...args) / this.COUNT(...args)\n  },\n\n  CONCAT: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    return args.reduce((prev, curr) => (prev + curr), '')\n  },\n\n  COUNT: (...args) => args.length,\n\n  MAX: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    args.forEach(arg => {\n      if (typeof arg !== 'number') {\n        throw new TypeError(`${arg} is not a number`)\n      }\n    })\n\n    return Math.max(...args)\n  },\n\n  MIN: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    args.forEach(arg => {\n      if (typeof arg !== 'number') {\n        throw new TypeError(`${arg} is not a number`)\n      }\n    })\n\n    return Math.min(...args)\n  },\n\n  POWER: function(...args) {\n    if (args.length !== 2) {\n      throw new Error('Formula takes only two elements')\n    }\n  \n    const [base, exp] = args\n    return Math.pow(base, exp)\n  },\n\n  SQRT: function(...args) {\n    if (args.length !== 1) {\n      throw new Error(`Formula takes only one element`)\n    }\n\n    return Math.sqrt(args[0])\n  },\n\n  SUM: function(...args) {\n    if (args.length === 0) {\n      throw new Error('Empty elements')\n    }\n\n    return args.reduce((prev, curr) => prev + curr)\n  },\n}\n\n// aliases\nfn.POW = fn.POWER\n\nexport default fn\n","import { TOKENS as t } from './Lexer'\nimport formulaFn from './formulaFunctions'\n\n\nclass AST {\n  eval() {\n    throw new Error('Implement method.')\n  }\n}\n\nclass NumberNode extends AST {\n  constructor(numberNode) {\n    super()\n    this._name = 'NumberNode'\n    this.numberNode = numberNode\n  }\n\n  get value() {\n    return this.numberNode.value\n  }\n\n  eval() {\n    this.testPeriodCount()\n    this.setTokenValue()\n    return this.value\n  }\n\n  testPeriodCount() {\n    const { text } = this.numberNode\n    const periodCount = (text.match(/\\./g) || []).length\n\n    if (periodCount >= 2 || (periodCount === 1 && text.length === 1)) {\n      throw new Error(`Invalid number \"${this.numberNode.text}\"`)\n    }\n  }\n\n  setTokenValue() {\n    const value = parseFloat(this.numberNode.text)\n\n    if (isNaN(value)) {\n      throw new Error(`Invalid number \"${this.numberNode.text}\"`)\n    } else {\n      this.numberNode.value = value\n    }\n  }\n}\n\nclass UnaryOp extends AST {\n  constructor(opNode, expr) {\n    super()\n    this._name = 'UnaryOp'\n    this.opNode = opNode\n    this.expr = expr\n  }\n\n  eval(evaluatedExpr) {\n    if (this.opNode.type === t.PLUS) {\n      return evaluatedExpr\n    } else if (this.opNode.type === t.MINUS) {\n      return -evaluatedExpr\n    } else {\n      throw new Error('Unary operator is not \"+\" or \"-\"')\n    }\n  }\n}\n\nclass FuncOp extends AST {\n  constructor(funcNode, argNodes) {\n    super()\n    this._name = 'FuncOp'\n    this.funcNode = funcNode\n    this.argNodes = argNodes\n  }\n\n  eval(evaluatedArgs) {\n    const fn = this.getFunction()\n    return fn(...evaluatedArgs)\n  }\n\n  getFunction() {\n    const fn = formulaFn[this.funcNode.text.toUpperCase()]\n\n    if (!fn) {\n      throw new Error(`Formula ${this.funcNode.text} not found`)\n    } else {\n      return fn\n    }\n  }\n}\n\nclass BinaryOp extends AST {\n  constructor(leftNode, opNode, rightNode) {\n    super()\n    this._name = 'BinaryOp'\n    this.leftNode = leftNode\n    this.opNode = opNode\n    this.rightNode = rightNode\n  }\n\n  eval(left, right) {\n    switch(this.opNode.type) {\n      case t.PLUS:\n        return left + right\n      case t.MINUS:\n        return left - right\n      case t.DIV:\n        if (right === 0) {\n          throw new Error(`Division by zero: ${left}/${right}`)\n        } else {\n          return left / right\n        }\n      case t.MULT:\n        return left * right\n      default:\n        throw new Error(`Unsupported operator \"${this.token.text}\"`)\n    }\n  }\n}\n\nexport {\n  NumberNode,\n  BinaryOp,\n  UnaryOp,\n  FuncOp,\n}\n","import { TOKENS as t } from './Lexer'\nimport { BinaryOp, UnaryOp, FuncOp, NumberNode } from './ast'\n\n\nclass Parser {\n  constructor(tokens) {\n    this.index = 0\n    this.tokens = tokens\n    this.curr = tokens[this.index]\n    this.depth = 0\n  }\n\n  parse() {\n    this.equals()\n    const root = this.expr()\n\n    if (this.curr !== null) {\n      throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n    }\n\n    if (this.depth !== 0) {\n      throw new Error('Unbalanced expression')\n    }\n\n    return root\n  }\n\n  expr() {\n    // expr : term ( ( PLUS | MINUS ) term ) *\n    let node, operator, right\n\n    node = this.term()\n\n    while ( [t.PLUS, t.MINUS].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.term()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  term() {\n    // term : factor ( ( MULT | DIV ) factor ) *\n    let node, operator, right\n\n    node = this.factor()\n\n    while ( [t.MULT, t.DIV].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.factor()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  factor() {\n    // factor : ( PLUS | MINUS ) NUMBER | LPAREN expr RPAREN | FUNCTION LPAREN list RPAREN\n    switch (this.peekType()) {\n      case t.PLUS:\n      case t.MINUS:\n        return this.unaryOp()\n      case t.NUMBER:\n        return this.number()\n      case t.LPAREN:\n        return this.enclosedExpr()\n      case t.FUNCTION:\n        return this.func()\n      case t.RPAREN:\n        throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n      default:\n        throw new Error('Missing factor')\n    }\n  }\n\n  number() {\n    if (this.peekType() === t.NUMBER) {\n      const node = new NumberNode(this.curr)\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing number')\n    }\n  }\n\n  operator() {\n    if ([t.PLUS, t.MINUS, t.MULT, t.DIV].includes(this.peekType())) {\n      const node = this.curr\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing operator')\n    }\n  }\n\n  enclosedExpr() {\n    this.lparen()\n    const node = this.expr()\n    this.rparen()\n    return node\n  }\n\n  func() {\n    let func, args\n\n    if (this.peekType() === t.FUNCTION) {\n      func = this.curr\n      this.consume()\n      this.lparen()\n      args = this.args()\n      this.rparen()\n      return new FuncOp(func, args)\n    } else {\n      throw new Error('Missing function')\n    }\n  }\n\n  args() {\n    const args = []\n    let term = this.term()\n\n    args.push(term)\n\n    while (this.peekType() === t.COMMA) {\n      this.consume()\n      term = this.term()\n      args.push(term)\n    }\n\n    return args\n  }\n\n  equals() {\n    if (this.peekType() === t.EQUALS) {\n      this.consume()\n    } else {\n      throw new Error('Missing equals sign')\n    }\n  }\n\n  lparen() {\n    if (this.peekType() === t.LPAREN) {\n      this.depth += 1\n      this.consume()\n    } else {\n      throw new Error('Missing left parenthesis')\n    }\n  }\n\n  rparen() {\n    if (this.peekType() === t.RPAREN) {\n      this.depth -= 1\n      this.consume()\n    } else {\n      throw new Error('Missing right parenthesis')\n    }\n  }\n\n  unaryOp() {\n    if ([t.PLUS, t.MINUS].includes(this.peekType())) {\n      const curr = this.curr\n      this.consume()\n      const node = new UnaryOp(curr, this.factor())\n      return node\n    } else {\n      throw new Error('Missing unary operator')\n    }\n  }\n\n  consume() {\n    if (this.index < this.tokens.length - 1) {\n      this.index++\n      this.curr = this.tokens[this.index]\n    } else {\n      this.curr = null\n    }\n  }\n\n  isUnbalanced() {\n    return !(this.index === this.tokens.length && this.depth === 0)\n  }\n\n  peekType() {\n    return this.curr && this.curr.type\n  }\n}\n\nexport default Parser\n","import Interpreter from './Interpreter'\n\nexport default Interpreter\n","import { Lexer, GRAMMAR } from './Lexer'\nimport Parser from './Parser'\n\n\nclass Interpreter {\n  constructor(input) {\n    this.input = input\n    this.tokens = null\n    this.ast = null\n    this.result = null\n    this.error = null\n  }\n\n  interpret() {\n    try {\n      const lexer = new Lexer(this.input, GRAMMAR)\n      this.tokens = lexer.getTokens()\n      const parser = new Parser(this.tokens)\n      this.ast = parser.parse()\n      this.result = this.visit(this.ast)\n      return this.result\n    } catch (error) {\n      this.result = null\n      this.error = error\n      return null\n    }\n  }\n\n  visit(node) {\n    switch (node._name) {\n      case 'NumberNode':\n        return this.NumberNode(node)\n      case 'FuncOp':\n        return this.FuncOp(node)\n      case 'BinaryOp':\n        return this.BinaryOp(node)\n      case 'UnaryOp':\n          return this.UnaryOp(node)\n      default:\n        const nodeName = node._name || (node.constructor || {}).name\n        throw new Error(`Unrecognized AST node ${nodeName}`)\n    }\n  }\n\n  NumberNode(node) {\n    return node.eval()\n  }\n\n  UnaryOp(node) {\n    const result = this.visit(node.expr)\n    return node.eval(result)\n  }\n\n  FuncOp(node) {\n    const evaluatedArgs = []\n\n    for (let childNode of node.argNodes) {\n      const result = this.visit(childNode)\n      evaluatedArgs.push(result)\n    }\n\n    return node.eval(evaluatedArgs)\n  }\n\n  BinaryOp(node) {\n    const left = this.visit(node.leftNode)\n    const right = this.visit(node.rightNode)\n    return node.eval(left, right)\n  }\n}\n\nexport default Interpreter\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect }  from 'react-redux'\n\nimport { setCellValue, clearCellValue } from '~/actions/tableActions'\nimport Interpreter from '~/formulas'\n\n\nconst ERR_DIV_BY_ZERO = '#DIV/0!'\nconst ERR_GENERIC = '#ERROR!'\n\nconst Input = styled.input`\n  display: flex;\n  align-items: center;\n  outline: none;\n  border: 2px solid transparent;\n  padding: 0 2px;\n  line-height: 1em;\n\n  :focus {\n    border: 2px solid salmon;\n  }\n`\n\nexport class InputData extends React.PureComponent {\n  static propTypes = {\n    // props\n    replaceValue: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired,\n    onEscape: PropTypes.func.isRequired,\n    onCommit: PropTypes.func.isRequired,\n    // redux\n    clearCellValue: PropTypes.func.isRequired,\n    formula: PropTypes.string,\n    setCellValue: PropTypes.func.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n  }\n\n  refInput = React.createRef()\n\n  componentDidMount() {\n    this.focusInputTag()\n  }\n\n  focusInputTag() {\n    const input = this.refInput.current\n    input.focus()\n    input.scrollLeft = input.scrollWidth\n  }\n\n  setNewValue(rawValue) {\n    const value = rawValue.trim()\n    const { location } = this.props\n\n    if (value.length === 0) {\n      this.props.clearCellValue(location)\n      return\n    }\n\n    const cellValue = {\n      location,\n      formula: value\n    }\n\n    const isFormula = value[0] === '='\n    cellValue.value = isFormula ? this.evaluateFormula(value) : value\n    this.props.setCellValue(cellValue)\n  }\n\n  evaluateFormula(input) {\n    const interpreter = new Interpreter(input)\n    const result = interpreter.interpret()\n    const { error } = interpreter\n\n    if (!error) {\n      return result\n    } else {\n      if (error.message.match(/division by zero/i)) {\n        return ERR_DIV_BY_ZERO\n      } else {\n        return ERR_GENERIC\n      }\n    }\n  }\n\n  handleOnKeyDown(event) {\n    const { key } = event\n\n    if (key === 'Escape') {\n      this.props.onEscape()\n    } else if (key === 'Enter') {\n      this.setNewValue(event.target.value)\n      this.props.onCommit()\n    } else {\n      event.stopPropagation()\n    }\n  }\n\n  handleOnBlur(event) {\n    this.setNewValue(event.target.value)\n    this.props.onCommit()\n  }\n\n  render () {\n    const defaultValue = this.props.replaceValue ? null : this.props.formula\n\n    return (\n      <Input\n        ref={this.refInput}\n        className='col-label-width row-label-height'\n        id={`f-${this.props.location}`}\n        defaultValue={defaultValue}\n        onKeyDown={this.handleOnKeyDown}\n        onBlur={this.handleOnBlur}\n      />\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const formula = cell ? cell.formula : ''\n  return { formula }\n}\nconst mapDispatchToProps = { setCellValue, clearCellValue }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputData)\nexport {\n  ERR_DIV_BY_ZERO,\n  ERR_GENERIC,\n}\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { clearCellValue } from '~/actions/tableActions'\nimport { setActiveCell } from '~/actions/globalActions'\n\n\nconst DataTag = styled.div`\n  display: flex;\n  align-items: center;\n  outline: none;\n  border: 2px solid transparent;\n  line-height: 1.1em;\n  height: 100%;\n  width: 100%;\n  padding: 2px;\n\n  :focus {\n    border: 2px solid salmon;\n  }\n`\n\nexport class EvaluatedData extends React.PureComponent {\n  static propTypes = {\n    // props\n    isFocused: PropTypes.bool,\n    location: PropTypes.string.isRequired,\n    onDoubleClick: PropTypes.func.isRequired,\n    onKeyDownEditable: PropTypes.func.isRequired,\n    // redux\n    clearCellValue: PropTypes.func.isRequired,\n    setActiveCell: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n  }\n\n  refDataTag = React.createRef()\n\n  componentDidMount() {\n    this.focusDataTag()\n  }\n\n  focusDataTag() {\n    if (this.props.isFocused) { this.refDataTag.current.focus() }\n  }\n\n  handleOnKeyDown({ key }) {\n    this.props.setActiveCell(this.props.location)\n\n    if (['Delete', 'Backspace'].includes(key)) {\n      const valueStr = '' + this.props.value\n\n      if (valueStr.length > 0) {\n        this.props.clearCellValue(this.props.location)\n      }\n      // key pressed is a printable symbol, ex: 'a', '1', ','\n      // can be further refined, but for now it's fine\n    } else if (key.length === 1) {\n      this.props.onKeyDownEditable()\n    }\n  }\n\n  getStyle() {\n    let style = {}\n\n    if (typeof this.props.value === 'number') {\n      style = {\n        whiteSpace: 'nowrap',\n        textOverflow: 'clip',\n      }\n    }\n\n    return style\n  }\n\n  render() {\n    return (\n      <DataTag\n        ref={this.refDataTag}\n        css={this.getStyle()}\n        id={`t-${this.props.location}`}\n        tabIndex='0'\n        onKeyDown={this.handleOnKeyDown}\n        onDoubleClick={this.props.onDoubleClick}\n      >\n        {this.props.value}\n      </DataTag>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const value = cell ? cell.value : ''\n  return { value }\n}\n\nconst mapDispatchToProps = { clearCellValue, setActiveCell }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EvaluatedData)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { interpret } from 'xstate'\n\nimport displayMachine from './displayMachine'\nimport InputData from './InputData'\nimport EvaluatedData from './EvaluatedData'\n\n\nconst Wrapper = styled.div`\n  cursor: cell;\n  font-size: 13px;\n  border-right: 1px solid ${props => props.theme.colors.cell.border};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.border};\n`\nclass CellData extends React.PureComponent {\n  static propTypes = {\n    location: PropTypes.string.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.evaluatedOnDoubleClick = this.evaluatedOnDoubleClick.bind(this)\n    this.evaluatedOnKeyDownEditable = this.evaluatedOnKeyDownEditable.bind(this)\n    this.inputOnEscape = this.inputOnEscape.bind(this)\n    this.inputOnCommit = this.inputOnCommit.bind(this)\n  }\n\n  state = {\n    displayState: displayMachine.initialState,\n  }\n\n  displayService = interpret(displayMachine)\n    .onTransition(displayState => this.setState({ displayState }))\n\n  componentDidMount() {\n    this.displayService.start()\n  }\n  \n  componentWillUnmount() {\n    this.displayService.stop()\n  }\n  \n  evaluatedOnDoubleClick() {\n    this.displayService.send('EDITABLE_MODIFY')\n  }\n\n  evaluatedOnKeyDownEditable() {\n    this.displayService.send('EDITABLE_REPLACE')\n  }\n\n  inputOnEscape() {\n    this.displayService.send('STATIC_FOCUSED')\n  }\n\n  inputOnCommit() {\n    this.displayService.send('STATIC')\n  }\n\n  renderData() {\n    const { displayState } = this.state\n\n    if (displayState.matches('editable')) {\n      return (\n        <InputData\n          replaceValue={displayState.matches('editable.replace')}\n          location={this.props.location}\n          onEscape={this.inputOnEscape}\n          onCommit={this.inputOnCommit}\n        />\n      )\n    } else {\n      return (\n        <EvaluatedData\n          location={this.props.location}\n          onDoubleClick={this.evaluatedOnDoubleClick}\n          onKeyDownEditable={this.evaluatedOnKeyDownEditable}\n          isFocused={displayState.matches('static.focused')}\n        />\n      )\n    }\n  }\n\n  render() {\n    return (\n      <td>\n        <Wrapper\n          className='row-label-height col-label-width'\n        >\n          {this.renderData()}\n        </Wrapper>\n      </td>\n    )\n  }\n}\n\nexport default CellData\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport RowLabel from '../cells/RowLabel'\nimport CellData from '../cells/CellData'\n\n\nfunction DataRow({ rowNumber, colLabels, activeCell }) {\n  const dataCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => {\n      const location = `${colLabels[i]}-${rowNumber}`\n\n      return (\n        <CellData\n          key={i}\n          isActive={activeCell === location}\n          location={location}\n        />\n      )\n    })\n  )\n\n  return (\n    <tr>\n      <RowLabel\n        label={rowNumber}\n      />\n      {dataCells()}\n    </tr>\n  )\n}\n\nDataRow.propTypes = {\n  rowNumber: PropTypes.number,\n  colLabels: PropTypes.arrayOf(PropTypes.string),\n  activeCell: PropTypes.string,\n}\n\nexport default DataRow\n\n","const BASE_CODE_POINT = 'A'.codePointAt(0)\n\nexport function buildUrl(baseUrl, query={}) {\n  const urlQuery = Object.entries(query).map(([key, val]) => `${key}=${val}`).join('&')\n  return [baseUrl.trim(), urlQuery].join('?')\n}\n\nexport function clamp(value, min, max) {\n  return Math.min( Math.max(value, min), max )\n}\n\nexport function getRangeArray(min, max, isString=false) {\n  const range = []\n\n  for (let num = min; num <= max; num++) {\n    range.push( isString ? num.toString() : num )\n  }\n\n  return range\n}\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms))\n\nexport function getColumnNames(cols) {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let names = []\n  let prevNames = ['']\n  let remainCols = cols\n\n  while (remainCols > 0) {\n    const newNames = []\n\n    outerLoop:\n    for (let colName of prevNames) {  \n      for (let letter of alphabet) {\n        if (remainCols === 0)  { break outerLoop }\n        newNames.push(`${colName}${letter}`)\n        remainCols -= 1\n      }\n    }\n\n    prevNames = newNames\n    names = [...names, ...newNames]\n  }\n\n  return names\n}\n\nexport function getCellNames(rows, cols) {\n  const names = []\n  let colNames = getColumnNames(cols)\n\n  for (let row=1; row <= rows; row++) {\n    for (let col of colNames) {\n      names.push(`${col}-${row}`)\n    }\n  }\n\n  return names\n}\n\nexport function getColumnPosition(label) {\n  const [col, _] = label.split('-')\n  const letters = col.split('')\n  // const basePoint = 'A'.codePointAt(0)\n  const oneBase = letters.reduce((prev, letter) => (\n    prev * 26 + letter.charCodeAt(0) - BASE_CODE_POINT + 1\n  ), 0)\n\n  return oneBase - 1\n}\n\nexport function getColumnLabel(num) {\n  const label = []\n  const basePoint = BASE_CODE_POINT\n  let curr = num + 1\n\n  do {\n    curr -= 1\n    const letterPosition = curr % 26\n    const codePoint = basePoint + letterPosition\n    const letter = String.fromCodePoint(codePoint)\n    label.push(letter)\n\n    curr = Math.floor(curr / 26)\n  } while (curr > 0)\n\n  return label.reverse().join('')\n}\n\nexport function parseLocation(location) {\n  let [_, c, r] = location.split('-')\n  const col = getColumnPosition(c)\n  const row = +r - 1\n\n  return [col, row]\n}\n\n","import { Machine, assign } from 'xstate'\n\nimport { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nfunction getTargetLocation({ rows, columns, rowIndex, colIndex, key }) {\n  switch (key) {\n    case 'ArrowUp':\n      rowIndex = Math.max(0, rowIndex - 1)\n      break\n    case 'ArrowRight':\n      colIndex = Math.min(columns - 1, colIndex + 1)\n      break\n    case 'ArrowDown':\n    case 'Enter':\n      rowIndex = Math.min(rows - 1, rowIndex + 1)\n      break\n    case 'ArrowLeft':\n      colIndex = Math.max(0, colIndex - 1)\n      break\n    default:\n      return null\n  }\n\n  const colLabel = getColumnLabel(colIndex)\n  const rowLabel = '' + (rowIndex + 1)\n\n  return `t-${colLabel}-${rowLabel}`\n}\n\nfunction focusTargetCell(ctx) {\n  if (!ctx.endLocation) { return Promise.resolve(false) }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const id = `#${ctx.endLocation}`\n      const cell = document.querySelector(id)\n      if (cell) { cell.focus() }\n      resolve(true)\n    }, 0)\n  })\n}\n\nconst state = {\n  id: 'keyboardNav',\n  initial: 'idle',\n  context: {\n    columns: null,\n    rows: null,\n    key: null,\n    colIndex: null,\n    rowIndex: null,\n    endLocation: null,\n    wasFocused: false,\n  },\n  states: {\n    idle: {\n      on: {\n        'MOVE_FOCUS': {\n          actions: ['setNewContext', 'calcTargetLocation'],\n          target: 'focusTarget',\n        }\n      }\n    },\n    focusTarget: {\n      invoke: {\n        src: focusTargetCell,\n        onDone: {\n          actions: assign({ wasFocused: (ctx, event) => event.data }),\n          target: 'idle',\n        },\n      },\n    },\n  },\n}\n\nconst actions = {\n  actions: {\n    setNewContext: assign((ctx, { key, location }) => {\n      const [colIndex, rowIndex] = parseLocation(location)\n      return { colIndex, rowIndex, key }\n    }),\n    calcTargetLocation: assign({\n      endLocation: (ctx) => {\n        return getTargetLocation(ctx)\n      }\n    }),\n  },\n}\n\nfunction getKeyboardNavMachine(rows, columns) {\n  const newContext = {\n    ...state.context,\n    columns,\n    rows,\n  }\n\n  return Machine(state, actions, newContext)\n}\n\nexport {\n  state,\n  actions,\n  getTargetLocation,\n  focusTargetCell,\n}\n\nexport default getKeyboardNavMachine\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport { interpret } from 'xstate'\n\nimport ColLabelRow from './ColLabelRow'\nimport DataRow from './DataRow'\nimport { getColumnNames } from '~/library/utils'\nimport getKeyboardNavMachine from './keyboardNavMachine'\n\n\nconst RootTable = styled.table`\n  border-top: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-left: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .row-label-width {\n    width: 34px;\n  }\n\n  .row-label-height {\n    height: 28px;\n  }\n\n  .col-label-width {\n    width: 140px;\n  }\n\n  .col-label-height {\n    height: 26px;\n  }\n`\n\nexport class Table extends React.PureComponent {\n  static propTypes = {\n    activeCell: PropTypes.string,\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleTableOnClick = this.handleTableOnClick.bind(this)\n    this.handleTableOnKeyDown = this.handleTableOnKeyDown.bind(this)\n    this.colLabels = getColumnNames(props.columns)\n  }\n\n  keyboardNavMachine = getKeyboardNavMachine(this.props.rows, this.props.columns)\n  focusService = interpret(this.keyboardNavMachine)\n\n  componentDidMount() {\n    this.focusService.start()\n  }\n\n  componentWillUnmount() {\n    this.focusService.stop()\n  }\n\n  handleTableOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleTableOnKeyDown(event) {\n    event.stopPropagation()\n    this.moveFocus(event.key, event.target.id)\n  }\n\n  moveFocus(key, location) {\n    this.focusService.send({ type: 'MOVE_FOCUS', key, location })\n  }\n\n  renderColLabelRow(i) {\n    return (\n      <ColLabelRow\n        key={i}\n        rows={this.props.rows}\n        colLabels={this.colLabels}\n      />\n    )\n  }\n\n  renderDataRows(rowNumber) {\n    return (\n      <DataRow\n      key={rowNumber}\n        rowNumber={rowNumber}\n        colLabels={this.colLabels}\n        activeCell={this.props.activeCell}\n      />\n    )\n  }\n\n  renderRows() {\n    return new Array(this.props.rows + 1).fill(0).map((_, i) => {\n      if (i === 0) {\n        return this.renderColLabelRow(i)\n      } else {\n        return this.renderDataRows(i)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <RootTable\n        onClick={this.handleTableOnClick}\n        onKeyDown={this.handleTableOnKeyDown}\n      >\n        <tbody>\n          {this.renderRows()}\n        </tbody>\n      </RootTable>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { activeCell, rows, columns } = state.global\n  return { activeCell, rows, columns }\n}\n\nexport default connect(mapStateToProps)(Table)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\n\nimport { setActiveCell } from './actions/globalActions'\nimport Header from './components/header/Header'\nimport Table from './components/table/Table'\n\n\nconst Container = styled.div`\n  display: grid;\n  grid:\n    \"left-blank main right-blank\" 100vh\n    / auto minmax(auto, 1000px) auto;\n`\n\nconst Main = styled.main`\n  grid-area: main;\n`\n\nfunction App({ setActiveCell }) {\n  const handleOnClick = () => {\n    setActiveCell(null)\n  }\n\n  return (\n    <Container\n      onClick={handleOnClick}\n    >\n      <Main>\n        <Header />\n        <Table />\n      </Main>\n    </Container>\n  )\n}\n\nApp.propTypes = {\n  setActiveCell: PropTypes.func,\n}\n\nconst mapDispatchToProps = { setActiveCell }\n\nexport default connect(null, mapDispatchToProps)(App)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from 'emotion-theming'\nimport { Global } from '@emotion/core'\nimport 'sanitize.css'\n\nimport appStoreFn from './reducers/'\nimport globalStyles from './styles/globalStyles'\nimport theme from './styles/theme'\nimport App from './App'\n\n\nconst APP_STORE = appStoreFn()\n\n\nfunction Root() {\n  return (\n    <Provider store={APP_STORE}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Global styles={globalStyles} />\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default Root","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
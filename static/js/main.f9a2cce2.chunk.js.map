{"version":3,"sources":["library/utils.js","formulas/TokenSanitizer.js","formulas/LexerRule.js","formulas/Lexer.js","formulas/formulaFunctions.js","formulas/Token.js","components/cellInputter/InputContext.js","reducers/globalReducer.js","reducers/tableReducer.js","reducers/index.js","actions/globalActions.js","formulas/ReduxConnect.js","formulas/ast.js","formulas/Parser.js","formulas/Interpreter.js","formulas/graph.js","actions/tableActions.js","components/cellInputter/CellInputter.jsx","components/cellInputter/FuncDescription.jsx","library/InteractiveListItem.jsx","library/InteractiveList.jsx","components/cellInputter/FuncSelector.jsx","components/cellInputter/Suggestions.jsx","styles/theme.js","styles/globalStyles.js","components/header/Header.jsx","components/cell/ColLabel.jsx","components/table/ColLabelRow.jsx","components/cell/RowLabel.jsx","components/cell/CellResult.jsx","components/table/DataRow.jsx","components/table/keyboardNavMachine.js","components/table/Table.jsx","App.jsx","Root.jsx","serviceWorker.js","index.js"],"names":["BASE_CODE_POINT","codePointAt","getColumnNames","cols","names","prevNames","remainCols","newNames","outerLoop","_i","_prevNames","length","colName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","letter","value","push","concat","err","return","Object","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getColumnLabel","num","label","basePoint","curr","codePoint","String","fromCodePoint","Math","floor","reverse","join","parseLocation","location","_location$split","split","_location$split2","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","col","row","reduce","prev","charCodeAt","isNumber","numStr","isPeriodsAndDigits","Boolean","match","periodCount","TokenSanitizer","tokens","classCallCheck","this","_this","map","token","type","t","NUMBER","number","CELL","cell","FUNCTION","function","STRING","string","text","parseFloat","UNKNOWN","getCellLabel","fn","getFunction","slice","index","toUpperCase","fnName","fnNode","formulaFuncs","LexerRule","regex","groupIndex","category","lastIndex","input","exec","TOKENS","EOF","EQUALS","COMMA","COLON","LPAREN","RPAREN","PLUS","MINUS","MULT","DIV","TEXT","GRAMMAR","Lexer","char","initChar","markers","nextToken","sanitizer","sanitize","Token","isFormula","tokenTEXTorNUMBER","whitespaceLen","getWhitespaceLen","_GRAMMAR","rule","setIndex","test","consume","tokenUNKNOWN","whitespace","chars","isEOF","isSeparator","isWhitespace","count","Fn","AVERAGE","_Fn$SUM","_Fn$COUNT","arguments","Error","SUM","apply","COUNT","definition","example","summary","CONCAT","_len","args","Array","_key","MAX","_len2","_key2","forEach","arg","TypeError","max","MIN","_len3","_key3","min","POWER","_len4","_key4","base","exp","pow","SQRT","sqrt","_len5","_key5","AVG","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","POW","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","html","__webpack_require__","d","__webpack_exports__","InputContext","react__WEBPACK_IMPORTED_MODULE_0__","n","React","createContext","createReducer","activeCell","cellInputter","rows","columns","SET_ACTIVE_CELL","state","_ref","payload","SET_CELL_INPUTTER","_ref2","UNSET_CELL_INPUTTER","SET_CELL_DATA","data","DELETE_CELL_DATA","appStore","configureStore","reducer","global","globalReducer","table","tableReducer","setActiveCell","displayCellInputter","closeCellInputter","redux_starter_kit__WEBPACK_IMPORTED_MODULE_0__","createAction","ReduxConnect","store","globalState","getState","result","entered","dispatch","replaceCellData","clearCellData","keys","AST","name","_name","TextNode","textNode","possibleConstructorReturn","getPrototypeOf","call","node","StringNode","_this2","NumberNode","_this3","CellNode","_this4","CellRange","leftCell","rightCell","_this5","UnaryOp","opNode","expr","_this6","evaluatedExpr","FuncOp","funcNode","argNodes","_this7","evaluatedArgs","toConsumableArray","BinaryOp","leftNode","rightNode","_this8","left","right","Parser","ast","peekType","equals","operator","term","includes","factor","enclosedExpr","unaryOp","func","lparen","rparen","isCellRange","_this$invertCellRange","invertCellRange","_this$invertCellRange2","slicedToArray","temp","list","listNode","cellRange","DQUOTE","stepsAhead","Interpreter","error","cache","lexer","parser","vertex","graph","addVertex","getTokens","parse","recalculate","errorResponse","getVertex","visitNode","nodeName","constructor","eval","getCellResult","_parseLocation","_parseLocation2","leftColIndex","leftRowIndex","_parseLocation3","_parseLocation4","rightColIndex","rightRowIndex","colIndexStart","colIndexEnd","rowIndexStart","rowIndexEnd","rowI","colI","otherLocation","isLocationValid","visitCell","childNode","_parseLocation5","_parseLocation6","colIndex","rowIndex","errorMsg","message","Vertex","Graph","adj","pending","visited","setPendingNodes","dfs","updateStore","Set","add","size","visitAST","delete","hasVertex","testPathCycle","has","locationKeys","locations","_Object$entries","entries","_ref3","clearCell","testMissingLocation","setCellData","interpret","delVertex","Promise","resolve","tableActions_replaceCellData","Root","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_8__","target","styles","Input","props","theme","colors","shadow","HiddenInput","CellInputter","_React$PureComponent","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","isFuncSelectorVisible","inputValue","keyEvent","key","cursorPos","refInput","createRef","refHiddenInput","handleOnKeyDown","bind","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","handleOnBlur","handleOnChange","setIsFuncSelectorVisible","setInputValue","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_7__","_home_travis_build_julianhr_app_spreadsheet_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","willReplaceValue","focusInputTag","prevProps","prevState","setFocus","keyActions","tokenizeInputValue","setState","current","selectionEnd","setCellValue","inputEl","setImmediate","focus","selectionStart","el","elId","nextRowIndex","colLabel","rowLabel","endLocation","document","querySelector","activeElement","cellValue","event","preventDefault","width","height","_this$props$cellRect","cellRect","top","cellWidth","cellHeight","hiddenInputEl","textWidth","scrollWidth","getBoundingClientRect","_this$props$cellRect2","_emotion_core__WEBPACK_IMPORTED_MODULE_10__","_InputContext__WEBPACK_IMPORTED_MODULE_16__","Provider","inputRect","css","getRootStyle","ref","defaultValue","_emotion_css__WEBPACK_IMPORTED_MODULE_0__","data-cell","data-location","onChange","onKeyDown","onBlur","_Suggestions__WEBPACK_IMPORTED_MODULE_15__","PureComponent","mapDispatchToProps","connect","_state$global","_state$global$cellInp","styled_base_browser_esm","dropdown","normal","active","Pre","Subtitle","P","Hr","FuncDescription","currScope","_this$props","fnScopes","scope","startIndex","endIndex","getFnScope","context","bottom","getFnNode","core_browser_esm","css_browser_esm","FuncDescription_ref","contextType","Li","DropdownItem","item","isActive","onMouseEnter","tabIndex","defaultProps","Ul","InteractiveList","items","react_default","a","createElement","InteractiveListItem","style","objectSpread","li","ul","renderListItems","propsTypes","PropTypes","array","isRequired","shape","object","Dialog","baseItemStyle","ItemBaseRoot","ItemActiveRoot","FuncSelector","listItems","itemIndex","isVisible","handleOnClick","assertThisInitialized","setListItems","nextProps","nextState","updateContextData","updateListItems","keyEventSetIndex","updateInputValue","currInputValue","rightChunkIndex","leftChunk","rightChunk","newInputValue","filter","startsWith","sort","itemBase","itemActive","FuncSelector_Pre","FuncSelector_Subtitle","marginTop","boxShadow","border","_this$state","open","onClick","library_InteractiveList","round","getListStyles","Component","withTheme","Suggestions","setFnScopes","stack","pop","b","getCurrTokenIndex","_this$getCompareToken","getCompareTokens","_this$getCompareToken2","tokenBefore","tokenCurr","tokenAfter","option1","option2","cellInputter_FuncSelector","renderedFuncSelector","getFuncSelector","cellInputter_FuncDescription","breaks","xs","sm","md","lg","breakBump","queries","from","breakPoint","upTo","borderDark","labelBkg","primary","strong","field","background","globalStyles","Header","InnerBorder","ColLabel","data-col","className","Row","ColLabelRow","colLabels","data-row","ColLabelRow_InnerBorder","fill","_","i","cell_ColLabel","Wrapper","RowLabel","Cell","ResultCell","refCell","handleCellOnKeyDown","handleCellOnDoubleClick","handleCellOnClick","handleWrapperOnClick","inherits","createClass","cellDomRect","JSON","stringify","whiteSpace","textOverflow","overflow","stopPropagation","CellResult_Wrapper","getStyle","onDoubleClick","ownProps","DataRow","rowNumber","DataRow_Row","cell_RowLabel","CellResult","id","initial","wasFocused","states","idle","on","MOVE_FOCUS","actions","focusTarget","invoke","src","ctx","setTimeout","onDone","assign","setNewContext","calcTargetLocation","getTargetLocation","getKeyboardNavMachine","newContext","Machine","Grid","Table","keyboardNavMachine","focusService","handleTableOnClick","handleTableOnKeyDown","start","stop","moveFocus","dataset","send","table_ColLabelRow","table_DataRow","renderColLabelRow","renderDataRows","data-table","renderRows","Container","Main","data-dummy-focus-stop","header_Header","table_Table","es","react_router_dom","emotion_theming_browser_esm","src_App","window","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f9a2cce2.chunk.js","sourcesContent":["const BASE_CODE_POINT = 'A'.codePointAt(0)\n\nexport function buildUrl(baseUrl, query={}) {\n  const urlQuery = Object.entries(query).map(([key, val]) => `${key}=${val}`).join('&')\n  return [baseUrl.trim(), urlQuery].join('?')\n}\n\nexport function clamp(value, min, max) {\n  return Math.min( Math.max(value, min), max )\n}\n\nexport function getRangeArray(min, max, isString=false) {\n  const range = []\n\n  for (let num = min; num <= max; num++) {\n    range.push( isString ? num.toString() : num )\n  }\n\n  return range\n}\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(() => resolve(), ms))\n\nexport function getColumnNames(cols) {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let names = []\n  let prevNames = ['']\n  let remainCols = cols\n\n  while (remainCols > 0) {\n    const newNames = []\n\n    outerLoop:\n    for (let colName of prevNames) {  \n      for (let letter of alphabet) {\n        if (remainCols === 0)  { break outerLoop }\n        newNames.push(`${colName}${letter}`)\n        remainCols -= 1\n      }\n    }\n\n    prevNames = newNames\n    names = [...names, ...newNames]\n  }\n\n  return names\n}\n\nexport function getCellNames(rows, cols) {\n  const names = []\n  let colNames = getColumnNames(cols)\n\n  for (let row=1; row <= rows; row++) {\n    for (let col of colNames) {\n      names.push(`${col}-${row}`)\n    }\n  }\n\n  return names\n}\n\nexport function getColumnPosition(colLabel) {\n  const letters = colLabel.split('')\n  const oneBase = letters.reduce((prev, letter) => (\n    prev * 26 + letter.charCodeAt(0) - BASE_CODE_POINT + 1\n  ), 0)\n\n  return oneBase - 1\n}\n\nexport function getColumnLabel(num) {\n  const label = []\n  const basePoint = BASE_CODE_POINT\n  let curr = num + 1\n\n  do {\n    curr -= 1\n    const letterPosition = curr % 26\n    const codePoint = basePoint + letterPosition\n    const letter = String.fromCodePoint(codePoint)\n    label.push(letter)\n\n    curr = Math.floor(curr / 26)\n  } while (curr > 0)\n\n  return label.reverse().join('')\n}\n\nexport function parseLocation(location) {\n  let [col, row] = location.split('-')\n  const colIndex = getColumnPosition(col)\n  const rowIndex = +row - 1\n\n  return [colIndex, rowIndex]\n}\n\nexport function isNumber(numStr) {\n  const isPeriodsAndDigits = Boolean(numStr.match(/^[.\\d]+$/))\n  const periodCount = (numStr.match(/\\./g) || []).length\n\n  if (!isPeriodsAndDigits) { return false }\n  if (periodCount > 1) { return false }\n  if (numStr.length === 1 && numStr[0] === '.') { return false }\n  return true\n}\n\n","import { TOKENS as t } from './Lexer'\nimport formulaFuncs from './formulaFunctions'\nimport { isNumber } from '~/library/utils'\n\n\nclass TokenSanitizer {\n  constructor(tokens) {\n    this.tokens = tokens\n  }\n\n  sanitize() {\n    return this.tokens.map(token => {\n      switch(token.type) {\n        case t.NUMBER:\n          return this.number(token)\n        case t.CELL:\n          return this.cell(token)\n        case t.FUNCTION:\n          return this.function(token)\n        case t.STRING:\n          return this.string(token)\n        default:\n          return token\n      }\n    })\n  }\n\n  number(token) {\n    if (!isNumber(token.text)) {\n      token.type = t.UNKNOWN\n      return token\n    }\n\n    token.value = parseFloat(token.text)\n    return token\n  }\n\n  cell(token) {\n    token.value = this.getCellLabel(token)\n    return token\n  }\n\n  function(token) {\n    const fn = this.getFunction(token)\n    \n    if (fn) {\n      token.value = fn\n    } else {\n      token.type = t.UNKNOWN\n    }\n\n    return token\n  }\n\n  string(token) {\n    token.value = token.text.slice(1, -1)\n    return token\n  }\n\n  getCellLabel(token) {\n    const { text } = token\n    const { index } = text.match(/\\d+/)\n    const col = text.slice(0, index).toUpperCase()\n    const row = text.slice(index)\n    return `${col}-${row}`\n  }\n\n  getFunction(token) {\n    const fnName = token.text.toUpperCase()\n    const fnNode = formulaFuncs[fnName]\n    return fnNode && fnNode.fn\n  }\n}\n\nexport default TokenSanitizer\n","class LexerRule {\n  constructor(regex, groupIndex, token, category) {\n    this.regex = regex\n    this.groupIndex = groupIndex\n    this.token = token\n    this.category = category\n  }\n\n  setIndex(index) {\n    this.regex.lastIndex = index\n  }\n\n  test(input) {\n    return this.regex.exec(input)\n  }\n}\n\nexport default LexerRule\n","import Token from './Token'\nimport TokenSanitizer from './TokenSanitizer'\nimport LexerRule from './LexerRule'\nimport { isNumber } from '~/library/utils'\n\n\nconst TOKENS = {\n  // internal\n  EOF: 'EOF',\n  // structure\n  EQUALS: 'EQUALS',\n  COMMA: 'COMMA',\n  COLON: 'COLON',\n  LPAREN: 'LPAREN',\n  RPAREN: 'RPAREN',\n  // operators\n  PLUS: 'PLUS',\n  MINUS: 'MINUS',\n  MULT: 'MULT',\n  DIV: 'DIV',\n  // entities\n  TEXT: 'TEXT',\n  CELL: 'CELL',\n  STRING: 'STRING',\n  NUMBER: 'NUMBER',\n  FUNCTION: 'FUNCTION',\n  UNKNOWN: 'UNKNOWN',\n}\n\nconst t = TOKENS\n\nconst GRAMMAR = [\n  // structure\n  new LexerRule(/=/g, 0, t.EQUALS, 'structure'),\n  new LexerRule(/,/g, 0, t.COMMA, 'structure'),\n  new LexerRule(/:/g, 0, t.COLON, 'structure'),\n  new LexerRule(/\\(/g, 0, t.LPAREN, 'structure'),\n  new LexerRule(/\\)/g, 0, t.RPAREN, 'structure'),\n  // operators\n  new LexerRule(/\\+/g, 0, t.PLUS, 'operator'),\n  new LexerRule(/\\-/g, 0, t.MINUS, 'operator'), // eslint-disable-line\n  new LexerRule(/\\*/g, 0, t.MULT, 'operator'),\n  new LexerRule(/\\//g, 0, t.DIV, 'operator'),\n  // multi-character\n  new LexerRule(/(\"[^\"]+\")/g, 1, t.STRING, 'entity'), // eslint-disable-line\n  new LexerRule(/[\\d\\.]+/g, 0, t.NUMBER, 'entity'), // eslint-disable-line\n  new LexerRule(/[a-z]+[\\d]+/gi, 0, t.CELL, 'entity'),\n  new LexerRule(/([a-z]+)\\(/gi, 1, t.FUNCTION, 'entity'),\n]\n\n\nclass Lexer {\n  constructor(input) {\n    this.input = input\n    this.index = 0\n    this.char = this.initChar(input)\n    this.markers = []\n    this.tokens = []\n  }\n\n  getTokens() {\n    while (this.char !== t.EOF) {\n      const token = this.nextToken()\n      this.tokens.push(token)\n    }\n\n    const sanitizer = new TokenSanitizer(this.tokens)\n    this.tokens = sanitizer.sanitize()\n    return this.tokens\n  }\n\n  nextToken() {\n    if (this.char === t.EOF) {\n      return new Token(t.EOF, t.EOF, 0, 'eof', this.index)\n    }\n\n    if (!this.isFormula()) {\n      return this.tokenTEXTorNUMBER()\n    }\n\n    const whitespaceLen = this.getWhitespaceLen()\n    let token\n\n    for (let rule of GRAMMAR) {\n      rule.setIndex(this.index)\n      const match = rule.test(this.input)\n\n      if (match && match.index === this.index) {\n        const text = match[rule.groupIndex]\n        token = new Token(rule.token, text, whitespaceLen, rule.category, this.index)\n        this.index += text.length - 1\n        this.consume()\n        break\n      }\n    }\n\n    if (!token) {\n      token = this.tokenUNKNOWN(whitespaceLen)\n    }\n\n    return token\n  }\n\n  initChar(input) {\n    if (this.input.length === 0) {\n      this.input = '0'\n      this.index = -1\n    }\n\n    return input[this.index]\n  }\n\n  tokenUNKNOWN(whitespace) {\n    const chars = []\n\n    while (!(this.isEOF() || this.isSeparator() || this.isWhitespace())) {\n      chars.push(this.char)\n      this.consume()\n    }\n\n    const text = chars.join('')\n    return new Token(t.UNKNOWN, text, whitespace, 'entity', this.index - text.length)\n  }\n\n  tokenTEXTorNUMBER() {\n    let token\n\n    if (isNumber(this.input)) {\n      token = new Token(t.NUMBER, this.input, 0, 'entity', this.index)\n    } else {\n      token = new Token(t.TEXT, this.input, 0, 'entity', this.index)\n    }\n\n    this.index = this.input.length - 1\n    this.consume()\n    return token\n  }\n\n  consume() {\n    this.index++\n\n    if (this.index < this.input.length) {\n      this.char = this.input[this.index]\n    } else {\n      this.char = t.EOF\n    }\n  }\n\n  isFormula() {\n    return this.input[0] === '='\n  }\n\n  isEOF() {\n    return this.char === t.EOF\n  }\n\n  isWhitespace() {\n    return !this.isEOF() && Boolean(this.char.match(/\\s/))\n  }\n\n  isSeparator() {\n    return Boolean(this.char.match(/[\\(\\)\\+\\-\\/\\*]/)) // eslint-disable-line\n  }\n\n  getWhitespaceLen() {\n    let count = 0\n\n    while (this.isWhitespace()) {\n      count++\n      this.consume()\n    }\n\n    return count\n  }\n}\n\nexport default Lexer\nexport { GRAMMAR, TOKENS, Lexer }\n","const Fn = {\n  AVERAGE: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n\n      return Fn.SUM.fn(...args) / Fn.COUNT.fn(...args)\n    },\n    definition: 'AVERAGE(value1, value2, ...)',\n    example: 'AVERAGE(A1:B3, 3)',\n    summary: 'Returns the average from a series of numbers.',\n  },\n\n  CONCAT: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      return args.reduce((prev, curr) => (prev + curr), '')\n    },\n    definition: 'CONCAT(\"text1\", \"text2\", ...)',\n    example: 'CONCAT(\"one\", \"two\")',\n    summary: 'Returns a single concatenated string from a series of strings.',\n  },\n\n  COUNT: {\n    fn: (...args) => args.length,\n    definition: 'COUNT(element1, element2, ...)',\n    example: 'COUNT(A1:B3, 2, C4)',\n    summary: 'Returns the number of non-empty elements in a set.',\n  },\n\n  MAX: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      args.forEach(arg => {\n        if (typeof arg !== 'number') {\n          throw new TypeError(`${arg} is not a number`)\n        }\n      })\n  \n      return Math.max(...args)\n    },\n    definition: 'MAX(value1, value2, ...)',\n    example: 'MAX(A1:B3, 4, C3)',\n    summary: 'Returns the maximum value from a series of numbers',\n  },\n\n  MIN: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      args.forEach(arg => {\n        if (typeof arg !== 'number') {\n          throw new TypeError(`${arg} is not a number`)\n        }\n      })\n  \n      return Math.min(...args)\n    },\n    definition: 'MIN(value1, value2, ...)',\n    example: 'MIN(A1:B3, 4, C3)',\n    summary: 'Returns the minimum value from a series of numbers.',\n  },\n\n  POWER: {\n    fn: (...args) => {\n      if (args.length !== 2) {\n        throw new Error('Formula takes only two elements')\n      }\n    \n      const [base, exp] = args\n      return Math.pow(base, exp)\n    },\n    definition: 'POWER(base, exponent)',\n    example: 'POWER(A3,2)',\n    summary: 'Returns a number raised to an exponent.'\n  },\n\n  SQRT: {\n    fn: (...args) => {\n      if (args.length !== 1) {\n        throw new Error(`Formula takes only one element`)\n      }\n  \n      return Math.sqrt(args[0])\n    },\n    definition: 'SQRT(value)',\n    example: 'SQRT(9) or SQRT(A3)',\n    summary: 'Returns the square root of a number.'\n  },\n\n  SUM: {\n    fn: (...args) => {\n      if (args.length === 0) {\n        throw new Error('Empty elements')\n      }\n  \n      return args.reduce((prev, curr) => prev + curr)\n    },\n    definition: 'SUM(value1, value2, ...)',\n    example: 'SUM(A1:B3, 3, C5)',\n    summary: 'Retuns the sum from a series of numbers.',\n  }\n}\n\n// aliases\nFn.AVG = {\n  ...Fn.AVERAGE,\n  definition: 'AVG(value1, value2, ...)',\n  example: 'AVG(A1:B3, 3)',\n}\n\nFn.POW = {\n  ...Fn.POWER,\n  definition: 'POW(base, exponent)',\n  example: 'POW(A3,2)',\n}\n\nexport default Fn\n","class Token {\n  constructor(type, text, whitespace, category, index) {\n    this.type = type\n    this.category = category\n    this.text = text\n    this.whitespace = whitespace\n    this.index = index\n    this.value = null\n    this.html = null\n  }\n}\n\nexport default Token\n","import React from 'react'\n\n\nexport const InputContext = React.createContext()\n","import { createReducer } from 'redux-starter-kit'\n\nexport const INITIAL_STATE = {\n  activeCell: null,\n  cellInputter: null,\n  rows: 14,\n  columns: 6,\n}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_ACTIVE_CELL': (state, { payload }) => {\n    state.activeCell = payload\n  },\n  'SET_CELL_INPUTTER': (state, { payload }) => {\n    state.cellInputter = payload\n  },\n  'UNSET_CELL_INPUTTER': (state) => {\n    state.cellInputter = null\n  },\n})\n","import { createReducer } from 'redux-starter-kit'\n\n\nconst INITIAL_STATE = {}\n\nexport default createReducer(INITIAL_STATE, {\n  'SET_CELL_DATA': (state, { payload }) => {\n    const { location, data } = payload\n    state[location] = data\n  },\n\n  'DELETE_CELL_DATA': (state, { payload }) => {\n    delete state[payload]\n  }\n})\n","import { configureStore } from 'redux-starter-kit'\n\nimport globalReducer from './globalReducer'\nimport tableReducer from './tableReducer'\n\n\nconst appStoreGen = () => (\n  configureStore({\n    reducer: {\n      global: globalReducer,\n      table: tableReducer,\n    }\n  })\n)\n\nconst appStore = appStoreGen()\n\n\nexport default appStore\nexport { appStoreGen }\n","import { createAction } from 'redux-starter-kit'\n\n\nexport const setActiveCell = createAction('SET_ACTIVE_CELL')\nexport const displayCellInputter = createAction('SET_CELL_INPUTTER')\nexport const closeCellInputter = createAction('UNSET_CELL_INPUTTER')\n","import appStore from '~/reducers/'\nimport { clearCellData, replaceCellData } from '~/actions/tableActions'\n\n\nclass ReduxConnect {\n  constructor(store=appStore) {\n    const { global: globalState } = store.getState()\n    this.store = store\n    this.rows = globalState.rows\n    this.columns = globalState.columns\n  }\n\n  get table() {\n    return this.store.getState().table\n  }\n\n  get locations() {\n    return Object.keys(this.table)\n  }\n\n  getCellResult(location) {\n    const data = this.table[location]\n    return data && data.result\n  }\n\n  replaceCellData(location, entered, result) {\n    this.store.dispatch(replaceCellData(location, entered, result))\n  }\n\n  clearCell(location) {\n    this.store.dispatch(clearCellData(location))\n  }\n}\n\nexport default ReduxConnect\nexport { appStore }\n","import { TOKENS as t } from './Lexer'\n\n\nclass AST {\n  constructor(name) {\n    this._name = name\n  }\n\n  eval() {\n    throw new Error('Implement method.')\n  }\n}\n\nclass TextNode extends AST {\n  constructor(textNode) {\n    super('TextNode')\n    this.node = textNode\n  }\n\n  eval() {\n    return this.node.text\n  }\n}\n\nclass StringNode extends AST {\n  constructor(node) {\n    super('StringNode')\n    this.node = node\n  }\n\n  eval() {\n    return this.node.value\n  }\n}\n\nclass NumberNode extends AST {\n  constructor(node) {\n    super('NumberNode')\n    this.node = node\n  }\n\n  eval() {\n    return this.node.value\n  }\n}\n\nclass CellNode extends AST {\n  constructor(token) {\n    super('CellNode')\n    this.cell = token\n  }\n\n  get location() {\n    return this.cell.value\n  }\n}\n\nclass CellRange extends AST {\n  constructor(leftCell, rightCell) {\n    super('CellRange')\n    this.leftCell = leftCell\n    this.rightCell = rightCell\n  }\n}\n\nclass UnaryOp extends AST {\n  constructor(opNode, expr) {\n    super('UnaryOp')\n    this.opNode = opNode\n    this.expr = expr\n  }\n\n  eval(evaluatedExpr) {\n    if (this.opNode.type === t.PLUS) {\n      return evaluatedExpr\n    } else if (this.opNode.type === t.MINUS) {\n      return -evaluatedExpr\n    }\n  }\n}\n\nclass FuncOp extends AST {\n  constructor(funcNode, argNodes) {\n    super('FuncOp')\n    this.funcNode = funcNode\n    this.argNodes = argNodes\n  }\n\n  eval(evaluatedArgs) {\n    const fn = this.funcNode.value\n    return fn(...evaluatedArgs)\n  }\n}\n\nclass BinaryOp extends AST {\n  constructor(leftNode, opNode, rightNode) {\n    super('BinaryOp')\n    this.leftNode = leftNode\n    this.opNode = opNode\n    this.rightNode = rightNode\n  }\n\n  eval(left, right) {\n    switch(this.opNode.type) {\n      case t.PLUS:\n        return left + right\n      case t.MINUS:\n        return left - right\n      case t.DIV:\n        if (right === 0) {\n          throw new Error(`Division by zero: ${left}/${right}`)\n        } else {\n          return left / right\n        }\n      case t.MULT:\n        return left * right\n      default:\n        throw new Error(`Unsupported operator \"${this.token.text}\"`)\n    }\n  }\n}\n\nexport {\n  TextNode,\n  StringNode,\n  NumberNode,\n  CellNode,\n  CellRange,\n  BinaryOp,\n  UnaryOp,\n  FuncOp,\n}\n","import { TOKENS as t } from './Lexer'\nimport {\n  TextNode,\n  StringNode,\n  NumberNode,\n  CellNode,\n  CellRange,\n  BinaryOp,\n  UnaryOp,\n  FuncOp\n} from './ast'\n\n\nclass Parser {\n  constructor(tokens) {\n    this.index = 0\n    this.tokens = tokens\n    this.curr = this.tokens[0]\n    this.ast = null\n  }\n\n  parse() {\n    switch (this.peekType()) {\n      case t.TEXT:\n        this.ast = this.text()\n        break\n      case t.NUMBER:\n        this.ast = this.number()\n        break\n      default:\n        this.equals()\n        this.ast = this.expr()\n        break\n    }\n\n    if (this.curr !== null) {\n      throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n    }\n\n    return this.ast\n  }\n\n  expr() {\n    // expr : term ( ( PLUS | MINUS ) term ) *\n    let node, operator, right\n\n    node = this.term()\n\n    while ( [t.PLUS, t.MINUS].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.term()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  term() {\n    // term : factor ( ( MULT | DIV ) factor ) *\n    let node, operator, right\n\n    node = this.factor()\n\n    while ( [t.MULT, t.DIV].includes(this.peekType()) ) {\n      operator = this.operator()\n      right = this.factor()\n      node = new BinaryOp(node, operator, right)\n    }\n\n    return node\n  }\n\n  factor() {\n    // factor : ( PLUS | MINUS ) ( NUMBER | CELL )\n    //          | LPAREN expr RPAREN\n    //          | FUNCTION LPAREN list RPAREN\n    switch (this.peekType()) {\n      case t.LPAREN:\n        return this.enclosedExpr()\n      case t.PLUS:\n      case t.MINUS:\n        return this.unaryOp()\n      case t.NUMBER:\n        return this.number()\n      case t.CELL:\n        return this.cell()\n      case t.FUNCTION:\n        return this.func()\n      case t.RPAREN:\n        throw new Error(`Unexpected term at index ${this.index}: \"${this.curr.text}\"`)\n      default:\n        throw new Error('Missing factor')\n    }\n  }\n\n  enclosedExpr() {\n    this.lparen()\n    const node = this.expr()\n    this.rparen()\n    return node\n  }\n\n  cell() {\n    if (this.peekType() !== t.CELL) {\n      throw new Error('Missing cell node')\n    }\n\n    const node = new CellNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  cellRange() {\n    let left, right\n\n    if (!this.isCellRange()) {\n      throw new Error('Missing cell range')\n    }\n\n    left = new CellNode(this.curr)\n    this.consume() // skip colon\n    this.consume()\n    right = new CellNode(this.curr)\n    this.consume()\n\n    if (right.location < left.location) {\n      [left, right] = this.invertCellRange(left, right)\n    }\n\n    return new CellRange(left, right)\n  }\n\n  invertCellRange(left, right) {\n    this.tokens[this.index - 2] = right.cell\n    this.tokens[this.index] = left.cell\n    let temp = left\n    left = right\n    right = temp\n    return [left, right]\n  }\n\n  func() {\n    if (this.peekType() !== t.FUNCTION) {\n      throw new Error('Missing function')\n    }\n\n    const func = this.curr\n    this.consume()\n    this.lparen()\n    const args = this.list()\n    this.rparen()\n    return new FuncOp(func, args)\n  }\n\n  list() {\n    const list = []\n    let node\n\n    node = this.listNode()\n    list.push(node)\n\n    while (this.peekType() === t.COMMA) {\n      this.consume() // skip comma token\n      node = this.listNode()\n      list.push(node)\n    }\n\n    return list\n  }\n\n  listNode() {\n    if (this.isCellRange()) {\n      return this.cellRange()\n    } else if (this.peekType() === t.STRING) {\n      return this.string()\n    } else {\n      return this.expr()\n    }\n  }\n\n  text() {\n    let node\n\n    if (this.peekType() !== t.TEXT) {\n      throw new Error('Missing string')\n    }\n\n    node = new TextNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  string() {\n    const node = new StringNode(this.curr)\n    this.consume()\n    return node\n  }\n\n  number() {\n    if (this.peekType() === t.NUMBER) {\n      const node = new NumberNode(this.curr)\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing number')\n    }\n  }\n\n  operator() {\n    if ([t.PLUS, t.MINUS, t.MULT, t.DIV].includes(this.peekType())) {\n      const node = this.curr\n      this.consume()\n      return node\n    } else {\n      throw new Error('Missing operator')\n    }\n  }\n\n  equals() {\n    if (this.peekType() !== t.EQUALS) {\n      throw new Error('Missing equals sign')\n    }\n\n    this.consume()\n  }\n\n  lparen() {\n    if (this.peekType() !== t.LPAREN) {\n      throw new Error('Missing left parenthesis')\n    }\n\n    this.consume()\n  }\n\n  rparen() {\n    if (this.peekType() !== t.RPAREN) {\n      throw new Error('Missing right parenthesis')\n    }\n\n    this.consume()\n  }\n\n  unaryOp() {\n    if (![t.PLUS, t.MINUS].includes(this.peekType())) {\n      throw new Error('Missing unary operator')\n    }\n\n    const curr = this.curr\n    this.consume()\n    const node = new UnaryOp(curr, this.factor())\n    return node\n  }\n\n  consume() {\n    if (this.index < this.tokens.length - 1) {\n      this.index++\n      this.curr = this.tokens[this.index]\n    } else {\n      this.curr = null\n    }\n  }\n\n  isCellRange() {\n    return (\n      this.peekType(0) === t.CELL\n      && this.peekType(1) === t.COLON\n      && this.peekType(2) === t.CELL\n    )\n  }\n\n  isString() {\n    return (\n      this.peekType(0) === t.DQUOTE\n      && this.peekType(1) === t.TEXT\n      && this.peekType(2) === t.DQUOTE\n    )\n  }\n\n  peekType(stepsAhead) {\n    if (stepsAhead) {\n      if (stepsAhead < 0) {\n        throw new Error('peak ahead index must be positive')\n      }\n\n      const index = this.index + stepsAhead\n\n      if (index < this.tokens.length) {\n        return this.tokens[index].type\n      }\n    } else {\n      return this.curr && this.curr.type\n    }\n  }\n}\n\nexport default Parser\n","import { Lexer } from './Lexer'\nimport { parseLocation, getColumnLabel } from '~/library/utils'\nimport graph from '~/formulas/graph'\nimport Parser from './Parser'\nimport ReduxConnect from './ReduxConnect'\n\n\nconst ERR_DIVISION_BY_ZERO = '#DIV/0!'\nconst ERR_CIRCULAR_REFERENCE = '#REF!'\nconst ERR_GENERIC = '#ERROR!'\n\nclass Interpreter {\n  constructor(location) {\n    this.location = location\n    this.error = null\n    this.cache = {}\n    this.result = null\n    this.state = new ReduxConnect()\n  }\n\n  interpret(input) {\n    const vertex = graph.addVertex(this.location, input)\n    let lexer, parser\n\n    try {\n      lexer = new Lexer(input)\n      parser = new Parser( lexer.getTokens() )\n      vertex.ast = parser.parse()\n      graph.recalculate(this.location)\n      this.result = vertex.result\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      return this.result\n    }\n\n    this.error = vertex.error\n    return this.result\n  }\n\n  visitAST(location) {\n    const vertex = graph.getVertex(location)\n\n    if (!vertex.ast) {\n      return vertex.result\n    }\n\n    try {\n      this.result = vertex.result = this.visitNode(vertex.ast)\n    } catch (error) {\n      this.error = vertex.error = error\n      this.result = vertex.result = this.errorResponse()\n      throw error\n    }\n\n    return this.result\n  }\n\n  visitNode(node) {\n    switch (node._name) {\n      case 'NumberNode':\n        return this.NumberNode(node)\n      case 'CellNode':\n        return this.CellNode(node)\n      case 'TextNode':\n        return this.TextNode(node)\n      case 'StringNode':\n        return this.StringNode(node)\n      case 'CellRange':\n        return this.CellRange(node)\n      case 'FuncOp':\n        return this.FuncOp(node)\n      case 'BinaryOp':\n        return this.BinaryOp(node)\n      case 'UnaryOp':\n        return this.UnaryOp(node)\n      default:\n        const nodeName = node._name || (node.constructor || {}).name\n        throw new Error(`Unrecognized AST node ${nodeName}`)\n    }\n  }\n\n  TextNode(node) {\n    return node.eval()\n  }\n\n  StringNode(node) {\n    return node.eval()\n  }\n\n  NumberNode(node) {\n    return node.eval()\n  }\n\n  CellNode(node) {\n    return this.getCellResult(node.location)\n  }\n\n  CellRange(node) {\n    const [leftColIndex, leftRowIndex] = parseLocation(node.leftCell.location)\n    const [rightColIndex, rightRowIndex] = parseLocation(node.rightCell.location)\n    const colIndexStart = Math.min(leftColIndex, rightColIndex)\n    const colIndexEnd = Math.max(leftColIndex, rightColIndex)\n    const rowIndexStart = Math.min(leftRowIndex, rightRowIndex)\n    const rowIndexEnd = Math.max(leftRowIndex, rightRowIndex)\n    const list = []\n\n    for (let rowI = rowIndexStart; rowI <= rowIndexEnd; rowI++) {\n      for (let colI = colIndexStart; colI <= colIndexEnd; colI++) {\n        const location = `${getColumnLabel(colI)}-${rowI + 1}`\n        const result = this.getCellResult(location)\n        list.push(result)\n      }\n    }\n\n    return list\n  }\n\n  getCellResult(otherLocation) {\n    let result\n\n    if (!this.isLocationValid(otherLocation)) {\n      throw new Error('Location out of bounds')\n    }\n\n    if (this.cache[otherLocation] !== undefined) {\n      return this.cache[otherLocation]\n    }\n\n    result = graph.visitCell(otherLocation)\n    this.cache[otherLocation] = result\n    return result\n  }\n\n  UnaryOp(node) {\n    const result = this.visitNode(node.expr)\n    return node.eval(result)\n  }\n\n  FuncOp(node) {\n    const evaluatedArgs = []\n\n    for (let childNode of node.argNodes) {\n      const result = this.visitNode(childNode)\n\n      if (childNode._name === 'CellRange') {\n        evaluatedArgs.push(...result)\n      } else {\n        evaluatedArgs.push(result)\n      }\n    }\n\n    return node.eval(evaluatedArgs)\n  }\n\n  BinaryOp(node) {\n    const left = this.visitNode(node.leftNode)\n    const right = this.visitNode(node.rightNode)\n    return node.eval(left, right)\n  }\n\n  isLocationValid(location) {\n    const [colIndex, rowIndex] = parseLocation(location)\n\n    if (Math.min(colIndex, rowIndex) < 0) { return false }\n    if (colIndex >= this.state.columns) { return false }\n    if (rowIndex >= this.state.rows) { return false }\n    return true\n  }\n\n  errorResponse() {\n    const { message: errorMsg } = this.error\n\n    if (errorMsg.match(/division by zero/i)) {\n      return ERR_DIVISION_BY_ZERO\n    } else if (errorMsg.match(/circular reference/i)) {\n      return ERR_CIRCULAR_REFERENCE\n    } else {\n      return ERR_GENERIC\n    }\n  }\n}\n\nexport default Interpreter\nexport {\n  ERR_DIVISION_BY_ZERO,\n  ERR_CIRCULAR_REFERENCE,\n  ERR_GENERIC,\n}\n","import ReduxConnect from './ReduxConnect'\nimport Interpreter from './Interpreter'\n\n\nclass Vertex {\n  constructor(entered) {\n    this.entered = entered\n    this.error = null\n    this.result = null\n    this.ast = null\n  }\n}\n\nclass Graph {\n  constructor() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  recalculate(location) {\n    this.setPendingNodes()\n    this.dfs(location)\n    this.updateStore()\n  }\n\n  setPendingNodes() {\n    this.pending = new Set()\n\n    Object.keys(this.adj).forEach(vertex => {\n      this.pending.add(vertex)\n    })\n  }\n\n  dfs(location) {\n    while (this.pending.size > 0) {\n      if (!location) {\n        location = [...this.pending][0]\n      }\n\n      try {\n        this.visited = new Set([location])\n        const interpreter = new Interpreter(location)\n        interpreter.visitAST(location)\n      } catch (error) {}\n\n      this.visited.forEach(location => this.pending.delete(location))\n      location = null\n    }\n\n    this.visited = null\n    this.pending = null\n  }\n\n  visitCell(location) {\n    if (!this.hasVertex(location)) {\n      return 0\n    }\n\n    this.testPathCycle(location)\n    this.pending.delete(location)\n    this.visited.add(location)\n    const interpreter = new Interpreter(location)\n    const result = interpreter.visitAST(location)\n    this.visited.delete(location)\n    return result\n  }\n\n  getCellResult(location) {\n    if (location in this.adj) {\n      return graph.adj[location].result\n    } else {\n      return ''\n    }\n  }\n\n  testPathCycle(location) {\n    if (this.visited.has(location)) {\n      throw new Error('Circular reference')\n    }\n  }\n\n  updateStore() {\n    const locationKeys = new Set(this.store.locations)\n\n    for (let [location, vertex] of Object.entries(this.adj)) {\n      const { entered, result } = vertex\n\n      locationKeys.delete(location)\n\n      if (result !== this.store.getCellResult(location)) {\n        this.store.replaceCellData(location, entered, result)\n      }\n    }\n\n    for (let location of locationKeys) {\n      this.store.clearCell(location)\n    }\n  }\n\n  addVertex(location, entered) {\n    const vertex = new Vertex(entered)\n    this.adj[location] = vertex\n    return vertex\n  }\n\n  hasVertex(location) {\n    return location in this.adj\n  }\n\n  getVertex(location) {\n    this.testMissingLocation(location)\n    return this.adj[location]\n  }\n\n  delVertex(location) {\n    if (location in this.adj) {\n      delete this.adj[location]\n      this.recalculate()\n    }\n  }\n\n  resetAll() {\n    this.adj = {}\n    this.pending = null\n    this.visited = null\n    this.store = new ReduxConnect()\n  }\n\n  testMissingLocation(location) {\n    if (!this.hasVertex(location)) {\n      throw new Error('Missing location')\n    }\n  }\n}\n\nconst graph = new Graph()\n\n\nexport default graph\nexport {\n  Vertex,\n  Graph,\n}\n","import graph from '~/formulas/graph'\nimport Interpreter from '../formulas/Interpreter'\n\n\nexport function setCellData(location, entered) {\n  const interpreter = new Interpreter(location)\n  const result = interpreter.interpret(entered)\n\n\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function replaceCellData(location, entered, result) {\n  return {\n    type: 'SET_CELL_DATA',\n    payload: { location, data: { entered, result } },\n  }\n}\n\nexport function clearCellData(location) {\n  return (dispatch, getState) => {\n    const value = getState().table[location]\n\n    graph.delVertex(location)\n\n    if (value === undefined) {\n      return Promise.resolve()\n    }\n\n\n    return Promise.resolve(dispatch({\n      type: 'DELETE_CELL_DATA',\n      payload: location,\n    }))\n  }\n}\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { css, jsx } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { setCellData, clearCellData } from '~/actions/tableActions'\nimport { parseLocation, getColumnLabel } from '~/library/utils'\nimport Lexer from '~/formulas/Lexer'\nimport Suggestions from './Suggestions'\nimport { InputContext } from './InputContext'\nimport { closeCellInputter } from '~/actions/globalActions'\n\n\nconst INPUT_PADDING_RIGHT = 15\n\nconst Root = styled.div`\n  position: fixed;\n`\n\nconst Input = styled.input`\n  align-items: center;\n  background-color: white;\n  border: 2px solid salmon;\n  box-shadow: 0 0 5px ${props => props.theme.colors.shadow};\n  box-sizing: border-box;\n  display: flex;\n  font-size: 13px;\n  height: 100%;\n  outline: none;\n  padding: 2px;\n  width: 100%;\n`\n\nconst HiddenInput = styled(Input)`\n  position: absolute;\n  margin-top: -100vh;\n  visibility: hidden;\n`\n\nexport class CellInputter extends React.PureComponent {\n\n  static propTypes = {\n    // redux\n    cellRect: PropTypes.object.isRequired,\n    clearCellData: PropTypes.func.isRequired,\n    closeCellInputter: PropTypes.func.isRequired,\n    columns: PropTypes.number.isRequired,\n    entered: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    rows: PropTypes.number.isRequired,\n    setCellData: PropTypes.func.isRequired,\n    willReplaceValue: PropTypes.bool.isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.setIsFuncSelectorVisible = this.setIsFuncSelectorVisible.bind(this)\n    this.setInputValue = this.setInputValue.bind(this)\n  }\n\n  state = {\n    tokens: [],\n    isFuncSelectorVisible: false,\n    inputValue: '',\n    keyEvent: { key: '' },\n    cursorPos: 0,\n  }\n\n  refInput = React.createRef()\n  refHiddenInput = React.createRef()\n\n  componentDidMount() {\n    const entered = this.props.willReplaceValue ? '' : this.props.entered\n    this.focusInputTag()\n    this.setInputValue(entered)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.keyEvent !== this.state.keyEvent) {\n      this.setFocus(this.state.keyEvent.key)\n      this.keyActions()\n    }\n\n    if (prevState.inputValue !== this.state.inputValue) {\n      this.tokenizeInputValue()\n    }\n  }\n\n  keyActions() {\n    const { key } = this.state.keyEvent\n\n    if (this.state.isFuncSelectorVisible) {\n      switch (key) { // eslint-disable-line\n        case 'Escape':\n          this.props.closeCellInputter()\n          break\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          this.setState({ cursorPos: this.refInput.current.selectionEnd })\n      }\n    } else {\n      switch (key) { // eslint-disable-line\n        case 'Escape':\n          this.props.closeCellInputter()\n          break\n        case 'Enter':\n          this.setCellValue()\n          this.props.closeCellInputter()\n          break\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          this.setState({ cursorPos: this.refInput.current.selectionEnd })\n      }\n    }\n  }\n\n  tokenizeInputValue() {\n    const { inputValue } = this.state\n    const lexer = new Lexer(inputValue)\n    const tokens = lexer.getTokens()\n    this.setState({ tokens })\n  }\n\n  focusInputTag() {\n    const inputEl = this.refInput.current\n\n    setImmediate(() => {\n      inputEl.focus()\n      inputEl.selectionStart = inputEl.value.length\n    })\n  }\n\n  setFocus() {\n    const { keyEvent: { key } } = this.state\n    const { location } = this.props\n    const [colIndex, rowIndex] = parseLocation(location)\n    let el, elId\n\n    if (this.state.isFuncSelectorVisible) {\n      if (key === 'Escape') {\n        elId = `[data-cell=\"result\"][data-location=\"${location}\"]`\n      } else {\n        return\n      }\n    } else {\n      if (key === 'Tab') {\n        elId = `[data-cell=\"result\"][data-location=\"${location}\"]`\n      } else if (key === 'Enter') {\n        const nextRowIndex = Math.min(this.props.rows - 1, rowIndex + 1)\n        const colLabel = getColumnLabel(colIndex)\n        const rowLabel = '' + (nextRowIndex + 1)\n        const endLocation = `${colLabel}-${rowLabel}`\n        elId = `[data-cell=\"result\"][data-location=\"${endLocation}\"]`\n      } else if (key === 'Escape') {\n        elId = `[data-cell=\"result\"][data-location=\"${location}\"]`\n      } else {\n        elId = `[data-cell=\"input\"][data-location=\"${location}\"]`\n      }\n    }\n\n    el = document.querySelector(elId)\n    if (document.activeElement !== el) { el.focus() }\n  }\n\n  setCellValue() {\n    const { location } = this.props\n    const { inputValue } = this.state\n\n    if (this.isWhitespace(inputValue)) {\n      this.props.clearCellData(location)\n      return\n    }\n\n    const cellValue = inputValue.length > 0 && inputValue[0] === '='\n      // ? inputValue.toUpperCase()\n      ? inputValue\n      // NOTE: fix!!\n      : inputValue\n\n    this.props.setCellData(location, cellValue)\n  }\n\n  isWhitespace(text) {\n    return text.length === 0 || Boolean(text.match(/^\\s+$/))\n  }\n\n  setIsFuncSelectorVisible(isFuncSelectorVisible) {\n    this.setState({ isFuncSelectorVisible })\n  }\n\n  setInputValue(inputValue, cursorPos) {\n    const inputEl = this.refInput.current\n\n    this.setState({ inputValue, cursorPos: inputValue.length }, () => {\n      inputEl.focus()\n      inputEl.selectionStart = cursorPos\n      inputEl.selectionEnd = cursorPos\n    })\n  }\n\n  handleOnChange(event) {\n    const { target: { value } } = event\n    const cursorPos = event.target.selectionStart\n    this.setState({ inputValue: value, cursorPos })\n  }\n\n  handleOnKeyDown(event) {\n    const { key, target: { value } } = event\n\n    if (this.state.isFuncSelectorVisible && key === 'Tab') {\n      event.preventDefault()\n    }\n\n    this.setState({ keyEvent: { key }, inputValue: value })\n  }\n\n  handleOnBlur(event) {\n    if (this.state.isFuncSelectorVisible) { return }\n\n    this.setState({ inputValue: event.target.value }, () => {\n      this.setCellValue()\n      this.props.closeCellInputter()\n    })\n  }\n\n  getRootStyle() {\n    const { top, left, width: cellWidth, height: cellHeight } = this.props.cellRect\n    const { current: hiddenInputEl } = this.refHiddenInput\n    let width, height\n\n    if (hiddenInputEl) {\n      const textWidth = hiddenInputEl.scrollWidth\n      const hiddenRect = hiddenInputEl.getBoundingClientRect()\n      width = textWidth > hiddenRect.width\n        ? Math.max(cellWidth, textWidth + INPUT_PADDING_RIGHT)\n        : cellWidth\n      height = cellHeight\n    } else {\n      width = cellWidth\n      height = cellHeight\n    }\n\n\n    return {\n      top,\n      left,\n      height,\n      width,\n    }\n  }\n\n  render() {\n    const inputEl = this.refInput.current\n    const { width, height } = this.props.cellRect\n\n    if (!this.props.location) { return null }\n\n    return (\n      <InputContext.Provider\n        value={{\n          inputRect: inputEl && inputEl.getBoundingClientRect(),\n          setIsFuncSelectorVisible: this.setIsFuncSelectorVisible,\n          setInputValue: this.setInputValue,\n          keyEvent: this.state.keyEvent,\n          inputValue: this.state.inputValue,\n        }}\n      >\n        <Root\n          css={this.getRootStyle()}\n        >\n          <HiddenInput\n            ref={this.refHiddenInput}\n            defaultValue={this.state.inputValue}\n            css={{\n              width: width - INPUT_PADDING_RIGHT,\n              height,\n            }}\n          />\n          <Input\n            ref={this.refInput}\n            data-cell='input'\n            data-location={this.props.location}\n            value={this.state.inputValue}\n            onChange={this.handleOnChange}\n            onKeyDown={this.handleOnKeyDown}\n            onBlur={this.handleOnBlur}\n          />\n          <Suggestions\n            tokens={this.state.tokens}\n            cursorPos={this.state.cursorPos}\n          />\n        </Root>\n      </InputContext.Provider>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {\n    global: {\n      cellInputter: {\n        location, willReplaceValue, cellRect\n      },\n      rows,\n      columns,\n    }\n  } = state\n  const cell = state.table[location]\n  const entered = cell ? cell.entered : ''\n\n  return { location, willReplaceValue, cellRect, entered, rows, columns }\n}\n\nconst mapDispatchToProps = { setCellData, clearCellData, closeCellInputter }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CellInputter)\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport { InputContext } from './InputContext'\n\n\nconst Root = styled.div`\n  background: ${props => props.theme.colors.dropdown.normal};\n  margin-top: 1px;\n  box-shadow: 0 0 5px ${props => props.theme.colors.shadow};\n  border: 1px solid ${props => props.theme.colors.dropdown.active};\n  width: 300px;\n  padding: 6px 8px;\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  padding-top: 12px;\n  font-size: 12px;\n`\n\nconst P = styled.p`\n  line-height: 1em;\n  font-size: 13px;\n`\n\nconst Hr = styled.hr`\n  border: 0;\n  border-top: 1px solid ${props => props.theme.colors.dropdown.active};\n`\n\nclass FuncDescription extends React.PureComponent {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    cursorPos: PropTypes.number,\n    fnScopes: PropTypes.array,\n  }\n\n  getFnScope() {\n    const { fnScopes, cursorPos } = this.props\n    let currScope\n\n    for (let scope of fnScopes) {\n      if (cursorPos >= scope.startIndex + 1) {\n        currScope = scope\n      } else {\n        break\n      }\n    }\n\n    if (currScope && currScope.endIndex === null) { return currScope}\n    if (currScope && cursorPos - 1 < currScope.endIndex) { return currScope }\n    return null\n  }\n\n  getFnNode(scope) {\n    const key = scope.fnName.toUpperCase()\n    return formulaFuncs[key]\n  }\n\n  render() {\n    const scope = this.getFnScope()\n    const { inputRect } = this.context\n    if (!inputRect) { return null }\n    const { bottom: top, left } = inputRect\n    let fnNode\n\n    if (!scope) { return null }\n    fnNode = this.getFnNode(scope)\n\n    return (\n      <Root\n        css={{ top, left }}\n      >\n        <Pre\n          css={css`\n            padding-bottom: 6px;\n          `}\n        >\n          {fnNode.definition}\n        </Pre>\n        <Hr />\n        <Subtitle>Example</Subtitle>\n        <Pre>{fnNode.example}</Pre>\n        <Subtitle>Summary</Subtitle>\n        <P>{fnNode.summary}</P>\n      </Root>\n    )\n  }\n}\n\nFuncDescription.propTypes = {\n  cursorPos: PropTypes.number,\n  fnScopes: PropTypes.array,\n}\n\nexport default FuncDescription\n\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport styled from '@emotion/styled'\n\n\nconst NoOp = () => {}\n\nconst Li = styled.li`\n  outline: none;\n`\n\nfunction DropdownItem({ item, index, isActive, onMouseEnter }) {\n  return (\n    <Li\n      tabIndex={0}\n      onMouseEnter={() => onMouseEnter(index)}\n    >\n      {isActive && item.active ? item.active : item.base}\n    </Li>\n  )\n}\n\nDropdownItem.propTypes = {\n  item: PropTypes.shape({\n    base: PropTypes.node.isRequired,\n    active: PropTypes.node,\n  }),\n  index: PropTypes.number.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  onMouseEnter: PropTypes.func,\n}\n\nDropdownItem.defaultProps = {\n  onMouseEnter: NoOp,\n}\n\nexport default DropdownItem\n","\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport InteractiveListItem from './InteractiveListItem'\n\n\nconst Ul = styled.ul`\n  position: fixed;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`\n\nclass InteractiveList extends React.PureComponent {\n\n  static propsTypes = {\n    onMouseEnter: PropTypes.func,\n    items: PropTypes.array.isRequired,\n    top: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    styles: PropTypes.shape({\n      ul: PropTypes.object,\n      li: PropTypes.object,\n    }),\n  }\n\n  renderListItems() {\n    return this.props.items\n      .map((item, index) => (\n        <InteractiveListItem\n          key={index}\n          index={index}\n          item={item.item}\n          style={{...this.props.styles.li}}\n          isActive={item.isActive}\n          onMouseEnter={this.props.onMouseEnter}\n        />\n      ))\n  }\n\n  render() {\n    const { items, top, left, styles } = this.props\n\n    if (items.length === 0) { return null }\n\n    return (\n      <Ul\n        tabIndex={-1}\n        style={{ top, left, ...styles.ul }}\n      >\n        {this.renderListItems()}\n      </Ul>\n    )\n  }\n}\n\nexport default InteractiveList\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport formulaFuncs from '~/formulas/formulaFunctions'\nimport InteractiveList from '~/library/InteractiveList'\nimport Token from '~/formulas/Token'\nimport { InputContext } from './InputContext'\nimport { withTheme } from 'emotion-theming'\n\n\nconst Dialog = styled.dialog`\n  border: 0;\n`\n\nconst baseItemStyle = css`\n  padding: 6px 8px;\n`\n\nconst ItemBaseRoot = styled.div`\n  ${baseItemStyle}\n  background: ${props => props.theme.colors.dropdown.normal};\n`\n\nconst ItemActiveRoot = styled.div`\n  ${baseItemStyle}\n  background: ${props => props.theme.colors.dropdown.active};\n`\n\nconst Pre = styled.pre`\n  line-height: 1em;\n  padding-bottom: 3px;\n  font-size: 14px;\n`\n\nconst Subtitle = styled.div`\n  font-size: 12px;\n`\n\nclass FuncSelector extends React.Component {\n\n  static contextType = InputContext\n\n  static propTypes = {\n    token: PropTypes.instanceOf(Token),\n    colors: PropTypes.object,\n    theme: PropTypes.object,\n  }\n\n  state = {\n    listItems: [],\n    itemIndex: 0,\n    keyEvent: null,\n    isVisible: false,\n  }\n\n  constructor() {\n    super()\n    this.handleOnClick = this.handleOnClick.bind(this)\n    this.setIndex = this.setIndex.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.state.listItems !== nextState.listItems\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.updateContextData(prevState)\n    this.updateListItems(prevProps)\n    this.keyActions()\n  }\n\n  componentWillUnmount() {\n    this.context.setIsFuncSelectorVisible(false)\n  }\n\n  updateListItems(prevProps) {\n    if (prevProps.token === this.props.token) { return }\n\n    this.setState({ itemIndex: 0 }, () => {\n      this.setListItems()\n    })\n  }\n\n  updateContextData(prevState) {\n    const { keyEvent } = this.context\n\n    if (prevState.keyEvent !== keyEvent) {\n      this.setState({ keyEvent })\n      this.keyEventSetIndex(keyEvent)\n    }\n  }\n\n  keyActions() {\n    const { keyEvent } = this.context\n    if (this.state.keyEvent === keyEvent) { return }\n    if (['Enter', 'Tab'].includes(keyEvent.key) && this.state.isVisible) {\n      this.updateInputValue()\n    }\n  }\n\n  updateInputValue() {\n    const currInputValue = this.context.inputValue\n    const { token } = this.props\n    const { fnName } = this.state.listItems[this.state.itemIndex]\n    const rightChunkIndex = token.index + token.text.length\n    const leftChunk = currInputValue.slice(0, token.index)\n    const rightChunk = currInputValue.slice(rightChunkIndex)\n    const newInputValue = `${leftChunk}${fnName}(${rightChunk}`\n    const cursorPos = leftChunk.length + fnName.length + 1\n    this.context.setInputValue(newInputValue, cursorPos)\n  }\n\n  setListItems() {\n    const { token } = this.props\n    const text = token.text.toUpperCase()\n    const listItems = Object\n      .keys(formulaFuncs)\n      .filter(fnName => fnName.startsWith(text))\n      .sort()\n      .map(fnName => ({\n        item: {\n          base: this.itemBase(fnName),\n          active: this.itemActive(fnName),\n        },\n        isActive: false,\n        fnName,\n      }))\n    let isVisible = false\n    let itemIndex\n\n    itemIndex = Math.max(Math.min(listItems.length - 1, this.state.itemIndex), 0)\n\n    if (listItems.length > 0) {\n      listItems[itemIndex].isActive = isVisible = true\n    }\n\n    this.context.setIsFuncSelectorVisible(isVisible)\n    this.setState({ listItems, itemIndex, isVisible })\n  }\n\n  keyEventSetIndex(keyEvent) {\n    let itemIndex = this.state.itemIndex\n\n    switch (keyEvent.key) { // eslint-disable-line default-case\n      case 'ArrowUp':\n          itemIndex = this.state.itemIndex - 1\n        break\n      case 'ArrowDown':\n          itemIndex = this.state.itemIndex + 1\n        break\n    }\n\n    this.setState({ itemIndex }, () => {\n      this.setListItems()\n    })\n  }\n\n  setIndex(itemIndex) {\n    this.setState({ itemIndex }, () => {\n      this.setListItems()\n    })\n  }\n\n  itemBase(fnName) {\n    return (\n      <ItemBaseRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n      </ItemBaseRoot>\n    )\n  }\n\n  itemActive(fnName) {\n    return (\n      <ItemActiveRoot>\n        <Pre>\n          {fnName}\n        </Pre>\n        <Subtitle>\n          {formulaFuncs[fnName].summary}\n        </Subtitle>\n      </ItemActiveRoot>\n    )\n  }\n\n  getListStyles() {\n    const { theme } = this.props\n\n    return {\n      ul: {\n        marginTop: 1,\n        boxShadow: `0 0 5px ${theme.colors.shadow}`,\n        border: `1px solid ${theme.colors.dropdown.active}`,\n        width: 300,\n      }\n    }\n  }\n\n  handleOnClick() {\n    this.updateInputValue()\n  }\n\n  render() {\n    const { listItems, isVisible } = this.state\n    const { inputRect } = this.context\n\n    return (\n      <Dialog\n        open={isVisible}\n        onClick={this.handleOnClick}\n      >\n        <InteractiveList\n          items={listItems}\n          top={Math.round(inputRect.bottom)}\n          left={Math.round(inputRect.left)}\n          styles={this.getListStyles()}\n          onMouseEnter={this.setIndex}\n        />\n      </Dialog>\n    )\n  }\n}\n\nexport default withTheme(FuncSelector)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { TOKENS as t } from '~/formulas/Lexer'\nimport FuncDescription from './FuncDescription'\nimport FuncSelector from './FuncSelector'\n\n\nclass Suggestions extends React.PureComponent {\n\n  static propTypes = {\n    tokens: PropTypes.array.isRequired,\n    cursorPos: PropTypes.number,\n  }\n\n  static defaultProps = {\n    cursorPos: 0,\n  }\n\n  state = {\n    fnScopes: [],\n  }\n\n  componentDidMount() {\n    this.setFnScopes()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.tokens !== this.props.tokens) {\n      this.setFnScopes()\n    }\n  }\n\n  setFnScopes() {\n    const stack = []\n    const fnScopes = []\n\n    for (let token of this.props.tokens) {\n      if (token.type === t.FUNCTION) {\n        const scope = { fnName: token.text, startIndex: token.index, endIndex: null }\n        stack.push(scope)\n        fnScopes.push(scope)\n      } else if (token.type === t.LPAREN) {\n        stack.push('(')\n      } else if (token.type === t.RPAREN) {\n        stack.pop()\n        if (stack.length > 0 && stack[stack.length - 1] !== '(') {\n          const scope = stack.pop()\n          scope.endIndex = token.index - 1\n        }\n      }\n    }\n\n    fnScopes.sort((a, b) => a.startIndex - b.startIndex)\n    this.setState({ fnScopes })\n  }\n\n  getCurrTokenIndex(tokens, cursorPos) {\n    let index\n\n    for (index = 0; index < tokens.length; index++) {\n      const token = tokens[index]\n      const endIndex = token.index + token.text.length\n\n      if (cursorPos > token.index && cursorPos <= endIndex) {\n        break\n      }\n    }\n\n    return index\n  }\n\n  getCompareTokens() {\n    const { tokens, cursorPos } = this.props\n    const index = this.getCurrTokenIndex(tokens, cursorPos)\n    const tokenBefore = index > 0 && tokens[index - 1]\n    const tokenCurr = tokens[index]\n    const tokenAfter = index < tokens.length - 2 && tokens[index + 1]\n    return [ tokenBefore, tokenCurr, tokenAfter ]\n  }\n\n  getFuncSelector() {\n    const [ tokenBefore, tokenCurr, tokenAfter ] = this.getCompareTokens()\n\n    if (this.props.tokens.length < 2) { return null }\n\n    const option1 = (\n      tokenBefore\n      && tokenCurr\n      && tokenAfter\n      && tokenBefore.category === 'operator'\n      && [t.UNKNOWN, t.FUNCTION].includes(tokenCurr.type)\n      && tokenAfter.type !== t.RPAREN\n    )\n\n    const option2 = (\n      tokenBefore\n      && tokenCurr\n      && !tokenAfter\n      && [t.UNKNOWN, t.FUNCTION].includes(tokenCurr.type)\n    )\n\n    if (option1 || option2) {\n      return (\n        <FuncSelector\n            token={tokenCurr}\n        />\n      )\n    }\n  }\n\n  render() {\n    const renderedFuncSelector = this.getFuncSelector()\n\n    if (renderedFuncSelector) {\n      return renderedFuncSelector\n    } else {\n      return (\n        <FuncDescription\n          cursorPos={this.props.cursorPos}\n          fnScopes={this.state.fnScopes}\n        />\n      )\n    }\n  }\n}\n\nexport default Suggestions\n","const colors = {\n  text: '#3D3D3D',\n  cell: {\n    border: '#dfdfdf',\n    borderDark: '#CCC',\n    labelBkg: '#F5F5F5'\n  },\n  dropdown: {\n    normal: '#fafafa',\n    active: '#ebebeb',\n  },\n  primary: {\n    strong: '#E10D75'\n  },\n  field: {\n    background: '#F0F0F0',\n  },\n  shadow: '#939393',\n}\n\nconst breaks = {\n  xs: 0,\n  sm: 420,\n  md: 900,\n  lg: 1200,\n}\n\nconst breakBump = {\n  xs: 'sm',\n  sm: 'md',\n  md: 'lg',\n}\n\nconst queries = {\n  xs: `@media (max-width: ${breaks.sm - 1}px)`,\n  sm: `@media (min-width: ${breaks.sm}px) and (max-width: ${breaks.md - 1}px)`,\n  md: `@media (min-width: ${breaks.md}px) and (max-width: ${breaks.lg - 1}px)`,\n  lg: `@media (min-width: ${breaks.lg}px)`,\n  from: (breakPoint) => (`@media (min-width: ${breaks[breakPoint]}px)`),\n  upTo: (breakPoint) => (`@media (max-width: ${breaks[ breakBump[breakPoint] ] - 1}px)`),\n}\n\nconst theme = {\n  colors,\n  breaks,\n  queries,\n}\n\nexport default theme\n","/* @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nimport theme from './theme'\n\n\nconst globalStyles = css`\n  body {\n    color: ${theme.colors.text};\n    line-height: 1.3em;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  table, th, td {\n    border: 0;\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n\n  td {\n    padding: 0;\n    line-height: 1.2em;\n  }\n\n  pre, p, h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n`\n\nexport default globalStyles\n","import React from 'react'\nimport styled from '@emotion/styled'\n\n\nconst Root = styled.header`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px 0 30px;\n`\n\nfunction Header() {\n  return (\n    <Root>\n      <h3>Spreadsheet App</h3>\n    </Root>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n  font-size: 12px;\n`\n\nfunction ColLabel({ label }) {\n  return (\n    <InnerBorder\n      data-col={label}\n      className='col-label-width col-label-height'\n    >\n      {label}\n    </InnerBorder>\n  )\n}\n\nColLabel.propTypes = {\n  label: PropTypes.string,\n}\n\nexport default ColLabel\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport ColLabel from '../cell/ColLabel'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\nconst InnerBorder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction ColLabelRow({ colLabels }) {\n  const renderCornerCell = () => (\n    <InnerBorder\n      className='row-label-width col-label-height'\n    />\n  )\n\n  const renderLabelCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => (\n      <ColLabel\n        key={i}\n        label={colLabels[i]}\n      />\n    )\n  ))\n\n  return (\n    <Row\n      data-row='header'\n    >\n      {renderCornerCell()}\n      {renderLabelCells()}\n    </Row>\n  )\n}\n\nColLabelRow.propTypes = {\n  colLabels: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default ColLabelRow\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\n\nconst Wrapper = styled.div`\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n  background: ${props => props.theme.colors.cell.labelBkg};\n`\n\nfunction RowLabel({ label }) {\n  return (\n    <Wrapper\n      data-row={label}\n      className='row-label-width row-label-height'\n    >\n      {label}\n    </Wrapper>\n  )\n}\n\nRowLabel.propTypes = {\n  label: PropTypes.number,\n}\n\nexport default RowLabel\n","/* @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core' // eslint-disable-line\nimport { connect } from 'react-redux'\n\nimport { clearCellData } from '~/actions/tableActions'\nimport { displayCellInputter, setActiveCell } from '~/actions/globalActions'\n\n\nconst Wrapper = styled.div`\n  cursor: cell;\n  font-size: 13px;\n  border-right: 1px solid ${props => props.theme.colors.cell.border};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.border};\n`\n\nconst Cell = styled.div`\n  display: flex;\n  align-items: center;\n  outline: none;\n  border: 2px solid transparent;\n  line-height: 1.1em;\n  height: 100%;\n  width: 100%;\n  padding: 2px;\n\n  :focus, :focus-within {\n    border: 2px solid salmon;\n  }\n`\n\nexport class ResultCell extends React.PureComponent {\n  static propTypes = {\n    // props\n    // isFocused: PropTypes.bool,\n    location: PropTypes.string.isRequired,\n    // onDoubleClick: PropTypes.func.isRequired,\n    // onKeyDownEditable: PropTypes.func.isRequired,\n    displayCellInputter: PropTypes.func.isRequired,\n    // redux\n    clearCellData: PropTypes.func.isRequired,\n    // setActiveCell: PropTypes.func.isRequired,\n    result: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n  }\n\n  constructor() {\n    super()\n    this.handleCellOnKeyDown = this.handleCellOnKeyDown.bind(this)\n    this.handleCellOnDoubleClick = this.handleCellOnDoubleClick.bind(this)\n    this.handleCellOnClick = this.handleCellOnClick.bind(this)\n    this.handleWrapperOnClick = this.handleWrapperOnClick.bind(this)\n  }\n\n  refCell = React.createRef()\n\n  // componentDidMount() {\n  //   this.focusCell()\n  // }\n\n  // focusCell() {\n  //   if (this.props.isFocused) { this.refCell.current.focus() }\n  // }\n\n  displayCellInputter(willReplaceValue) {\n    const { location } = this.props\n    const cellDomRect = this.refCell.current.getBoundingClientRect()\n    const cellRect = JSON.parse(JSON.stringify(cellDomRect))\n\n    this.props.displayCellInputter({\n      location,\n      willReplaceValue,\n      cellRect,\n    })\n  }\n\n  handleCellOnKeyDown({ key }) {\n    this.props.setActiveCell(this.props.location)\n\n    if (['Delete', 'Backspace'].includes(key)) {\n      const valueStr = '' + this.props.result\n\n      if (valueStr.length > 0) {\n        this.props.clearCellData(this.props.location)\n      }\n      // key pressed is a printable symbol, ex: 'a', '1', ','\n      // can be further refined, but for now it's fine\n    } else if (key.length === 1) {\n      this.displayCellInputter(true)\n    }\n  }\n\n  handleCellOnDoubleClick() {\n    this.displayCellInputter(false)\n  }\n\n  getStyle() {\n    let style = {}\n\n    if (typeof this.props.result === 'number') {\n      style = {\n        whiteSpace: 'nowrap',\n        textOverflow: 'clip',\n        overflow: 'hidden',\n      }\n    }\n\n    return style\n  }\n\n  handleWrapperOnClick() {\n    this.refCell.current.focus()\n  }\n\n  handleCellOnClick(event) {\n    event.stopPropagation()\n  }\n\n  render() {\n    return (\n      <Wrapper\n        className='row-label-height col-label-width'\n        onClick={this.handleWrapperOnClick}\n      >\n        <Cell\n          ref={this.refCell}\n          data-cell='result'\n          data-location={this.props.location}\n          css={this.getStyle()}\n          tabIndex='0'\n          onClick={this.handleCellOnClick}\n          onKeyDown={this.handleCellOnKeyDown}\n          onDoubleClick={this.handleCellOnDoubleClick}\n        >\n          {this.props.result}\n        </Cell>\n      </Wrapper>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const cell = state.table[ownProps.location]\n  const result = cell ? cell.result : ''\n  return { result }\n}\n\nconst mapDispatchToProps = { clearCellData, displayCellInputter, setActiveCell }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultCell)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport RowLabel from '../cell/RowLabel'\n// import CellData from '../cell/CellData'\nimport CellResult from '../cell/CellResult'\n\n\nconst Row = styled.div`\n  display: flex;\n  width: fit-content;\n`\n\n// function DataRow({ rowNumber, colLabels, activeCell }) {\nfunction DataRow({ rowNumber, colLabels }) {\n  const dataCells = () => (\n    new Array(colLabels.length).fill(0).map((_, i) => {\n      const location = `${colLabels[i]}-${rowNumber}`\n\n      // return (\n      //   <CellData\n      //     key={i}\n      //     isActive={activeCell === location}\n      //     location={location}\n      //   />\n      // )\n      return (\n        <CellResult\n          key={i}\n          location={location}\n        />\n      )\n    })\n  )\n\n  return (\n    <Row\n      data-row={rowNumber}\n    >\n      <RowLabel\n        label={rowNumber}\n      />\n      {dataCells()}\n    </Row>\n  )\n}\n\nDataRow.propTypes = {\n  rowNumber: PropTypes.number,\n  colLabels: PropTypes.arrayOf(PropTypes.string),\n  // activeCell: PropTypes.string,\n}\n\nexport default DataRow\n\n","import { Machine, assign } from 'xstate'\n\nimport { parseLocation, getColumnLabel } from '~/library/utils'\n\n\nfunction getTargetLocation({ rows, columns, rowIndex, colIndex, key }) {\n  switch (key) {\n    case 'ArrowUp':\n      rowIndex = Math.max(0, rowIndex - 1)\n      break\n    case 'ArrowRight':\n      colIndex = Math.min(columns - 1, colIndex + 1)\n      break\n    case 'ArrowDown':\n    case 'Enter':\n      rowIndex = Math.min(rows - 1, rowIndex + 1)\n      break\n    case 'ArrowLeft':\n      colIndex = Math.max(0, colIndex - 1)\n      break\n    default:\n      return null\n  }\n\n  const colLabel = getColumnLabel(colIndex)\n  const rowLabel = '' + (rowIndex + 1)\n\n  return `${colLabel}-${rowLabel}`\n}\n\nfunction focusTargetCell(ctx) {\n  if (!ctx.endLocation) { return Promise.resolve(false) }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const id = `[data-location=\"${ctx.endLocation}\"]`\n      const cell = document.querySelector(id)\n      if (cell) { cell.focus() }\n      resolve(true)\n    }, 0)\n  })\n}\n\nconst state = {\n  id: 'keyboardNav',\n  initial: 'idle',\n  context: {\n    columns: null,\n    rows: null,\n    key: null,\n    colIndex: null,\n    rowIndex: null,\n    endLocation: null,\n    wasFocused: false,\n  },\n  states: {\n    idle: {\n      on: {\n        'MOVE_FOCUS': {\n          actions: ['setNewContext', 'calcTargetLocation'],\n          target: 'focusTarget',\n        }\n      }\n    },\n    focusTarget: {\n      invoke: {\n        src: focusTargetCell,\n        onDone: {\n          actions: assign({ wasFocused: (ctx, event) => event.data }),\n          target: 'idle',\n        },\n      },\n    },\n  },\n}\n\nconst actions = {\n  actions: {\n    setNewContext: assign((ctx, { key, location }) => {\n      const [colIndex, rowIndex] = parseLocation(location)\n      return { colIndex, rowIndex, key }\n    }),\n    calcTargetLocation: assign({\n      endLocation: (ctx) => {\n        return getTargetLocation(ctx)\n      }\n    }),\n  },\n}\n\nfunction getKeyboardNavMachine(rows, columns) {\n  const newContext = {\n    ...state.context,\n    columns,\n    rows,\n  }\n\n  return Machine(state, actions, newContext)\n}\n\nexport {\n  state,\n  actions,\n  getTargetLocation,\n  focusTargetCell,\n}\n\nexport default getKeyboardNavMachine\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport { interpret } from 'xstate'\n\nimport ColLabelRow from './ColLabelRow'\nimport DataRow from './DataRow'\nimport { getColumnNames } from '~/library/utils'\nimport getKeyboardNavMachine from './keyboardNavMachine'\n\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n  border-top: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-left: 2px solid ${props => props.theme.colors.cell.borderDark};\n  border-right: 1px solid ${props => props.theme.colors.cell.borderDark};\n  border-bottom: 1px solid ${props => props.theme.colors.cell.borderDark};\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .row-label-width {\n    width: 34px;\n  }\n\n  .row-label-height {\n    min-height: 28px;\n  }\n\n  .col-label-width {\n    width: 140px;\n  }\n\n  .col-label-height {\n    min-height: 26px;\n  }\n`\n\nexport class Table extends React.PureComponent {\n  static propTypes = {\n    activeCell: PropTypes.string,\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleTableOnClick = this.handleTableOnClick.bind(this)\n    this.handleTableOnKeyDown = this.handleTableOnKeyDown.bind(this)\n    this.colLabels = getColumnNames(props.columns)\n  }\n\n  keyboardNavMachine = getKeyboardNavMachine(this.props.rows, this.props.columns)\n  focusService = interpret(this.keyboardNavMachine)\n\n  componentDidMount() {\n    this.focusService.start()\n  }\n\n  componentWillUnmount() {\n    this.focusService.stop()\n  }\n\n  handleTableOnClick(event) {\n    event.stopPropagation()\n  }\n\n  handleTableOnKeyDown(event) {\n    event.stopPropagation()\n    this.moveFocus(event.key, event.target.dataset.location)\n  }\n\n  moveFocus(key, location) {\n    this.focusService.send({ type: 'MOVE_FOCUS', key, location })\n  }\n\n  renderColLabelRow(i) {\n    return (\n      <ColLabelRow\n        key={i}\n        rows={this.props.rows}\n        colLabels={this.colLabels}\n      />\n    )\n  }\n\n  renderDataRows(rowNumber) {\n    return (\n      <DataRow\n      key={rowNumber}\n        rowNumber={rowNumber}\n        colLabels={this.colLabels}\n        activeCell={this.props.activeCell}\n      />\n    )\n  }\n\n  renderRows() {\n    return new Array(this.props.rows + 1).fill(0).map((_, i) => {\n      if (i === 0) {\n        return this.renderColLabelRow(i)\n      } else {\n        return this.renderDataRows(i)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Grid\n        data-table='app'\n        onClick={this.handleTableOnClick}\n        onKeyDown={this.handleTableOnKeyDown}\n      >\n        {this.renderRows()}\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { activeCell, rows, columns } = state.global\n  return { activeCell, rows, columns }\n}\n\nexport default connect(mapStateToProps)(Table)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\n\nimport Header from './components/header/Header'\nimport Table from './components/table/Table'\nimport CellInputter from './components/cellInputter/CellInputter'\n\n\nconst Container = styled.div`\n  display: grid;\n  grid:\n    \"left-blank main right-blank\" 100vh\n    / auto minmax(auto, 1000px) auto;\n`\n\nconst Main = styled.main`\n  grid-area: main;\n`\n\nfunction App({ cellInputter }) {\n  return (\n    <Container>\n      <Main>\n        {cellInputter &&  <CellInputter />}\n        <div data-dummy-focus-stop tabIndex=\"0\" />\n        <Header />\n        <Table />\n      </Main>\n    </Container>\n  )\n}\n\nApp.propTypes = {\n  cellInputter: PropTypes.object,\n  setActiveCell: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({ cellInputter: state.global.cellInputter })\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from 'emotion-theming'\nimport { Global } from '@emotion/core'\nimport 'sanitize.css'\n\nimport appStore from './reducers/'\nimport globalStyles from './styles/globalStyles'\nimport theme from './styles/theme'\nimport App from './App'\n\n\nfunction Root() {\n  return (\n    <Provider store={appStore}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Global styles={globalStyles} />\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default Root\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}